{"version":3,"sources":["logo.svg","Content/Dashboard/Profile.js","utils/errorHandling_ts.ts","Content/Copyright.js","Content/Login.js","services/user.js","Content/Templates.tsx","Content/Dashboard/Stats.tsx","utils/dataTableHelper.tsx","services/products.js","Content/Dashboard/Products/List.js","Content/Dashboard/Products/Index.js","Content/Helpers/ToggleSwitch.js","Content/Dashboard/Products/VariantValidationItem.js","Content/Dashboard/Products/Validate.js","Content/Dashboard/MainRoutes.js","Content/SignUp.js","Content/Dashboard/index.js","Content/PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","makeStyles","theme","root","display","flexDirection","alignItems","minHeight","name","fontSize","avatar","width","height","handleErrors","response","ok","Error","statusText","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","paper","marginTop","spacing","margin","backgroundColor","palette","secondary","main","form","submit","SignIn","classes","useState","email","setEmail","password","setPassword","Container","component","maxWidth","CssBaseline","className","Avatar","onSubmit","event","preventDefault","username","fetch","method","headers","body","JSON","stringify","then","res","json","login","TextField","required","fullWidth","id","label","value","onChange","e","target","autoComplete","autoFocus","type","FormControlLabel","control","Checkbox","Button","disabled","length","Grid","container","item","xs","Box","mt","button","Form","Page","Layout","Section","oneThird","Card","title","toArrayOfProps","data","props","result","forEach","item_props_values","prop","renderer","push","getAll","page","page_size","sort","getPending","getApproved","ProductsList","producstGetter","productRows","setProductRows","setPage","count","setCount","handleChangePage","newPage","rows","columns","catch","err","console","log","nextPage","useCallback","previousPage","product","removeUnderline","url","approved","Badge","status","useEffect","tableFooter","Stack","on","alignment","ButtonGroup","segmented","onClick","icon","ChevronLeftMinor","ChevronRightMinor","TextContainer","DataTable","columnContentTypes","headings","footerContent","Products","syncInProgress","setSyncInProgress","selected","setSelected","handleTabChange","selectedTabIndex","actions","loading","tabs","content","panelID","getter","primaryAction","Tabs","onSelect","ToggleSwitch","checked","optionLabels","small","htmlFor","data-yes","data-no","VariantValidationItem","variantData","onFieldChange","active","setActive","toggleActive","section_title","DisplayText","size","capacity_info_activator","plain","Icon","backdrop","source","CircleInformationMajor","FormLayout","Group","condensed","Thumbnail","image_src","ImageMajor","_id","contains_nicotine","items_count","Popover","activator","onClose","ActionList","sections","items","helpText","suffix","capacity","step","Validate","setProduct","pageination_data","setPagination_data","useParams","history","useHistory","syncAndGet","next_id","previous_id","handleFieldChange","variant_id","field","variants","map","handleApprove","approve","goNext","goPrevious","pagination","hasPrevious","hasNext","onNext","onPrevious","primaryFooterAction","onAction","variantDetails","key","Routes","match","useRouteMatch","exact","path","Stats","SignUp","setError","useReducer","state","newState","firstName","lastName","phoneNumber","userInput","setUserInput","handleChange","evt","newValue","toString","sm","justify","Dashboard","searchFieldValue","setSearchFieldValue","handleSearchChange","searchFieldMarkup","TopBar","SearchField","placeholder","topBarMarkup","searchField","navigationMarkup","Navigation","location","ArrowLeftMinor","separator","HomeMajor","TaxMajor","ProductsMajor","SettingsMajor","action","ConversationMinor","accessibilityLabel","style","AppProvider","colors","topBar","background","logo","topBarSource","contextualSaveBarSource","i18n","Polaris","Frame","skipToContent","ContextualSaveBar","save","discard","DropZone","FileUpload","actionTitleImage","actionHintImage","clearButtonLabel","search","navigation","PrivateRoute","isAuthenticated","children","rest","render","to","App","setloggedIn","Login","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.46847e81.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Avatar, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    minHeight: 'fit-content'\r\n  },\r\n  name:{\r\n    fontSize:\"20px\"\r\n  },\r\n  avatar: {\r\n    width: 60,\r\n    height: 60\r\n  }\r\n}));\r\n\r\nconst Profile = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const user = {\r\n    name: 'Jane Doe',\r\n    avatar: '/avatar_11.png',\r\n    bio: 'Director'\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Avatar\r\n        alt=\"Person\"\r\n        className={classes.avatar}\r\n        component={RouterLink}\r\n        src={user.avatar}\r\n        to=\"/settings\"\r\n      />\r\n      <Typography\r\n        className={classes.name}\r\n        variant=\"h5\"\r\n      >\r\n        {user.name}\r\n      </Typography>\r\n      <Typography variant=\"body2\">{user.bio}</Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Profile;","export const handleErrors = (response: Response) => {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}","\r\nimport React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nexport default function Copyright() {\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        {'Copyright © '}\r\n        <Link color=\"inherit\" href=\"https://qwerty.com/\">\r\n          QWERTY\r\n        </Link>{' '}\r\n        {new Date().getFullYear()}\r\n        {'.'}\r\n      </Typography>\r\n    )\r\n  }","import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { login } from \"../services/user\"\r\nimport Copyright from \"./Copyright\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  function validateForm() {\r\n    return email.length > 0 && password.length > 0;\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    login(email, password)\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={e => setEmail(e.target.value)}\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            disabled={!validateForm()}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","import { handleErrors } from \"../utils/errorHandling_ts\"\r\n\r\nexport const login = (username, password)=>{\r\n    return fetch(\"/api/user/login\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({username, password})\r\n    }).then(handleErrors).then(res => res.json())\r\n\r\n}\r\n\r\nexport const register = (data)=>{\r\n    return fetch(\"/api/user/register\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n    }).then(handleErrors).then(res => res.json())\r\n}\r\n\r\nexport const gethi = (data)=>{\r\n    return fetch(\"/api/user/hi\").then(handleErrors).then(res => res.json())\r\n}","import React from \"react\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\n\r\n\r\n\r\nexport default function Templates() {\r\n    let history = useHistory();\r\n    const classes = useStyles();\r\n\r\n    function handleClick() {\r\n        history.push(\"/home\");\r\n    }\r\n    return <div>\r\n        Templates go here\r\n        <Button\r\n            onClick={handleClick}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            startIcon={<AddIcon />}\r\n        >\r\n            New\r\n        </Button>\r\n    </div>\r\n}","import React, { useCallback, useState, useEffect } from 'react';\r\n\r\nimport {\r\n    ButtonGroup,\r\n    Select,\r\n    Layout,\r\n    FormLayout,\r\n    TextField,\r\n    Banner,\r\n    Card,\r\n    Stack,\r\n    Button,\r\n    Collapsible,\r\n    TextContainer,\r\n    Checkbox,\r\n    Icon,\r\n    Autocomplete,\r\n    Scrollable,\r\n    Tag,\r\n    SelectOption,\r\n    ContextualSaveBar,\r\n    Link,\r\n    ResourceList,\r\n    DisplayText,\r\n    Page\r\n} from '@shopify/polaris';\r\nimport TaxRatesList from \"./TaxRates/Index\"\r\nimport { XYPlot, XAxis, YAxis, HorizontalGridLines, LineSeries, RadialChart } from 'react-vis';\r\n\r\nconst Form: React.FC = () => {\r\n    const myData = [{ angle: 30, label: \"asdasd\", color: \"3\" }, { angle: 5 }]\r\n\r\n    return <div>\r\n        <Page>\r\n            <Layout>\r\n                <Layout.Section oneThird>\r\n                    <Card title=\"Some cool stuff coming soon\">\r\n                        <Card.Section>\r\n                            \r\n                        </Card.Section>\r\n                    </Card>\r\n                </Layout.Section>\r\n                <Layout.Section oneThird>\r\n                </Layout.Section>\r\n            </Layout >\r\n        </Page>\r\n    </div >\r\n}\r\n\r\n\r\nexport default Form","export class Column {\r\n    name: string = \"\";\r\n    renderer?: (data: any) => JSX.Element;\r\n}\r\n\r\nexport const toArrayOfProps = <T extends KeyValue>(data: [T], props: Column[]): JSX.Element[][] => {\r\n    const result: JSX.Element[][] = [];\r\n    data.forEach((item: T) => {\r\n        const item_props_values: JSX.Element[] = [];\r\n        props.forEach((prop: Column) => {\r\n            const value: JSX.Element = typeof prop.renderer == \"function\" ? prop.renderer(item) : (item[prop.name] as JSX.Element);\r\n            item_props_values.push(value)\r\n        })\r\n        result.push(item_props_values)\r\n    })\r\n    return result\r\n}\r\n\r\ninterface KeyValue {\r\n    [key: string]: any;\r\n}","import { handleErrors } from \"../utils/errorHandling_ts\"\r\n\r\nexport const getAll = (page = 0, page_size = 10, sort = 'created') => fetch(`/api/products/${page}/${page_size}/${sort}`).then(handleErrors).then(response => response.json())\r\nexport const getPending = (page = 0, page_size = 10, sort = 'created') => fetch(`/api/products/pending/${page}/${page_size}/${sort}`).then(handleErrors).then(response => response.json())\r\nexport const getApproved = (page = 0, page_size = 10, sort = 'created') => fetch(`/api/products/approved/${page}/${page_size}/${sort}`).then(handleErrors).then(response => response.json())\r\n\r\nexport const syncAllProducts = () => fetch(`/api/products/sync_all`).then(handleErrors).then(response => response.json())\r\nexport const syncAndGet = (id) => fetch(`/api/products/sync_and_get/${id}`).then(handleErrors).then(response => response.json())\r\n\r\nexport const approve = (id, data) => {\r\n    return fetch(`/api/products/approve/${id}`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n    }).then(handleErrors).then(res => res.json())\r\n}\r\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { Badge, DataTable, Link, Button, Icon, ButtonGroup, Stack, TextContainer } from '@shopify/polaris';\r\nimport { toArrayOfProps } from \"../../../utils/dataTableHelper\"\r\nimport {\r\n    ChevronLeftMinor,\r\n    ChevronRightMinor\r\n} from '@shopify/polaris-icons';\r\nexport default function ProductsList({ producstGetter }) {\r\n    const page_size = 10 //TODO config\r\n    const [productRows, setProductRows] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n    const [count, setCount] = useState(0);\r\n\r\n    const handleChangePage = (newPage = 0) => {\r\n        if (newPage >= 0 && count / page_size >= newPage) {\r\n            setPage(newPage);\r\n            producstGetter && producstGetter(newPage).then(res => {\r\n                const rows = toArrayOfProps(res.data, columns)\r\n                setCount(res.count)\r\n                setProductRows(rows);\r\n            }).catch(err => { console.log(err) })\r\n        }\r\n    };\r\n\r\n    const nextPage = useCallback(() => {\r\n        handleChangePage(page + 1, count)\r\n    }, [page, count])\r\n    const previousPage = useCallback(() => {\r\n        handleChangePage(page - 1, count)\r\n    }, [page, count])\r\n\r\n\r\n    const columns = [\r\n        { name: \"title\", renderer: (product) => <Link removeUnderline url={`/dashboard/Products/Validate/${product['_id']}`}>{product[\"title\"]}</Link> },\r\n        { name: \"status\", renderer: (product) => product.approved ? <Badge status=\"success\">Approved</Badge> : <Badge status=\"attention\">Pending</Badge> },\r\n        { name: \"vendor\" },\r\n        { name: \"product_type\" },\r\n    ]\r\n\r\n    useEffect(() => {\r\n        handleChangePage()\r\n    }, [producstGetter])\r\n\r\n    const tableFooter = <Stack on alignment=\"center\">\r\n        <ButtonGroup segmented>\r\n            <Button onClick={previousPage} disabled={page == 0} icon={ChevronLeftMinor} />\r\n            <Button onClick={nextPage} disabled={((page + 1) * page_size >= count)} icon={ChevronRightMinor} />\r\n        </ButtonGroup>\r\n        <TextContainer>\r\n            {`Showing ${page * page_size + 1} - ${page * page_size + productRows.length} of ${count} results`}\r\n        </TextContainer>\r\n    </Stack>\r\n\r\n    return <>\r\n        <DataTable\r\n            columnContentTypes={[\r\n                'text',\r\n                'text',\r\n                'text',\r\n                'text'\r\n            ]}\r\n            headings={[\r\n                'Product',\r\n                'Status',\r\n                'Vendor',\r\n                'Type',\r\n            ]}\r\n            rows={productRows}\r\n            footerContent={tableFooter}\r\n        />\r\n    </>\r\n}","import React, { Component, useState, useEffect, useCallback } from 'react';\r\n\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport { Tabs, Card, DataTable, Page, Icon, Button, ButtonGroup, Link } from '@shopify/polaris';\r\nimport { toArrayOfProps, Column } from \"../../../utils/dataTableHelper\"\r\nimport { PlusMinor } from '@shopify/polaris-icons';\r\nimport { syncAllProducts, getAll, getPending, getApproved } from '../../../services/products'\r\nimport ProductsList from './List'\r\n\r\nconst Products = () => {\r\n\r\n  const [syncInProgress, setSyncInProgress] = useState(false);\r\n  const [selected, setSelected] = useState(0);\r\n\r\n  const handleTabChange = useCallback(\r\n    (selectedTabIndex) => setSelected(selectedTabIndex),\r\n    [],\r\n  );\r\n\r\n\r\n  const onSyncProducts = () => {\r\n    setSyncInProgress(true)\r\n    syncAllProducts().then(data => { setSyncInProgress(false) }).catch(e => { })\r\n  }\r\n\r\n  const actions = <ButtonGroup>\r\n    <Button loading={syncInProgress} onClick={onSyncProducts}>Sync products</Button>\r\n  </ButtonGroup>\r\n\r\n  const tabs = [\r\n    {\r\n      id: 'all-products',\r\n      content: 'All',\r\n      panelID: 'all-products',\r\n      getter: getAll\r\n    },\r\n    {\r\n      id: 'pending-products',\r\n      content: 'Pending',\r\n      panelID: 'pending-products',\r\n      getter: getPending\r\n    },\r\n    {\r\n      id: 'approved-products',\r\n      content: 'Approved',\r\n      panelID: 'approved-products',\r\n      getter: getApproved\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Page title=\"Products\"\r\n      fullWidth\r\n      primaryAction={actions}\r\n    >\r\n      <Card>\r\n        <Tabs tabs={tabs} selected={selected} onSelect={handleTabChange}>\r\n          <Card.Section>\r\n            <ProductsList producstGetter={syncInProgress ? null : tabs[selected].getter} />\r\n          </Card.Section>\r\n        </Tabs>\r\n      </Card>\r\n    </Page>\r\n  );\r\n}\r\n\r\nexport default Products;\r\n","import React from 'react';\r\nimport \"./ToggleSwatch.css\"\r\n\r\nconst ToggleSwitch = ({ id, name, checked, onChange, optionLabels = [\"Yes\", \"No\"], small, disabled }) => {\r\n\r\n    return (\r\n        <div className={\"toggle-switch\" + (small ? \" small-switch\" : \"\")}>\r\n            <input\r\n                type=\"checkbox\"\r\n                name={name}\r\n                className=\"toggle-switch-checkbox\"\r\n                id={id}\r\n                checked={checked}\r\n                onChange={e => onChange(e.target.checked)}\r\n                disabled={disabled}\r\n            />\r\n            {id ? (\r\n                <label className=\"toggle-switch-label\" htmlFor={id}>\r\n                    <span\r\n                        className={\r\n                            disabled\r\n                                ? \"toggle-switch-inner toggle-switch-disabled\"\r\n                                : \"toggle-switch-inner\"\r\n                        }\r\n                        data-yes={optionLabels[0]}\r\n                        data-no={optionLabels[1]}\r\n                    />\r\n                    <span\r\n                        className={\r\n                            disabled\r\n                                ? \"toggle-switch-switch toggle-switch-disabled\"\r\n                                : \"toggle-switch-switch\"\r\n                        }\r\n                    />\r\n                </label>\r\n            ) : null}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ToggleSwitch;","import React, { useState, useCallback } from \"react\"\r\nimport {\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport { syncAndGet } from '../../../services/products'\r\nimport { DisplayText, Caption, Icon, Thumbnail, FormLayout, TextField, PageActions, Page, Popover, ActionList, Button, Stack, Card, TextContainer, List, ResourceList } from '@shopify/polaris';\r\nimport ToggleSwitch from \"../../Helpers/ToggleSwitch\"\r\nimport { ImageMajor, CircleInformationMajor } from '@shopify/polaris-icons';\r\n\r\n\r\nexport default function VariantValidationItem({ variantData, onFieldChange }) {\r\n    const [active, setActive] = useState(false);\r\n\r\n    const toggleActive = useCallback(() => setActive((active) => !active), []);\r\n\r\n    //TODO add link for shopify admin and store\r\n    const section_title = <DisplayText size=\"small\"> {`${variantData ? variantData.title : ''}`} </DisplayText>\r\n\r\n    const capacity_info_activator = (\r\n        <>Capacity <span className=\"info_icon_wrapper\"><Button plain onClick={toggleActive}><Icon backdrop={false} source={CircleInformationMajor} /></Button></span></>\r\n    );\r\n\r\n    return (<Card.Section title={section_title}>\r\n        <FormLayout>\r\n            <FormLayout.Group condensed>\r\n\r\n                <Thumbnail source={variantData.image_src || ImageMajor} />\r\n                <div>\r\n                    <div className=\"Polaris-Labelled__LabelWrapper\">\r\n                        <div className=\"Polaris-Label\">\r\n                            <label htmlFor={variantData._id}>Contains nicotine</label>\r\n                        </div>\r\n                    </div>\r\n                    <ToggleSwitch id={variantData._id} checked={!!variantData.contains_nicotine} onChange={(value) => { onFieldChange(variantData._id, \"contains_nicotine\", value) }} />\r\n                </div>\r\n                <TextField\r\n                    label=\"Items in package\"\r\n                    type=\"number\"\r\n                    //only string WTF shopify polaris!!!\r\n                    value={variantData.items_count + \"\"}\r\n                    onChange={(value) => { onFieldChange(variantData._id, \"items_count\", value) }}\r\n                />\r\n\r\n                <TextField\r\n                    label={<Popover active={active} activator={capacity_info_activator} onClose={toggleActive}>\r\n                        <ActionList\r\n                            sections={[\r\n                                {\r\n                                    items: [\r\n                                        {\r\n                                            helpText: 'Capacity for each item.',\r\n                                        },\r\n                                    ],\r\n                                },\r\n                            ]}\r\n                        />\r\n                    </Popover>}\r\n                    type=\"number\"\r\n                    suffix=\"ml\"\r\n                    value={variantData.capacity + \"\"}\r\n                    // helpText=\"Capacity for each item.\"\r\n                    step={10}\r\n                    onChange={(value) => { onFieldChange(variantData._id, \"capacity\", value) }}\r\n                />\r\n\r\n            </FormLayout.Group>\r\n        </FormLayout>\r\n\r\n    </Card.Section>)\r\n}","import React, { useState, useEffect, useCallback } from \"react\"\r\nimport {\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport { syncAndGet, approve } from '../../../services/products'\r\nimport { Badge, Thumbnail, FormLayout, TextField, PageActions, Page, Popover, ActionList, Button, Stack, Card, TextContainer, List, ResourceList } from '@shopify/polaris';\r\nimport ToggleSwitch from \"../../Helpers/ToggleSwitch\"\r\nimport { ImageMajor } from '@shopify/polaris-icons';\r\nimport VariantValidationItem from \"./VariantValidationItem\"\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Validate() {\r\n\r\n    const [product, setProduct] = useState()\r\n    const [pageination_data, setPagination_data] = useState({})\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        syncAndGet(id).then(res => {\r\n            const { next_id, previous_id, data } = res;\r\n            setProduct(res.data)\r\n            setPagination_data({ next_id, previous_id })\r\n        })\r\n    }, [id])\r\n    //TODO a better approach\r\n    const handleFieldChange = (variant_id, field, value) => {\r\n        const variants = product.variants.map(variant => {\r\n            if (variant._id === variant_id) {\r\n                variant[field] = value\r\n            }\r\n            return variant;\r\n        })\r\n        setProduct({ ...product, variants })\r\n    }\r\n    const handleApprove = useCallback(() => {\r\n        const { next_id } = pageination_data;\r\n        approve(product._id, product).then(res=>{\r\n            history.push(`/dashboard/Products/Validate/${next_id}`);\r\n        })        \r\n    }, [pageination_data])\r\n    \r\n    \r\n    const goNext = useCallback(() => {\r\n        const { next_id } = pageination_data;\r\n        history.push(`/dashboard/Products/Validate/${next_id}`);\r\n    }, [pageination_data])\r\n\r\n    const goPrevious = useCallback(() => {\r\n        const { previous_id } = pageination_data;\r\n        history.push(`/dashboard/Products/Validate/${previous_id}`);\r\n    }, [pageination_data])\r\n    const title = product ? <>{`${product.title} `}{product.approved ? <Badge status=\"success\">Approved</Badge> : <Badge status=\"attention\">Pending</Badge>}</> : ''\r\n    const { previous_id, next_id } = pageination_data\r\n    \r\n    return <Page\r\n        title={title}\r\n        pagination={{\r\n            hasPrevious: !!previous_id,\r\n            hasNext: !!next_id,\r\n            onNext: goNext,\r\n            onPrevious: goPrevious,\r\n        }}\r\n    >\r\n        <>\r\n            <Card title={`Variants`} primaryFooterAction={{ content: 'All good', onAction: handleApprove }}>\r\n                {\r\n                    product && product.variants && product.variants.map(variantDetails =>\r\n                        <VariantValidationItem key={variantDetails._id} variantData={variantDetails} onFieldChange={handleFieldChange} />\r\n                    )\r\n                }\r\n                <Card.Section title=\"Note\">\r\n                    <TextContainer>\r\n                        Taxes will be calculated based on these numbers. Please be sure that everything is correct!\r\n                    </TextContainer>\r\n                </Card.Section>\r\n            </Card>\r\n        </>\r\n\r\n    </Page>\r\n\r\n\r\n\r\n}","import React from \"react\"\r\nimport { BrowserRouter as Router, Route, Redirect, useParams, Switch } from \"react-router-dom\"\r\nimport Templates from \"../Templates\"\r\nimport TemplateDetails from \"../TemplateDetails\"\r\n\r\nimport Stats from \"./Stats\"\r\nimport Products from \"./Products/Index\"\r\nimport Validate from \"./Products/Validate\"\r\nimport { useRouteMatch } from 'react-router-dom'\r\n\r\nexport default function Routes() {\r\n  const match = useRouteMatch()\r\n\r\n  return <Switch>\r\n    <Route exact path={`${match.path}/`} component={Stats} />\r\n    <Route exact path={`${match.path}/Products`} component={Products} />\r\n    <Route exact path={`${match.path}/Products/Validate/:id`} component={Validate} />\r\n  </Switch>\r\n}","import React, { useReducer,useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Copyright from \"./Copyright\"\r\nimport { register } from \"../services/user\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n  const [error, setError] = useState();\r\n  const [userInput, setUserInput] = useReducer(\r\n    (state, newState) => ({ ...state, ...newState }),\r\n    {\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      phoneNumber: '',\r\n      password: ''\r\n    }\r\n  );\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    register(userInput).catch(err => setError(err.toString()));\r\n  }\r\n\r\n\r\n  const handleChange = evt => {\r\n    const name = evt.target.name;\r\n    const newValue = evt.target.value;\r\n    setUserInput({ [name]: newValue });\r\n  }\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form}  onSubmit={handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                value={userInput.firstName}\r\n                onChange={handleChange}\r\n                label=\"First Name\"\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                value={userInput.lastName}\r\n                onChange={handleChange}\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                value={userInput.email}\r\n                onChange={handleChange}\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                value={userInput.password}\r\n                onChange={handleChange}\r\n                autoComplete=\"current-password\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","import React, { Component, useState, useCallback } from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { BrowserRouter as Router, Route, Switch, useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport LeftMenu from '../../LeftMenu'\r\nimport MainRoutes from \"./MainRoutes\"\r\nimport { AppProvider, TopBar, Frame, Layout, ContextualSaveBar } from '@shopify/polaris';\r\nimport { ArrowLeftMinor, SettingsMajor, ProductsMajor, HomeMajor, TaxMajor, ConversationMinor } from '@shopify/polaris-icons';\r\n\r\nimport '@shopify/polaris/dist/styles.css';\r\nimport { Navigation } from '@shopify/polaris';\r\n\r\n\r\nexport default function Dashboard() {\r\n  let match = useRouteMatch();\r\n  const [searchFieldValue, setSearchFieldValue] = useState('');\r\n  const history = useHistory();\r\n\r\n  const handleSearchChange = useCallback(\r\n    (searchFieldValue) => setSearchFieldValue(searchFieldValue),\r\n    [],\r\n  );\r\n  const theme = {\r\n    colors: {\r\n      topBar: {\r\n        background: '#fff',\r\n        margin: '10px 10px'\r\n      },\r\n    },\r\n    logo: {\r\n      width: 37,\r\n      topBarSource: '/logo.svg',\r\n      url: 'https://vapejuicedepot.com',\r\n      accessibilityLabel: 'ENDS taxer',\r\n      contextualSaveBarSource: '/logo.svg',\r\n    },\r\n  };\r\n\r\n  const searchFieldMarkup = (\r\n    <TopBar.SearchField\r\n      placeholder=\"Search\"\r\n      value={searchFieldValue}\r\n      onChange={handleSearchChange}\r\n    />\r\n  );\r\n  const topBarMarkup = <TopBar searchField={searchFieldMarkup} />;\r\n\r\n  const navigationMarkup = (\r\n    <Navigation location=\"/\">\r\n      <Navigation.Section\r\n        items={[\r\n          {\r\n            label: 'Back to Shopify',\r\n            icon: ArrowLeftMinor,\r\n          },\r\n        ]}\r\n      />\r\n      <Navigation.Section\r\n        separator\r\n        title=\"Excise tax helper\"\r\n        items={[\r\n          {\r\n            // url: `${match.url}`,\r\n            onClick: () => {\r\n              history.push(`/dashboard/`)\r\n            },\r\n            label: 'Dashboard',\r\n            icon: HomeMajor,\r\n          },\r\n          {\r\n            // url: `${match.url}`,\r\n            onClick: () => {\r\n              history.push(`/dashboard/TaxRates`)\r\n            },\r\n            label: 'TaxRates',\r\n            icon: TaxMajor,\r\n          },\r\n          {\r\n            // url: `${match.url}`,\r\n            onClick: () => {\r\n              history.push(`/dashboard/Products`)\r\n            },\r\n            label: 'Products',\r\n            icon: ProductsMajor,\r\n          },\r\n          {\r\n            // url: `${match.url}/Settings`,\r\n            onClick: () => {\r\n              history.push(`/dashboard/Settings`)\r\n            },\r\n            label: 'Settings',\r\n            icon: SettingsMajor,\r\n          },\r\n        ]}\r\n        action={{\r\n          icon: ConversationMinor,\r\n          accessibilityLabel: 'Contact support',\r\n          //   onClick: toggleModalActive,\r\n        }}\r\n      />\r\n    </Navigation>\r\n  );\r\n\r\n  return (<div style={{ height: '250px' }}>\r\n    <AppProvider\r\n      theme={theme}\r\n      i18n={{\r\n        Polaris: {\r\n          Frame: { skipToContent: 'Skip to content' },\r\n          ContextualSaveBar: {\r\n            save: 'Save',\r\n            discard: 'Discard',\r\n          },\r\n          DropZone: {\r\n            FileUpload: {\r\n              actionTitleImage: \"Add media\",\r\n              actionHintImage: \"or drop files to upload\"\r\n            }\r\n          },\r\n          TopBar: {\r\n            SearchField: {\r\n              clearButtonLabel: 'Clear',\r\n              search: 'Search',\r\n            },\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      <Frame topBar={topBarMarkup} navigation={navigationMarkup}>\r\n        <Layout.Section>\r\n          <MainRoutes />\r\n        </Layout.Section>\r\n      </Frame>\r\n    </AppProvider>\r\n  </div>)\r\n}","import React from 'react';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\n\r\nexport default function PrivateRoute({ isAuthenticated, children, ...rest }) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={({ location }) =>\r\n          isAuthenticated ? (\r\n            children\r\n          ) : (\r\n            <Redirect\r\n              to=\"/login\"\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n  ","import React, { Component, useState, useEffect } from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport logo from './logo.svg';\r\nimport clsx from 'clsx';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport './App.css';\r\nimport LeftMenu from './LeftMenu'\r\nimport Routes from './Routes'\r\nimport Login from \"./Content/Login\";\r\nimport SignUp from \"./Content/SignUp\";\r\nimport Dashboard from \"./Content/Dashboard\"\r\nimport { gethi } from \"./services/user\"\r\nimport PrivateRoute from \"./Content/PrivateRoute\"\r\nimport \"@shopify/polaris/dist/styles.css\";\r\n\r\nexport default function App(props) {\r\n    const [loggedIn, setloggedIn] = useState(false);\r\n    const [error, setError] = useState(false);\r\n    const [user, setUser] = useState(null);\r\n\r\n    //TODO notimplemented\r\n    const isAuthenticated = true;\r\n    useEffect(() => {\r\n        gethi().then(data => setloggedIn(data)).catch(err => setError(err.toString()));\r\n    }, []);\r\n\r\n    return (\r\n            <Router>\r\n                <Switch>\r\n\r\n                    <Route path=\"/login\" component={Login} />\r\n                    <Route path=\"/signup\" component={SignUp} />\r\n                    <PrivateRoute isAuthenticated={isAuthenticated} path=\"/dashboard\">\r\n                        <Dashboard />\r\n                    </PrivateRoute>\r\n\r\n                    <Route path=\"/\" component={Login} >\r\n                        {\r\n                            !isAuthenticated ?\r\n                                <Redirect to=\"/login\" /> : <Redirect to=\"/dashboard\" />\r\n                        }\r\n                    </Route>\r\n\r\n                </Switch>\r\n            </Router>\r\n    );\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}