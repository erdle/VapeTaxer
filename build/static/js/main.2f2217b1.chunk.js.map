{"version":3,"sources":["logo.svg","Content/Dashboard/Profile.js","utils/errorHandling_ts.ts","Content/Copyright.js","Content/Login.js","services/user.js","Content/Templates.tsx","Content/TemplateDetails.js","services/products.js","Content/Listings.tsx","utils/dataTableHelper.tsx","Content/Users.tsx","Content/ViewUser.js","Content/Settings.js","Content/Products/Images.js","slate/components.js","Mentions.js","services/productTypes.ts","Content/Products/Details.js","Content/Products/SEO.js","Content/Products/Variants.tsx","Content/ProductItem.js","Content/Options.js","Content/Edit.js","Content/ProductTypes/ProductTypesToolBar.js","Content/ProductTypes/index.tsx","Content/Slate/components.js","Content/Slate/RichTextEditor.js","Content/ProductTypes/ProductTypeForm.js","Content/ProductTypes/Edit.js","Content/ProductTypes/Create.js","Content/Helpers/Dropdown.js","services/productVendors.ts","Content/Helpers/Tabs.js","Content/Helpers/Mentions.js","Content/Products/Forms/Details.js","Content/Products/Forms/MediaItem.js","Content/Products/Forms/Media.js","services/options.ts","Content/Products/Forms/Option.js","Content/Products/Forms/VariantItem.js","Content/Products/Forms/Variants.js","services/collections.ts","services/tags.ts","Content/Products/Forms/Organize.js","utils/operators.js","Content/Products/Create.js","utils/optionsHelper.tsx","Hooks/useSelectData.ts","Hooks/useAutocomplete.tsx","Content/Products/DetailsForm.tsx","Content/Products/PolarisVariants.js","Content/Products/CreateWithStep.js","Content/Dashboard/Stats.tsx","Content/Dashboard/MainRoutes.js","Content/SignUp.js","Content/Dashboard/index.js","Content/PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","makeStyles","theme","root","display","flexDirection","alignItems","minHeight","name","fontSize","avatar","width","height","handleErrors","response","ok","Error","statusText","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","paper","marginTop","spacing","margin","backgroundColor","palette","secondary","main","form","submit","SignIn","classes","useState","email","setEmail","password","setPassword","Container","component","maxWidth","CssBaseline","className","Avatar","onSubmit","event","preventDefault","username","fetch","method","headers","body","JSON","stringify","then","res","json","login","TextField","required","fullWidth","id","label","value","onChange","e","target","autoComplete","autoFocus","type","FormControlLabel","control","Checkbox","Button","disabled","length","Grid","container","item","xs","Box","mt","button","Templates","history","useHistory","onClick","push","startIcon","TemplateId","useParams","getItem","create","data","Listing","products","setProducts","setError","useRouteMatch","useEffect","getAllProducts","syncInProgress","setSyncInProgress","columns","renderer","product","removeUnderline","url","rows","props","result","forEach","item_props_values","prop","toArrayOfProps","catch","err","toString","actions","ButtonGroup","loading","primary","Page","title","primaryAction","pagination","hasNext","Card","DataTable","columnContentTypes","headings","footerContent","viewImage","src","Image","viewUser","ID","Users","style","dataSource","allowPaging","pageSettings","pageSize","allowFiltering","allowGrouping","allowSorting","editSettings","allowEditing","allowAdding","allowDeleting","toolbar","field","headerText","textAlign","template","commands","buttonOption","iconCss","cssClass","services","Group","Sort","Edit","Toolbar","CommandColumn","ViewUser","usersID","userItem","usersData","find","el","fname","lname","position","flexWrap","justifyContent","overflow","background","gridList","borderColor","light","tilebar","titleBar","SingleLineGridList","React","anchorEl","setAnchorEl","images","open","Boolean","undefined","Fab","Popover","typography","GridList","cellHeight","cols","map","tile","GridListTile","key","alt","image","GridListTileBar","subtitle","size","forwardRef","ref","active","reversed","cx","css","Menu","textLines","document","nodes","node","text","toArray","join","LIST_TYPES","ALL_VENDORS","withMentions","editor","isInline","isVoid","element","isBlockActive","format","Editor","match","n","isMarkActive","marks","Leaf","attributes","children","leaf","bold","code","italic","underline","BlockButton","icon","useSlate","onMouseDown","isActive","isList","includes","Transforms","unwrapNodes","split","setNodes","block","wrapNodes","toggleBlock","MarkButton","removeMark","addMark","toggleMark","insertMention","vendor","mention","insertNodes","move","Element","MentionElement","selected","useSelected","focused","useFocused","contentEditable","padding","verticalAlign","borderRadius","boxShadow","initialValue","Mentions","useRef","setValue","setTarget","index","setIndex","search","setSearch","renderElement","useCallback","renderLeaf","useMemo","withReact","withHistory","createEditor","vendors","filter","v","toLowerCase","startsWith","slice","onKeyDown","prevIndex","nextIndex","select","current","rect","ReactEditor","toDOMRange","getBoundingClientRect","top","window","pageYOffset","left","pageXOffset","selection","Range","isCollapsed","edges","start","wordBefore","before","unit","beforeRange","range","beforeText","string","beforeMatch","after","afterRange","afterMatch","placeholder","zIndex","i","getAll","grid","flexGrow","bullet","transform","secondary_title","pos","marginBottom","Details","setOpen","productTypes","setProductTypes","productType","productTypeId","setproductTypeId","productVendor","itemId","getAllProductTypes","service","CardContent","FormControl","formControl","InputLabel","htmlFor","Select","native","inputProps","t","gutterBottom","Modal","onClose","aria-labelledby","aria-describedby","TextFieldExample","handleChange","newValue","sectioned","Banner","onDismiss","status","multiline","productTitle","variants","g","rowSelected","selectedRow","getSelectedRecords","_id","path","enableHover","rowHeight","allowSelection","editType","TabPanel","other","role","hidden","p","a11yProps","ProductItem","setProduct","useTheme","getProduct","shop","handle","shopify_id","AppBar","Tabs","indicatorColor","textColor","aria-label","Tab","dir","direction","Variants","Options","optionID","options","selectedIndex","onchange","Inputs","amount","values","setValues","enableTitle","setProductType","setProductTitle","setProductVendor","optionsArray","setOptionsArray","generatedOptionsArray","setGeneratedOptionsArray","optionsChange","Object","assign","generateOptions","generatedOptions","paddingTop","noValidate","productTypeOption","productVendorOption","OutlinedInput","startAdornment","InputAdornment","labelWidth","row","spacer","UsersToolbar","justify","paddingBottom","page","getAllProducttypes","ProductTypesToolBar","Math","floor","random","Icon","HOTKEYS","RichTextExample","spellCheck","hotkey","isHotkey","richEditor","border","Form","initialData","useReducer","state","newState","userInput","setUserInput","templateData","deserialize","nodeType","textContent","Array","from","childNodes","nodeName","jsx","getAttribute","DOMParser","parseFromString","Paper","evt","RichTextEditor","serialize","Text","isText","escapeHtml","Create","getProductType","update","goBack","PopoverLazyLoadExample","getData","labelFieldName","onSelect","showConnectedRight","popoverActive","setPopoverActive","setOptions","inputValue","setInputValue","getOptionsData","visibleOptions","indexOf","togglePopoverActive","handleResourceListItemClick","option","updateText","handleClearButtonClick","activator","clearButton","onClearButtonClick","connectedRight","SelectMinor","onFocus","popoverContent","ResourceList","items","renderItem","Item","ActionList","content","CirclePlusMinor","onAction","ariaHaspopup","Pane","tabs","section","selectedTab","handleTabChange","goToSection","sectionName","newURL","replace","params","handleNextSection","nextTabIndex","findIndex","DisplayText","tab","tabDataIsComplete","isCompleted","source","CircleTickMajor","div","del","strikethrough","span","convertStylesStringToObject","strong","isEditor","SlateElement","isElement","newProperties","ELEMENT_TAGS","A","BLOCKQUOTE","H1","H2","H3","H4","H5","H6","IMG","LI","OL","DIV","P","PRE","UL","TEXT_TAGS","STRONG","CODE","DEL","EM","I","S","U","SPAN","parent","append","createTextNode","flat","attrs","child","stringStyles","reduce","acc","colonPosition","camelCaseProperty","substr","trim","c","toUpperCase","htmlString","parsed","serialized_text","productData","setProductData","handleProductTypeSelect","newData","handleVendorSelect","handleDescriptionChange","setChecked","handleStatusChange","newChecked","FormLayout","checked","condensed","getAllVendors","helpText","MediaItem","file","moveCard","Thumbnail","URL","createObjectURL","DropZoneWithImageFileUpload","files","setFiles","rejectedFiles","setRejectedFiles","hasError","handleDrop","_droppedFiles","acceptedFiles","errorMessage","DropZone","FileUpload","List","uploadedFiles","Stack","vertical","card","renderCard","accept","onDrop","optionValueText","setOptionValueText","handleOptionSelect","handleOptionValueChanged","optionValues","some","handleOptionValueRemoved","selectedOption","getAllOptions","MobilePlusMajor","Tag","onRemove","VariantItem","variantData","setData","prefix","optionValues2D","productVariants","combos","list","getCustomCollections","isObject","object","CreateEditProduct","product_db_data","setProduct_db_data","isDirty","setIsDirty","productService","console","log","deepEqual","object1","object2","keys1","keys","keys2","val1","val2","areObjects","toggleIsDirty","contextualSaveBarMarkup","ContextualSaveBar","message","saveAction","discardAction","tab_title","Badge","breadcrumbs","Layout","Section","AddProductMajor","DetailsCompleted","CategoriesMajor","VariantMajor","ImagesMajor","SearchMajor","isString","useSelectData","selectOptions","setSelectOptions","selectedValue","setSelectedValue","labelValue","labelFieldValue","GenerateSelectOptions","useTags","inputLabel","selectedOptions","setSelectedOptions","GenerateOptionDescriptors","filterRegex","RegExp","resultOptions","removeTag","tag","splice","textField","Autocomplete","tagsMarkup","vendorService","vendorOptions","handleVendorSelectChange","productTypeService","productTypeOptions","product_type","handleProductTypeChange","setTitle","description","setDescription","useAutocomplete","tagsService","tagOptions","selectedTagOptions","handleTagSelectChange","tagTextField","collectionOptions","selectedcollectionOptions","handleCollectionSelectChange","collectionTextField","templateselected","settemplateSelected","handleTemplateSelectChange","TextContainer","Collapsible","transition","duration","timingFunction","allowMultiple","listTitle","emptyState","variantStyle","minWidth","imgStyles","maxHeight","setActive","handleToggle","CreateWithStep","setSelected","selectedTabIndex","tabsContentWrapperStyles","tabsContentTitle","flex","marginLeft","TabsContentWrapper","Heading","accessibilityLabel","panelID","DetailsForm","fitted","angle","marginRight","visibility","Listings","Routes","exact","Stats","CreateProduct","CreateProductOld","ProductTypes","Settings","TemplateDetails","CreateProductType","EditProductTypeItem","SignUp","firstName","lastName","phoneNumber","sm","Dashboard","searchFieldValue","setSearchFieldValue","handleSearchChange","searchFieldMarkup","TopBar","SearchField","topBarMarkup","searchField","navigationMarkup","Navigation","location","ArrowLeftMinor","separator","HomeMajor","ProductsMajor","CollectionsMajor","InventoryMajor","OrdersMajor","action","ConversationMinor","AppProvider","colors","topBar","logo","topBarSource","contextualSaveBarSource","i18n","Polaris","Frame","skipToContent","save","discard","actionTitleImage","actionHintImage","clearButtonLabel","navigation","PrivateRoute","isAuthenticated","rest","render","to","App","setloggedIn","Login","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2f2217b1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Avatar, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    minHeight: 'fit-content'\r\n  },\r\n  name:{\r\n    fontSize:\"20px\"\r\n  },\r\n  avatar: {\r\n    width: 60,\r\n    height: 60\r\n  }\r\n}));\r\n\r\nconst Profile = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const user = {\r\n    name: 'Jane Doe',\r\n    avatar: '/avatar_11.png',\r\n    bio: 'Director'\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Avatar\r\n        alt=\"Person\"\r\n        className={classes.avatar}\r\n        component={RouterLink}\r\n        src={user.avatar}\r\n        to=\"/settings\"\r\n      />\r\n      <Typography\r\n        className={classes.name}\r\n        variant=\"h5\"\r\n      >\r\n        {user.name}\r\n      </Typography>\r\n      <Typography variant=\"body2\">{user.bio}</Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Profile;","export const handleErrors = (response: Response) => {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}","\r\nimport React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nexport default function Copyright() {\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        {'Copyright © '}\r\n        <Link color=\"inherit\" href=\"https://qwerty.com/\">\r\n          QWERTY\r\n        </Link>{' '}\r\n        {new Date().getFullYear()}\r\n        {'.'}\r\n      </Typography>\r\n    )\r\n  }","import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { login } from \"../services/user\"\r\nimport Copyright from \"./Copyright\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  function validateForm() {\r\n    return email.length > 0 && password.length > 0;\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    login(email, password)\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={e => setEmail(e.target.value)}\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            disabled={!validateForm()}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","import { handleErrors } from \"../utils/errorHandling_ts\"\r\n\r\nexport const login = (username, password)=>{\r\n    return fetch(\"/api/user/login\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({username, password})\r\n    }).then(handleErrors).then(res => res.json())\r\n\r\n}\r\n\r\nexport const register = (data)=>{\r\n    return fetch(\"/api/user/register\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n    }).then(handleErrors).then(res => res.json())\r\n}\r\n\r\nexport const gethi = (data)=>{\r\n    return fetch(\"/api/user/hi\").then(handleErrors).then(res => res.json())\r\n}","import React from \"react\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\n\r\n\r\n\r\nexport default function Templates() {\r\n    let history = useHistory();\r\n    const classes = useStyles();\r\n\r\n    function handleClick() {\r\n        history.push(\"/home\");\r\n    }\r\n    return <div>\r\n        Templates go here\r\n        <Button\r\n            onClick={handleClick}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            startIcon={<AddIcon />}\r\n        >\r\n            New\r\n        </Button>\r\n    </div>\r\n}","import React from \"react\";\r\nimport {\r\n    useParams\r\n  } from \"react-router-dom\";\r\n\r\n\r\n\r\nexport default function Templates() {\r\n    let { TemplateId } = useParams();\r\n    return <div>{TemplateId}</div>\r\n}","import { handleErrors } from \"../utils/errorHandling_ts\"\r\n\r\nexport const getAll = () => fetch(\"/api/products\").then(handleErrors).then(response => response.json())\r\n\r\nexport const syncAllProducts = () => fetch(\"/api/products/getallofthem\").then(handleErrors).then(response => response.json())\r\n\r\nexport const getItem = (id) => fetch(`/api/products/${id}`).then(handleErrors).then(response => response.json())\r\n\r\nexport const create = (data) => {\r\n    return fetch(\"/api/products\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n    }).then(handleErrors).then(res => res.json())\r\n}\r\n\r\nexport const update = (data, id) => {\r\n    return fetch(`/api/products/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n    }).then(handleErrors).then(res => res.json())\r\n}\r\n\r\n\r\n","import React, { Component, useState, useEffect } from 'react';\r\nimport '../App.css';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport * as service from \"../services/products\"\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport ProductsToolbar from \"./Products/ProductsToolbar\"\r\nimport { Card, DataTable, Page, Icon, Button, ButtonGroup, Link } from '@shopify/polaris';\r\nimport { toArrayOfProps, Column } from \"../utils/dataTableHelper\"\r\nimport { PlusMinor } from '@shopify/polaris-icons';\r\nimport { syncAllProducts } from '../services/products'\r\n\r\nconst Listing: React.FC = () => {\r\n  const [products, setProducts] = useState([] as any);\r\n  const [error, setError] = useState();\r\n  const [page, setPage] = useState(1);\r\n  const history = useHistory();\r\n  let grid: any = null;\r\n  let match = useRouteMatch();\r\n\r\n  useEffect(() => {\r\n    getAllProducts();\r\n  }, [0]);\r\n\r\n\r\n  const [syncInProgress, setSyncInProgress] = useState(false);\r\n\r\n  const columns: Column[] = [\r\n    { name: \"title\", renderer: (product) => <Link removeUnderline url={`/dashboard/Listings/edit/${product['_id']}`}>{product[\"title\"]}</Link> },\r\n    { name: \"vendor\" },\r\n    { name: \"product_type\" },\r\n    { name: \"status\" },\r\n  ]\r\n\r\n  const getAllProducts = () => {\r\n    return service.getAll().then(data => {\r\n      const rows = toArrayOfProps(data, columns)\r\n      setProducts(rows)\r\n    }).catch(err => setError(err.toString()));\r\n  }\r\n\r\n  const onSyncProducts = () => {\r\n    setSyncInProgress(true)\r\n    syncAllProducts().then(data => { setSyncInProgress(false) }).catch(e => { })\r\n  }\r\n\r\n  const actions = <ButtonGroup>\r\n    <Button loading={syncInProgress} onClick={onSyncProducts}>Sync products</Button>\r\n    <Button primary onClick={() => {\r\n      history.push(`/dashboard/Listings/create`)\r\n    }}>Add product</Button>\r\n  </ButtonGroup>\r\n\r\n  return (\r\n    <Page title=\"Listings\"\r\n      fullWidth\r\n      primaryAction={actions}\r\n      pagination={{\r\n        hasNext: true,\r\n      }}\r\n    >\r\n      <Card>\r\n        <DataTable\r\n          columnContentTypes={[\r\n            'text',\r\n            'text',\r\n            'text',\r\n            'text'\r\n          ]}\r\n          headings={[\r\n            'Product',\r\n            'Vendor',\r\n            'Type',\r\n            'Status'\r\n          ]}\r\n          rows={products}\r\n          footerContent={`Showing ${products.length} of ${products.length} results`}\r\n        />\r\n      </Card>\r\n    </Page>\r\n  );\r\n}\r\n\r\nexport default Listing;\r\n","export class Column {\r\n    name: string = \"\";\r\n    renderer?: (data: any) => JSX.Element;\r\n}\r\n\r\nexport const toArrayOfProps = <T extends KeyValue>(data: [T], props: Column[]): JSX.Element[][] => {\r\n    const result: JSX.Element[][] = [];\r\n    data.forEach((item: T) => {\r\n        const item_props_values: JSX.Element[] = [];\r\n        props.forEach((prop: Column) => {\r\n            const value: JSX.Element = typeof prop.renderer == \"function\" ? prop.renderer(item) : (item[prop.name] as JSX.Element);\r\n            item_props_values.push(value)\r\n        })\r\n        result.push(item_props_values)\r\n    })\r\n    return result\r\n}\r\n\r\ninterface KeyValue {\r\n    [key: string]: any;\r\n}","import React, { Component } from 'react';\r\nimport { \r\n  GridComponent, \r\n  ColumnDirective, \r\n  ColumnsDirective,\r\n  Page,\r\n  Inject,\r\n  Group,\r\n  Sort,\r\n  Edit,\r\n  EditSettingsModel,\r\n  Toolbar,\r\n  ToolbarItems,\r\n  CommandColumn \r\n} from '@syncfusion/ej2-react-grids';\r\nimport data from '../data/usersData.json';\r\nimport '../App.css';\r\n\r\nfunction viewImage(props: any) {\r\n    var src = props.Image;\r\n    return (<div className='image round-image'>\r\n        <img src={src} />\r\n    </div>);\r\n}\r\n\r\nfunction viewUser(props: any) {\r\n    return(<div className='btn_container'>\r\n      <button><a href={\"/Users/\" + props.ID}>View User</a></button>\r\n    </div>);\r\n}\r\n\r\nconst Users: React.FC = () => {\r\n    const editOptions: EditSettingsModel = { allowEditing: true, allowAdding: true, allowDeleting: true };\r\n    const toolbarOptions: ToolbarItems[] = ['Add', 'Edit', 'Delete'];\r\n    const commands: any = [\r\n                           { type: 'Delete', buttonOption: { iconCss: 'e-icons e-delete', cssClass: 'e-flat' } },\r\n                           { type: 'Save', buttonOption: { iconCss: 'e-icons e-update', cssClass: 'e-flat' } },\r\n                           { type: 'Cancel', buttonOption: { iconCss: 'e-icons e-cancel-icon', cssClass: 'e-flat' } }\r\n                        ];\r\n\r\n    return (\r\n      <div style={{ marginTop: '5%' }}>\r\n        <GridComponent dataSource={data} \r\n            allowPaging={true}\r\n            pageSettings={{ pageSize:6 }}\r\n            allowFiltering={true}\r\n            allowGrouping={true}\r\n            allowSorting = {true}\r\n            editSettings={editOptions}\r\n            toolbar={toolbarOptions}\r\n          >\r\n          <ColumnsDirective>\r\n            <ColumnDirective field='ID' headerText='ID' textAlign='Center' width='70' />\r\n            <ColumnDirective field='Image' headerText='Image' template={viewImage} width='100' />\r\n            <ColumnDirective field='fname' headerText='First Name' width='100' />\r\n            <ColumnDirective field='lname' headerText='Last Name' width='120' />\r\n            <ColumnDirective field='username' headerText='Username' width='100' />\r\n            <ColumnDirective field='email' headerText='Email' width='150' />\r\n            <ColumnDirective field='position' headerText='Position' width='100' />\r\n            <ColumnDirective headerText='Delete user' textAlign='Center' width='100' commands={commands} />\r\n            <ColumnDirective headerText='View User' template={viewUser} width='80' />\r\n          </ColumnsDirective>\r\n          <Inject services={[Page, Group, Sort, Edit, Toolbar, CommandColumn]} />\r\n        </GridComponent>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Users;","import React from \"react\";\r\nimport usersData from '../data/usersData.json';\r\nimport {useParams} from \"react-router-dom\";\r\nimport '../App.css';\r\n\r\nexport default function ViewUser() {\r\n    let { usersID } = useParams();\r\n    const userItem = usersData.find(function(el) {\r\n        if ( usersID == el.ID ) {\r\n            return true;\r\n        }\r\n    });\r\n    \r\n    return ( \r\n        <div>\r\n            <ul className=\"userItem\">\r\n                <li className=\"userItem_data\"><img className=\"view-image\" src={userItem.Image} /></li>\r\n                <li className=\"userItem_data\">\r\n                    <li className=\"userItem_data userItem_data_padding\">{userItem.fname}</li>\r\n                    <li className=\"userItem_data userItem_data_padding\">{userItem.lname}</li>\r\n                    <li className=\"userItem_data userItem_data_padding\">{userItem.username}</li>\r\n                    <li className=\"userItem_data userItem_data_padding\">{userItem.email}</li>\r\n                    <li className=\"userItem_data userItem_data_padding\">{userItem.position}</li>\r\n                </li>\r\n            </ul> \r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\n\r\n\r\nexport default function Templates(){\r\n    return <div>Here you will modify your settings</div>\r\n}","import React from 'react';\r\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport { AnyAaaaRecord } from 'dns';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Banner } from '@shopify/polaris';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n    ({\r\n        root: {\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            justifyContent: 'space-around',\r\n            overflow: 'hidden',\r\n            backgroundColor: theme.palette.background.paper,\r\n        },\r\n        gridList: {\r\n            width: 500,\r\n            height: 450,\r\n            borderColor: \"#c3c3c3\",\r\n        },\r\n        title: {\r\n            color: theme.palette.primary.light,\r\n        },\r\n        tilebar: {\r\n            color: 'rgba(255, 255, 255, 0.54)',\r\n        },\r\n        titleBar: {\r\n            background:\r\n                'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n        },\r\n    })\r\n)\r\n\r\nexport default function SingleLineGridList(data) {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const { images } = data;\r\n    const classes = useStyles();\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n    const action = (\r\n        <>\r\n            <Fab aria-describedby={id} color=\"info\" onClick={handleClick} size=\"small\">\r\n                <HelpOutlineIcon />\r\n            </Fab>\r\n            <Popover\r\n                id={id}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <Typography className={classes.typography}>This is important for your SEO. To see what it affects go to <a href=\"#\">details</a></Typography>\r\n            </Popover>\r\n        </>\r\n    );\r\n    return (\r\n        <div className={classes.root}>\r\n            <GridList cellHeight={260} className={classes.gridList} cols={4}>\r\n                {images.map((tile) => (\r\n                    <GridListTile key={tile.src} cols={2}>\r\n                        <img src={tile.src} alt={tile.title} className={classes.image} />\r\n                        asd\r\n                        <GridListTileBar\r\n                            title={tile.title}\r\n                            subtitle={<TextField\r\n                                className={classes.tilebar}\r\n                                name=\"altext\"\r\n                                size=\"small\"\r\n                                fullWidth\r\n                                label=\"Alt\"\r\n                                value={tile.alt}\r\n                                autoFocus\r\n                            />}\r\n                        />\r\n\r\n                    </GridListTile>\r\n                ))}\r\n            </GridList>\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { cx, css } from 'emotion'\r\n\r\nexport const Button = React.forwardRef(\r\n  ({ className, active, reversed, ...props }, ref) => (\r\n    <span\r\n      {...props}\r\n      ref={ref}\r\n      className={cx(\r\n        className,\r\n        css`\r\n          cursor: pointer;\r\n          color: ${reversed\r\n            ? active\r\n              ? 'white'\r\n              : '#aaa'\r\n            : active\r\n            ? 'black'\r\n            : '#ccc'};\r\n        `\r\n      )}\r\n    />\r\n  )\r\n)\r\n\r\nexport const EditorValue = React.forwardRef(\r\n  ({ className, value, ...props }, ref) => {\r\n    const textLines = value.document.nodes\r\n      .map(node => node.text)\r\n      .toArray()\r\n      .join('\\n')\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        {...props}\r\n        className={cx(\r\n          className,\r\n          css`\r\n            margin: 30px -20px 0;\r\n          `\r\n        )}\r\n      >\r\n        <div\r\n          className={css`\r\n            font-size: 14px;\r\n            padding: 5px 20px;\r\n            color: #404040;\r\n            border-top: 2px solid #eeeeee;\r\n            background: #f8f8f8;\r\n          `}\r\n        >\r\n          Slate's value as text\r\n        </div>\r\n        <div\r\n          className={css`\r\n            color: #404040;\r\n            font: 12px monospace;\r\n            white-space: pre-wrap;\r\n            padding: 10px 20px;\r\n            div {\r\n              margin: 0 0 0.5em;\r\n            }\r\n          `}\r\n        >\r\n          {textLines}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n)\r\n\r\nexport const Icon = React.forwardRef(({ className, ...props }, ref) => (\r\n  <span\r\n    {...props}\r\n    ref={ref}\r\n    className={cx(\r\n      'material-icons',\r\n      className,\r\n      css`\r\n        font-size: 18px;\r\n        vertical-align: text-bottom;\r\n      `\r\n    )}\r\n  />\r\n))\r\n\r\nexport const Instruction = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div\r\n    {...props}\r\n    ref={ref}\r\n    className={cx(\r\n      className,\r\n      css`\r\n        white-space: pre-wrap;\r\n        margin: 0 -20px 10px;\r\n        padding: 10px 20px;\r\n        font-size: 14px;\r\n        background: #f8f8e8;\r\n      `\r\n    )}\r\n  />\r\n))\r\n\r\nexport const Menu = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div\r\n    {...props}\r\n    ref={ref}\r\n    className={cx(\r\n      className,\r\n      css`\r\n        & > * {\r\n          display: inline-block;\r\n        }\r\n        & > * + * {\r\n          margin-left: 15px;\r\n        }\r\n      `\r\n    )}\r\n  />\r\n))\r\n\r\nexport const Portal = ({ children }) => {\r\n  return ReactDOM.createPortal(children, document.body)\r\n}\r\n\r\nexport const Toolbar = React.forwardRef(({ className, ...props }, ref) => (\r\n  <Menu\r\n    {...props}\r\n    ref={ref}\r\n    className={cx(\r\n      className,\r\n      css`\r\n        position: relative;\r\n        padding: 1px 18px 17px;\r\n        margin: 0 -20px;\r\n        border-bottom: 2px solid #eee;\r\n        margin-bottom: 20px;\r\n      `\r\n    )}\r\n  />\r\n))","import React, { useMemo, useCallback, useRef, useEffect, useState } from 'react'\r\nimport { Editor, Transforms, Range, createEditor } from 'slate'\r\nimport { withHistory } from 'slate-history'\r\nimport { Button, Icon, Toolbar } from './slate/components'\r\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\r\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic';\r\nimport FormatUnderlinedIcon from '@material-ui/icons/FormatUnderlined';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\nimport FormatSizeIcon from '@material-ui/icons/FormatSize';\r\nimport FormatQuoteIcon from '@material-ui/icons/FormatQuote';\r\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\nimport {\r\n  Slate,\r\n  Editable,\r\n  ReactEditor,\r\n  withReact,\r\n  useSelected,\r\n  useFocused,\r\n  useSlate,\r\n} from 'slate-react'\r\nconst LIST_TYPES = ['numbered-list', 'bulleted-list']\r\nconst ALL_VENDORS = [\r\n  {\r\n    name: \"MY Myle\",\r\n    url: \"https://vapejuicedepot.com/collections/myle-vapor\"\r\n  },\r\n  {\r\n    name: \"MYLE\",\r\n    url: \"https://vapejuicedepot.com/collections/myle-vapor\"\r\n  },\r\n  {\r\n    name: \"MYLE Pod System\",\r\n    url: \"https://vapejuicedepot.com/collections/myle-vapor\"\r\n  },\r\n  {\r\n    name: \"Nicotine salts\",\r\n    url: \"https://vapejuicedepot.com/collections/nicotine-salts\"\r\n  },\r\n  {\r\n    name: \"Freebase e-Liquids\",\r\n    url: \"https://vapejuicedepot.com/collections/freebase-e-liquids\"\r\n  },\r\n  {\r\n    name: \"SMOK Tech\",\r\n    url: \"https://vapejuicedepot.com/collections/smok-tech\"\r\n  },\r\n  {\r\n    name: \"Vape Accessories\",\r\n    url: \"https://vapejuicedepot.com/collections/vape-accessories\"\r\n  },\r\n  {\r\n    name: \"Vape Box Mods\",\r\n    url: \"https://vapejuicedepot.com/collections/vape-box-mods\"\r\n  },\r\n  {\r\n    name: \"SMOK Tech\",\r\n    url: \"https://vapejuicedepot.com/collections/smok-tech\"\r\n  },\r\n  {\r\n    name: \"SMOK Tech\",\r\n    url: \"https://vapejuicedepot.com/collections/smok-tech\"\r\n  },\r\n  {\r\n    name: \"The Council of Vapor\",\r\n    url: \"https://vapejuicedepot.com/collections/the-council-of-vapor\"\r\n  },\r\n\r\n]\r\n\r\nconst Mentions = () => {\r\n  const ref = useRef()\r\n  const [value, setValue] = useState(initialValue)\r\n  const [target, setTarget] = useState()\r\n  const [index, setIndex] = useState(0)\r\n  const [search, setSearch] = useState('')\r\n  const renderElement = useCallback(props => <Element {...props} />, [])\r\n  const renderLeaf = useCallback(props => <Leaf {...props} />, [])\r\n  const editor = useMemo(\r\n    () => withMentions(withReact(withHistory(createEditor()))),\r\n    []\r\n  )\r\n  const vendors = ALL_VENDORS.filter(v =>\r\n    v.name.toLowerCase().startsWith(search.toLowerCase())\r\n  ).slice(0, 10)\r\n\r\n  const onKeyDown = useCallback(\r\n    event => {\r\n      if (target) {\r\n        switch (event.key) {\r\n          case 'ArrowDown':\r\n            event.preventDefault()\r\n            const prevIndex = index >= vendors.length - 1 ? 0 : index + 1\r\n            setIndex(prevIndex)\r\n            break\r\n          case 'ArrowUp':\r\n            event.preventDefault()\r\n            const nextIndex = index <= 0 ? vendors.length - 1 : index - 1\r\n            setIndex(nextIndex)\r\n            break\r\n          case 'Tab':\r\n          case 'Enter':\r\n            event.preventDefault()\r\n            Transforms.select(editor, target)\r\n            insertMention(editor, vendors[index])\r\n            setTarget(null)\r\n            break\r\n          case 'Escape':\r\n            event.preventDefault()\r\n            setTarget(null)\r\n            break\r\n        }\r\n      }\r\n    },\r\n    [index, search, target]\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (target && vendors.length > 0) {\r\n      const el = ref.current\r\n      const domRange = ReactEditor.toDOMRange(editor, target)\r\n      const rect = domRange.getBoundingClientRect()\r\n      el.style.top = `${rect.top + window.pageYOffset + 20}px`\r\n      el.style.left = `${rect.left + window.pageXOffset}px`\r\n    }\r\n  }, [vendors.length, editor, index, search, target])\r\n\r\n  return (\r\n    <Slate\r\n      editor={editor}\r\n      value={value}\r\n      onChange={value => {\r\n        setValue(value)\r\n        const { selection } = editor\r\n\r\n        if (selection && Range.isCollapsed(selection)) {\r\n          const [start] = Range.edges(selection)\r\n          const wordBefore = Editor.before(editor, start, { unit: 'word' })\r\n          const before = wordBefore && Editor.before(editor, wordBefore)\r\n          const beforeRange = before && Editor.range(editor, before, start)\r\n          const beforeText = beforeRange && Editor.string(editor, beforeRange)\r\n          const beforeMatch = beforeText && beforeText.match(/^@(\\w+)$/)\r\n          const after = Editor.after(editor, start)\r\n          const afterRange = Editor.range(editor, start, after)\r\n          const afterText = Editor.string(editor, afterRange)\r\n          const afterMatch = afterText.match(/^(\\s|$)/)\r\n\r\n          if (beforeMatch && afterMatch) {\r\n            setTarget(beforeRange)\r\n            setSearch(beforeMatch[1])\r\n            setIndex(0)\r\n            return\r\n          }\r\n        }\r\n\r\n        setTarget(null)\r\n      }}\r\n    >\r\n      <Toolbar>\r\n        <MarkButton format=\"bold\" icon={<FormatBoldIcon />} />\r\n        <MarkButton format=\"italic\" icon={<FormatItalicIcon />} />\r\n        <MarkButton format=\"underline\" icon={<FormatUnderlinedIcon />} />\r\n        <MarkButton format=\"code\" icon={<CodeIcon />} />\r\n        <BlockButton format=\"heading-one\" icon={<FormatSizeIcon />} />\r\n        <BlockButton format=\"block-quote\" icon={<FormatQuoteIcon />} />\r\n        <BlockButton format=\"numbered-list\" icon={<FormatListNumberedIcon />} />\r\n        <BlockButton format=\"bulleted-list\" icon={<FormatListBulletedIcon />} />\r\n      </Toolbar>\r\n      <Editable\r\n        renderElement={renderElement}\r\n        renderLeaf={renderLeaf}\r\n        onKeyDown={onKeyDown}\r\n        placeholder=\"Enter some text...\"\r\n      />\r\n      {target && vendors.length > 0 && (\r\n        <div\r\n          ref={ref}\r\n          style={{\r\n            top: '-9999px',\r\n            left: '-9999px',\r\n            position: \"fixed\",\r\n            display: \"block\",\r\n            zIndex: 1,\r\n            padding: '3px',\r\n            background: 'white',\r\n            borderRadius: '4px',\r\n            boxShadow: '0 1px 5px rgba(0,0,0,.2)',\r\n          }}\r\n        >\r\n          {vendors.map((vendor, i) => (\r\n            <div\r\n              key={vendor.name}\r\n              style={{\r\n                padding: '1px 3px',\r\n                borderRadius: '3px',\r\n                background: i === index ? '#B4D5FF' : 'transparent',\r\n              }}\r\n            >\r\n              {vendor.name}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Slate>\r\n  )\r\n}\r\n\r\nconst withMentions = editor => {\r\n  const { isInline, isVoid } = editor\r\n\r\n  editor.isInline = element => {\r\n    return element.type === 'mention' ? true : isInline(element)\r\n  }\r\n\r\n  editor.isVoid = element => {\r\n    return element.type === 'mention' ? true : isVoid(element)\r\n  }\r\n\r\n  return editor\r\n}\r\nconst toggleBlock = (editor, format) => {\r\n  const isActive = isBlockActive(editor, format)\r\n  const isList = LIST_TYPES.includes(format)\r\n\r\n  Transforms.unwrapNodes(editor, {\r\n    match: n => LIST_TYPES.includes(n.type),\r\n    split: true,\r\n  })\r\n\r\n  Transforms.setNodes(editor, {\r\n    type: isActive ? 'paragraph' : isList ? 'list-item' : format,\r\n  })\r\n\r\n  if (!isActive && isList) {\r\n    const block = { type: format, children: [] }\r\n    Transforms.wrapNodes(editor, block)\r\n  }\r\n}\r\n\r\nconst toggleMark = (editor, format) => {\r\n  const isActive = isMarkActive(editor, format)\r\n\r\n  if (isActive) {\r\n    Editor.removeMark(editor, format)\r\n  } else {\r\n    Editor.addMark(editor, format, true)\r\n  }\r\n}\r\n\r\nconst isBlockActive = (editor, format) => {\r\n  const [match] = Editor.nodes(editor, {\r\n    match: n => n.type === format,\r\n  })\r\n\r\n  return !!match\r\n}\r\n\r\nconst isMarkActive = (editor, format) => {\r\n  const marks = Editor.marks(editor)\r\n  return marks ? marks[format] === true : false\r\n}\r\n\r\n\r\nconst Leaf = ({ attributes, children, leaf }) => {\r\n  if (leaf.bold) {\r\n    children = <strong>{children}</strong>\r\n  }\r\n\r\n  if (leaf.code) {\r\n    children = <code>{children}</code>\r\n  }\r\n\r\n  if (leaf.italic) {\r\n    children = <em>{children}</em>\r\n  }\r\n\r\n  if (leaf.underline) {\r\n    children = <u>{children}</u>\r\n  }\r\n\r\n  return <span {...attributes}>{children}</span>\r\n}\r\n\r\nconst BlockButton = ({ format, icon }) => {\r\n  const editor = useSlate()\r\n  return (\r\n    <Button\r\n      active={isBlockActive(editor, format)}\r\n      onMouseDown={event => {\r\n        event.preventDefault()\r\n        toggleBlock(editor, format)\r\n      }}\r\n    >\r\n      {icon}\r\n    </Button>\r\n  )\r\n}\r\n\r\nconst MarkButton = ({ format, icon }) => {\r\n  const editor = useSlate()\r\n  return (\r\n    <Button\r\n      active={isMarkActive(editor, format)}\r\n      onMouseDown={event => {\r\n        event.preventDefault()\r\n        toggleMark(editor, format)\r\n      }}\r\n    >\r\n     {icon}\r\n    </Button>\r\n  )\r\n}\r\n\r\nconst insertMention = (editor, vendor) => {\r\n  const mention = { type: 'mention', ...vendor, children: [{ text: '' }] }\r\n  Transforms.insertNodes(editor, mention)\r\n  Transforms.move(editor)\r\n}\r\n\r\nconst Element = props => {\r\n  const { attributes, children, element } = props\r\n  switch (element.type) {\r\n    case 'mention':\r\n      return <MentionElement {...props} />\r\n    case 'block-quote':\r\n      return <blockquote {...attributes}>{children}</blockquote>\r\n    case 'bulleted-list':\r\n      return <ul {...attributes}>{children}</ul>\r\n    case 'heading-one':\r\n      return <h1 {...attributes}>{children}</h1>\r\n    case 'heading-two':\r\n      return <h2 {...attributes}>{children}</h2>\r\n    case 'list-item':\r\n      return <li {...attributes}>{children}</li>\r\n    case 'numbered-list':\r\n      return <ol {...attributes}>{children}</ol>\r\n    default:\r\n      return <p {...attributes}>{children}</p>\r\n  }\r\n}\r\n\r\nconst MentionElement = ({ attributes, children, element }) => {\r\n  const selected = useSelected()\r\n  const focused = useFocused()\r\n  return (\r\n    <a\r\n      href={element.url}\r\n      {...attributes}\r\n      contentEditable={false}\r\n      style={{\r\n        padding: '3px 3px 2px',\r\n        margin: '0 1px',\r\n        verticalAlign: 'baseline',\r\n        display: 'inline-block',\r\n        borderRadius: '4px',\r\n        backgroundColor: '#eee',\r\n        fontSize: '0.9em',\r\n        boxShadow: selected && focused ? '0 0 0 2px #B4D5FF' : 'none',\r\n      }}\r\n    >\r\n      {element.name}\r\n      {children}\r\n    </a>\r\n  )\r\n}\r\n\r\nconst initialValue = [\r\n  {\r\n    children: [\r\n      {\r\n        text:\r\n          'Describe your product in great details!',\r\n      },\r\n    ],\r\n  },\r\n]\r\n\r\nexport default Mentions","import { handleErrors } from \"../utils/errorHandling_ts\"\r\n\r\nexport const getAll = () => fetch(\"/api/productTypes\").then(handleErrors).then(response => response.json())\r\nexport const getItem = (id:string) => fetch(`/api/productTypes/${id}`).then(handleErrors).then(response => response.json())\r\n\r\nexport const create = (data:any) => {\r\n    return fetch(\"/api/productTypes\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n    }).then(handleErrors).then(res => res.json())\r\n}\r\n\r\nexport const update = (data:any, id:string) => {\r\n    return fetch(`/api/productTypes/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n    }).then(handleErrors).then(res => res.json())\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Images from \"./Images\"\r\nimport {\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid, { GridSpacing } from '@material-ui/core/Grid';\r\nimport StorefrontIcon from '@material-ui/icons/Storefront';\r\nimport BugReportIcon from '@material-ui/icons/BugReport';\r\nimport ControlPointDuplicateIcon from '@material-ui/icons/ControlPointDuplicate';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Mentions from \"../../Mentions\"\r\nimport Portal from '@material-ui/core/Portal';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport * as service from \"../../services/productTypes\"\r\n\r\nconst useStyles = makeStyles({\r\n    grid: {\r\n        flexGrow: 1,\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    secondary_title: {\r\n        fontSize: 14,\r\n    },\r\n    title: {\r\n        fontSize: 24,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n});\r\n\r\nexport default function Details({ product }) {\r\n    const [error, setError] = useState();\r\n    const [open, setOpen] = useState(false);\r\n    const [productTypes, setProductTypes] = useState([]);\r\n    const [productVendors, setProductVendors] = useState([]);\r\n    const [productTypeId, setproductTypeId] = useState(product && product.productType && product.productType.id);\r\n    const [productVendorId, setproductVendorId] = useState(product && product.productVendor && product.productVendor.id);\r\n\r\n    const classes = useStyles();\r\n    let { itemId } = useParams();\r\n    const container = React.useRef(null);\r\n    useEffect(() => {\r\n        getAllProductTypes();\r\n    }, []);\r\n    const getAllProductTypes = () => {\r\n        return service.getAll().then(data => setProductTypes(data)).catch(err => setError(err.toString()));\r\n    }\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleProductTypeChange = (event) => {\r\n        const value = event.target.value;\r\n        setproductTypeId(value)\r\n    }\r\n    const handleProductVendorChange = (event) => {\r\n        const value = event.target.value;\r\n        setproductTypeId(value)\r\n    }\r\n    return (\r\n        <div>\r\n            <Grid container className={classes.grid} spacing={2}>\r\n                <Grid item xs={7}>\r\n                    <Card className={classes.root} variant=\"outlined\">\r\n                        <CardContent>\r\n                            <Portal container={container.current}>\r\n                                <Mentions />\r\n                            </Portal>\r\n                            <div ref={container} />\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n\r\n                <Grid item xs={5}>\r\n                    <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                        <InputLabel htmlFor=\"productType\">Product Type</InputLabel>\r\n                        <Select\r\n                            native\r\n                            value={productTypeId}\r\n                            onChange={handleProductTypeChange}\r\n                            label=\"ProductType\"\r\n                            inputProps={{\r\n                                name: 'productType',\r\n                                id: 'productType',\r\n                            }}\r\n                        >\r\n                            {\r\n                                productTypes && productTypes.map(t => <option key={t.id} value={t.id}>{t.name}</option>)\r\n                            }\r\n                        </Select>\r\n                    </FormControl>\r\n                    <Card className={classes.root} variant=\"outlined\">\r\n                        <CardContent>\r\n                            <Typography className={classes.secondary_title} color=\"textSecondary\" gutterBottom>\r\n                                IMAGES\r\n                            </Typography>\r\n                            <Images images={product.images} />\r\n                        </CardContent>\r\n                        {/* <CardActions>\r\n                    <Button size=\"small\">Learn More</Button>\r\n                    </CardActions> */}\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                <div>Hi there</div>\r\n            </Modal>\r\n        </div >\r\n    )\r\n}","import React, { useCallback, useState } from \"react\";\r\nimport { TextField, Card, Banner, Link } from \"@shopify/polaris\";\r\n\r\nexport default function TextFieldExample() {\r\n  const [value, setValue] = useState(\"J Pixel\");\r\n\r\n  const handleChange = useCallback((newValue) => setValue(newValue), []);\r\n\r\n  return (\r\n    <Card title=\"SEO\" sectioned>\r\n      <div style={{marginBottom:\"20px\"}}>\r\n        <Banner onDismiss={() => { }} status=\"warning\">\r\n          <p>\r\n            Your title should include 10-70 characters{' '}\r\n            <Link url=\"\">See more detailed explanation</Link>\r\n          </p>\r\n        </Banner>\r\n      </div>\r\n\r\n      <TextField label=\"Title\" value={value} onChange={handleChange} />\r\n      <TextField\r\n        label=\"Store name\"\r\n        multiline={5}\r\n        value={value}\r\n        onChange={handleChange}\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n","import React, { Component, useState, useEffect } from 'react';\r\nimport {\r\n  GridComponent,\r\n  ColumnDirective,\r\n  ColumnsDirective,\r\n  Page,\r\n  Inject,\r\n  Group,\r\n  Sort,\r\n  Edit,\r\n  EditSettingsModel,\r\n  Toolbar,\r\n  ToolbarItems,\r\n  CommandColumn\r\n} from '@syncfusion/ej2-react-grids';\r\nimport { Button } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport {Banner} from '@shopify/polaris';\r\n\r\nconst useStyles = makeStyles({\r\n  productTitle: {\r\n    alignItems: 'center'\r\n  }\r\n});\r\n\r\nconst Listing: React.FC = (data: any) => {\r\n  const variants: any = data.variants;\r\n  const [error, setError] = useState();\r\n  const history = useHistory();\r\n  let grid: any = null;\r\n  let match = useRouteMatch();\r\n\r\n  const classes = useStyles();\r\n  const editOptions: EditSettingsModel = { allowEditing: true, allowAdding: true, allowDeleting: true };\r\n  const toolbarOptions: ToolbarItems[] = ['Add', 'Edit', 'Delete'];\r\n\r\n  function productImageTemplate({ images, title }: any) {\r\n    const image_src = images && images.length > 0 && images.sort((img: any) => img.position)[0][\"src\"]\r\n    return (\r\n      <Grid container className={classes.productTitle}>\r\n        <Grid item xs={1}>\r\n          <div className={`${image_src ? \"image\" : \"no-image\"}`}>\r\n            {image_src ?\r\n              <img src={image_src} /> :\r\n              <svg viewBox=\"0 0 20 20\" className=\"_1nZTW xvNMs\"><path fill=\"currentColor\" d=\"M14 9l-5 5-3-2-5 3v4h18v-6z\"></path><path d=\"M19 0H1a1 1 0 0 0-1 1v18a1 1 0 0 0 1 1h18a1 1 0 0 0 1-1V1a1 1 0 0 0-1-1zM8 6c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm0 4c1.654 0 3-1.346 3-3S9.654 4 8 4 5 5.346 5 7s1.346 3 3 3zm-6 8v-2.434l3.972-2.383 2.473 1.65c.398.264.925.21 1.262-.126l4.367-4.367L18 13.48V18H2zM18 2v8.92l-3.375-2.7a.999.999 0 0 0-1.332.073l-4.42 4.42-2.318-1.545a1 1 0 0 0-1.07-.025L2 13.233V2h16z\"></path></svg>}\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={5}>\r\n          <span>{title}</span>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  function productTypeTemplate({ productType: { name } }: any) {\r\n    return (\r\n      <Grid container className={classes.productTitle}>\r\n        <Grid item xs={5}>\r\n          <span>{name}</span>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  function productVendorTemplate({ productVendor: { name } }: any) {\r\n\r\n    return (\r\n      <Grid container className={classes.productTitle}>\r\n        <Grid item xs={5}>\r\n          <span>{name}</span>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n  function productStatusTemplate({ productVendor: { name } }: any) {\r\n\r\n    return (\r\n      <Grid container className={classes.productTitle}>\r\n        <Grid item xs={5}>\r\n          <span>{name}</span>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  function manageProduct(props: any) {\r\n    return (<div className='btn_container'>\r\n      <Button><a href={\"/Edit/\" + props.ID}>Edit</a></Button>\r\n      <Button><a href={\"/Listings/\" + props.ID}>View</a></Button>\r\n    </div>);\r\n  }\r\n\r\n  function rowSelected() {\r\n    const selectedRow: any = grid && grid.getSelectedRecords();\r\n    const product: any = selectedRow && selectedRow[0];\r\n    const id: any = product && product._id;\r\n    history.push(`${match.path}/${id}`)\r\n  }\r\n\r\n  const pageSettings = {\r\n    pageSize: 6\r\n  }\r\n\r\n  return (\r\n    <Card variant=\"outlined\">\r\n\r\n      <CardContent>\r\n        <GridComponent ref={g => grid = g} rowSelected={rowSelected} dataSource={variants} enableHover={true} rowHeight={38} allowPaging={true} pageSettings={pageSettings} allowFiltering={true} allowSorting={true} allowSelection={true}>\r\n          <ColumnsDirective>\r\n            {/* <ColumnDirective field='Variant' headerText='Variant' template={productImageTemplate} width='370' /> */}\r\n            <ColumnDirective field='title' headerText='Title' width='180' />\r\n            <ColumnDirective field='price' headerText='Price' width='180' />\r\n            <ColumnDirective field='sku' headerText='SKU' editType='dropdownedit' width='130' />\r\n            {/* <ColumnDirective field='status' headerText='Type' template={productTypeTemplate} width='180' /> */}\r\n          </ColumnsDirective>\r\n          <Inject services={[Page, Group, Sort, Edit, Toolbar, CommandColumn]} />\r\n        </GridComponent>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Listing;","import React, { useState, useEffect } from \"react\";\r\nimport { getItem } from \"../services/products\"\r\nimport {\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { makeStyles, Theme, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Details from \"./Products/Details\"\r\nimport SEO from \"./Products/SEO\"\r\nimport Grid, { GridSpacing } from '@material-ui/core/Grid';\r\nimport StorefrontIcon from '@material-ui/icons/Storefront';\r\nimport BugReportIcon from '@material-ui/icons/BugReport';\r\nimport ControlPointDuplicateIcon from '@material-ui/icons/ControlPointDuplicate';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Button from '@material-ui/core/Button';\r\nimport Variants from \"./Products/Variants\"\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    secondary_title: {\r\n        fontSize: 14,\r\n    },\r\n    title: {\r\n        fontSize: 24,\r\n    },\r\n}));\r\n\r\nexport default function ProductItem() {\r\n    const [product, setProduct] = useState();\r\n    const [error, setError] = useState();\r\n    const [open, setOpen] = React.useState(false);\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [value, setValue] = React.useState(0);\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleChangeIndex = (index) => {\r\n        setValue(index);\r\n    };\r\n    let { itemId } = useParams();\r\n\r\n    useEffect(() => {\r\n        getProduct(itemId);\r\n    }, []);\r\n\r\n    function getProduct(itemId) {\r\n        return getItem(itemId).then(data => setProduct(data)).catch(err => setError(err.toString()));\r\n    }\r\n\r\n    return <div className={classes.root}>\r\n        {product ? (<Grid container className={classes.grid} spacing={2}>\r\n            <Grid item xs={12}>\r\n                <Typography className={classes.title} color=\"textPrimary\" gutterBottom>\r\n                    {product.title}\r\n                    <Grid item xs={12}>\r\n                        <Button href={`https://${product.shop}/products/${product.handle}`} target=\"_blank\">\r\n                            <BugReportIcon /> See online\r\n                    </Button>\r\n                        <Button href={`https://${product.shop}/admin/products/${product.shopify_id}`} target=\"_blank\">\r\n                            <StorefrontIcon /> Shopify\r\n                    </Button>\r\n                    </Grid>\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <AppBar position=\"static\" color=\"default\">\r\n                    <Tabs\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        variant=\"fullWidth\"\r\n                        aria-label=\"full width tabs example\"\r\n                    >\r\n                        <Tab label=\"Details\" {...a11yProps(0)} />\r\n                        <Tab label=\"Variants\" {...a11yProps(1)} />\r\n                        <Tab label=\"SEO\" {...a11yProps(2)} />\r\n                    </Tabs>\r\n                </AppBar>\r\n                {/* <SwipeableViews\r\n                    axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n                    index={value}\r\n                    onChangeIndex={handleChangeIndex}\r\n                > */}\r\n                <TabPanel value={value} index={0} dir={theme.direction}>\r\n                    <Details product={product} value={value} />\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1} dir={theme.direction}>\r\n                    <Variants variants={product.variants} />\r\n                </TabPanel>\r\n                <TabPanel value={value} index={2} dir={theme.direction}>\r\n                    <SEO />\r\n                </TabPanel>\r\n                {/* </SwipeableViews> */}\r\n            </Grid>\r\n        </Grid>) : (<div>loading...</div>)}\r\n    </div>\r\n}","import React, { useState } from \"react\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function Options(props) {\r\n    // const [selectedOptionID, setProductOption] = useState(\"\");\r\n    const optionChange = (event) => {\r\n        const optionID = event.target.options[event.target.selectedIndex].value;\r\n        props.onchange(props.index, optionID);\r\n    };\r\n\r\n    // const [selectedOptionID_2, setProductOption_2] = useState(\"\");\r\n    // const optionChange_2 = (event) => {\r\n    //     const optionID_2 = event.target.options[event.target.selectedIndex].value;\r\n    //     setProductOption_2(optionID_2);\r\n    // };\r\n\r\n    const classes = useStyles();\r\n    return <div>\r\n        {/* {options.map(option => <OptionItem key={option.ID} Id={option.ID} />)} */}\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel htmlFor=\"outlined-age-native-simple\">Choose option</InputLabel>\r\n                    <Select\r\n                            onChange={optionChange}\r\n                            native\r\n                            disabled={props.disabled}\r\n                            inputProps={{\r\n                                name: 'chooseOption',\r\n                                id: 'outlined-age-native-simple',\r\n                            }}\r\n                        >\r\n                            <option value=\"\" />\r\n                            <option value={1}>Color</option>\r\n                            <option value={2}>Size</option>\r\n                            <option value={3}>Price</option>\r\n                            <option value={4}>Quantity</option>\r\n                        </Select>\r\n                    </FormControl>          \r\n           \r\n        </div>\r\n}","import React,{useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Button from '@material-ui/core/Button';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Variants from \"./Options\";\r\nimport data from '../data/variants.json';\r\n\r\n    \r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\n\r\nexport default function Inputs() {\r\n  const classes = useStyles();\r\n  const [values, setValues] = useState({\r\n    amount: '',\r\n  });\r\n\r\n  var enableTitle = true;\r\n\r\n\r\n  const [productType,setProductType] = useState(\"\");\r\n  const [productTitle, setProductTitle] = useState(\"\");\r\n  const [productVendor, setProductVendor] = useState(\"\");\r\n  const [optionsArray, setOptionsArray] = useState([ '', '', '' ]);\r\n  const [generatedOptionsArray, setGeneratedOptionsArray] = useState([]);\r\n\r\n  function optionsChange(index, value) {\r\n    optionsArray[index] = value;\r\n    setOptionsArray(Object.assign([], optionsArray));\r\n  \r\n    setGeneratedOptionsArray(generateOptions());\r\n  }\r\n  \r\n  function generateOptions(name = '', start = 0, generatedOptions = []) {\r\n    let i = start;\r\n\r\n    data.map(item => {\r\n      if(item.optionID == optionsArray[i]) {\r\n        if(optionsArray[i+1] != '' && i+1 < optionsArray.length) {\r\n          generateOptions(name + ' ' + item.value, i+1, generatedOptions);\r\n        }\r\n        else generatedOptions.push(name + ' ' + item.value);\r\n      } \r\n    });\r\n\r\n    return generatedOptions;\r\n  }\r\n\r\n  const handleChange = prop => event => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleTitleChange = (event) => {\r\n    setProductTitle(event.target.value);\r\n  };\r\n\r\n  const productTypeChange = (event) => {\r\n    const productTypeOption = event.target.options[event.target.selectedIndex].text;\r\n    setProductType(productTypeOption);\r\n    setProductTitle(productTypeOption + \" \" + productVendor)\r\n  };\r\n\r\n  const productVendorChange = (event) => {\r\n    const productVendorOption = event.target.options[event.target.selectedIndex].text;\r\n    setProductVendor(productVendorOption);\r\n    setProductTitle(productType + \" \" + productVendorOption);\r\n  };\r\n\r\n  if (productType != \"\" && productVendor != \"\") {\r\n    enableTitle = false;\r\n  }\r\n\r\n\r\n\r\n  return <div className=\"container\">\r\n  <h2 style={{ textAlign: 'center', paddingTop: '15px' }}>EDIT PRODUCT</h2>\r\n  <form className={`${classes.root} form`} noValidate autoComplete=\"off\"> \r\n    <Grid className=\"form-container\" container spacing={3}> \r\n\r\n      <Grid item xs={6} className=\"productType-container\">\r\n          <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel htmlFor=\"outlined-age-native-simple\">Product type</InputLabel>\r\n            <Select\r\n              onChange={productTypeChange}\r\n              native\r\n              inputProps={{\r\n                name: 'productType',\r\n                id: 'outlined-age-native-simple',\r\n              }}\r\n            >\r\n              <option value=\"\" />\r\n              <option value={1}>some products</option>\r\n              <option value={2}>some products</option>\r\n            </Select>\r\n          </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item xs={6} className=\"vendor-container\">\r\n          <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel htmlFor=\"outlined-age-native-simple\">Vendors</InputLabel>\r\n            <Select\r\n              onChange={productVendorChange}\r\n              native\r\n              inputProps={{\r\n                name: 'vendors',\r\n                id: 'outlined-age-native-simple',\r\n              }}\r\n            >\r\n              <option value=\"\" />\r\n              <option value={1}>some vendors</option>\r\n              <option value={2}>some vendors</option>\r\n            </Select>\r\n          </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} className=\"title-container\">\r\n          <TextField\r\n            value={productTitle} \r\n            onChange={handleTitleChange} \r\n            className=\"MuiInputBase-fullWidth\"\r\n            disabled={enableTitle}\r\n            id=\"outlined-disabled\"\r\n            label=\"Product title\"\r\n            variant=\"outlined\"\r\n          />\r\n      </Grid>\r\n\r\n\r\n      <Grid item xs={3} className=\"strength-container\">\r\n          <FormControl variant=\"outlined\" className={classes.formControl}>\r\n          <InputLabel htmlFor=\"outlined-age-native-simple\">Strength</InputLabel>\r\n          <Select \r\n            native\r\n            inputProps={{\r\n              name: 'strength',\r\n              id: 'outlined-age-native-simple',\r\n            }}\r\n          >\r\n            <option value=\"\" />\r\n            <option value={30}>30mg</option>\r\n            <option value={50}>50mg</option>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={3} className=\"variant-container\">\r\n        <FormControl className={classes.margin} variant=\"outlined\">\r\n          <InputLabel htmlFor=\"outlined-adornment-amount\">Price</InputLabel>\r\n          <OutlinedInput\r\n            type=\"number\"\r\n            id=\"outlined-adornment-amount\"\r\n            onChange={handleChange('price')}\r\n            startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\r\n            labelWidth={60}\r\n          />\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={3} className=\"quantity-container\">\r\n        <FormControl className={classes.margin} variant=\"outlined\">\r\n          <InputLabel htmlFor=\"outlined-adornment-amount\">Quantity</InputLabel>\r\n          <OutlinedInput\r\n            type=\"number\"\r\n            id=\"outlined-adornment-amount\"\r\n            onChange={handleChange('quantity')}\r\n            labelWidth={60}\r\n          />\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={3} className=\"sku-container\">\r\n        <TextField id=\"outlined-basic\" label=\"SKU\" variant=\"outlined\" />\r\n      </Grid>\r\n      \r\n\r\n      {\r\n      optionsArray.map((item, i) => \r\n         <Grid item xs={4} className=\"productType-container\">\r\n            <Variants \r\n              index={i} \r\n              disabled={ i == 0 ? false : (optionsArray[i-1] == '' ? true: false)} \r\n              onchange={optionsChange}>\r\n            </Variants>\r\n        </Grid>\r\n      )\r\n      }\r\n\r\n      {generatedOptionsArray.map( (variant, i) => \r\n          <Grid item xs={12} key={i}> \r\n            {variant}\r\n          </Grid>\r\n      )}\r\n\r\n\r\n      <div className=\"save-button\">\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        size=\"large\"\r\n        className={classes.button}\r\n        startIcon={<SaveIcon />}\r\n      >\r\n        Save\r\n      </Button>\r\n      </div>\r\n    </Grid>\r\n  </form>\r\n</div>\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Button } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {},\r\n    row: {\r\n        height: '42px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    spacer: {\r\n        flexGrow: 1\r\n    },\r\n    title: {\r\n        fontSize: 24,\r\n    }\r\n}));\r\n\r\nconst UsersToolbar = props => {\r\n    const { className, ...rest } = props;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    let match = useRouteMatch();\r\n    function createProductType() {\r\n        history.push(`${match.path}/create`)\r\n    }\r\n    return (\r\n        <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"space-between\"\r\n            alignItems=\"center\"\r\n        >\r\n            <Grid item xs={2} style={{ paddingTop: 20, paddingBottom: 20 }}>\r\n                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                    Product types\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs={2}>\r\n                <Button\r\n                    onClick={createProductType}\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                >\r\n                    New product type\r\n                </Button>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nUsersToolbar.propTypes = {\r\n    className: PropTypes.string\r\n};\r\n\r\nexport default UsersToolbar;","import React, { Component, useState, useEffect } from 'react';\r\nimport {\r\n  GridComponent,\r\n  ColumnDirective,\r\n  ColumnsDirective,\r\n  Page,\r\n  Inject,\r\n  Group,\r\n  Sort,\r\n  Edit,\r\n  EditSettingsModel,\r\n  Toolbar,\r\n  ToolbarItems,\r\n  CommandColumn\r\n} from '@syncfusion/ej2-react-grids';\r\nimport { Button } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport * as service from \"../../services/productTypes\"\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport ProductTypesToolBar from \"./ProductTypesToolBar\"\r\nconst useStyles = makeStyles({\r\n  productTitle: {\r\n    alignItems: 'center'\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n  }\r\n});\r\n\r\nconst Listing: React.FC = () => {\r\n  const [productTypes, setProductTypes] = useState([]);\r\n  const [error, setError] = useState();\r\n  const [page, setPage] = useState(1);\r\n  const history = useHistory();\r\n  let grid: any = null;\r\n  let match = useRouteMatch();\r\n  useEffect(() => {\r\n    getAllProducttypes();\r\n  }, [page]);\r\n\r\n  const classes = useStyles();\r\n  const editOptions: EditSettingsModel = { allowEditing: true, allowAdding: true, allowDeleting: true };\r\n  const toolbarOptions: ToolbarItems[] = ['Add', 'Edit', 'Delete'];\r\n\r\n  const getAllProducttypes = () => {\r\n    return service.getAll().then(data => setProductTypes(data)).catch(err => setError(err.toString()));\r\n  }\r\n\r\n  function rowSelected() {\r\n    const selectedRow: any = grid && grid.getSelectedRecords();\r\n    const productType: any = selectedRow && selectedRow[0];\r\n    const id: any = productType && productType._id;\r\n    history.push(`${match.path}/${id}`)\r\n  }\r\n\r\n  const pageSettings = {\r\n    pageSize: 6\r\n  }\r\n  function products(){\r\n    return <div>{Math.floor(Math.random() * 20) }</div>\r\n  }\r\n  return (\r\n    <Card variant=\"outlined\">\r\n      <CardContent>\r\n        <ProductTypesToolBar />\r\n        <GridComponent ref={g => grid = g} rowSelected={rowSelected} dataSource={productTypes} enableHover={true} rowHeight={38} allowPaging={true} pageSettings={pageSettings} allowFiltering={true} allowSorting={true} allowSelection={true}>\r\n          <ColumnsDirective>\r\n            <ColumnDirective field='name' headerText='Name' width='180' />\r\n            <ColumnDirective field='products' headerText='Products' width='180' template={products} />\r\n          </ColumnsDirective>\r\n          <Inject services={[Page, Group, Sort, Edit, Toolbar, CommandColumn]} />\r\n        </GridComponent>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Listing;","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { cx, css } from 'emotion'\r\n\r\nexport const Button = React.forwardRef(\r\n  ({ className, active, reversed, ...props }, ref) => (\r\n    <span\r\n      {...props}\r\n      ref={ref}\r\n      className={cx(\r\n        className,\r\n        css`\r\n          cursor: pointer;\r\n          color: ${reversed\r\n            ? active\r\n              ? 'white'\r\n              : '#aaa'\r\n            : active\r\n            ? 'black'\r\n            : '#ccc'};\r\n        `\r\n      )}\r\n    />\r\n  )\r\n)\r\n\r\nexport const EditorValue = React.forwardRef(\r\n  ({ className, value, ...props }, ref) => {\r\n    const textLines = value.document.nodes\r\n      .map(node => node.text)\r\n      .toArray()\r\n      .join('\\n')\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        {...props}\r\n        className={cx(\r\n          className,\r\n          css`\r\n            margin: 30px -20px 0;\r\n          `\r\n        )}\r\n      >\r\n        <div\r\n          className={css`\r\n            font-size: 14px;\r\n            padding: 5px 20px;\r\n            color: #404040;\r\n            border-top: 2px solid #eeeeee;\r\n            background: #f8f8f8;\r\n          `}\r\n        >\r\n          Slate's value as text\r\n        </div>\r\n        <div\r\n          className={css`\r\n            color: #404040;\r\n            font: 12px monospace;\r\n            white-space: pre-wrap;\r\n            padding: 10px 20px;\r\n            div {\r\n              margin: 0 0 0.5em;\r\n            }\r\n          `}\r\n        >\r\n          {textLines}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n)\r\n\r\nexport const Icon = React.forwardRef(({ className, ...props }, ref) => (\r\n  <span\r\n    {...props}\r\n    ref={ref}\r\n    className={cx(\r\n      'material-icons',\r\n      className,\r\n      css`\r\n        font-size: 18px;\r\n        vertical-align: text-bottom;\r\n      `\r\n    )}\r\n  />\r\n))\r\n\r\nexport const Instruction = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div\r\n    {...props}\r\n    ref={ref}\r\n    className={cx(\r\n      className,\r\n      css`\r\n        white-space: pre-wrap;\r\n        margin: 0 -20px 10px;\r\n        padding: 10px 20px;\r\n        font-size: 14px;\r\n        background: #f8f8e8;\r\n      `\r\n    )}\r\n  />\r\n))\r\n\r\nexport const Menu = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div\r\n    {...props}\r\n    ref={ref}\r\n    className={cx(\r\n      className,\r\n      css`\r\n        & > * {\r\n          display: inline-block;\r\n        }\r\n        & > * + * {\r\n          margin-left: 15px;\r\n        }\r\n      `\r\n    )}\r\n  />\r\n))\r\n\r\nexport const Portal = ({ children }) => {\r\n  return ReactDOM.createPortal(children, document.body)\r\n}\r\n\r\nexport const Toolbar = React.forwardRef(({ className, ...props }, ref) => (\r\n  <Menu\r\n    {...props}\r\n    ref={ref}\r\n    className={cx(\r\n      className,\r\n      css`\r\n        position: relative;\r\n        padding: 1px 18px 17px;\r\n        margin: 0 -20px;\r\n        border-bottom: 2px solid #eee;\r\n        margin-bottom: 20px;\r\n      `\r\n    )}\r\n  />\r\n))","import React, { useCallback, useMemo, useState } from 'react'\r\nimport isHotkey from 'is-hotkey'\r\nimport { Editable, withReact, useSlate, Slate } from 'slate-react'\r\nimport { Editor, Transforms, createEditor } from 'slate'\r\nimport { withHistory } from 'slate-history'\r\n\r\nimport { Button, Icon, Toolbar } from './components'\r\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\r\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic';\r\nimport FormatUnderlinedIcon from '@material-ui/icons/FormatUnderlined';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\nimport FormatSizeIcon from '@material-ui/icons/FormatSize';\r\nimport FormatQuoteIcon from '@material-ui/icons/FormatQuote';\r\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\n\r\nconst HOTKEYS = {\r\n    'mod+b': 'bold',\r\n    'mod+i': 'italic',\r\n    'mod+u': 'underline',\r\n    'mod+`': 'code',\r\n}\r\n\r\nconst LIST_TYPES = ['numbered-list', 'bulleted-list']\r\n\r\nconst RichTextExample = ({ onChange, initialValue }) => {\r\n    const [value, setValue] = useState(initialValue)\r\n    const renderElement = useCallback(props => <Element {...props} />, [])\r\n    const renderLeaf = useCallback(props => <Leaf {...props} />, [])\r\n    const editor = useMemo(() => withHistory(withReact(createEditor())), [])\r\n\r\n    return (\r\n        <Slate editor={editor} value={value} onChange={value => { setValue(value); onChange(value) }}>\r\n            <Toolbar>\r\n                <MarkButton format=\"bold\" icon={<FormatBoldIcon />} />\r\n                <MarkButton format=\"italic\" icon={<FormatItalicIcon />} />\r\n                <MarkButton format=\"underline\" icon={<FormatUnderlinedIcon />} />\r\n                <MarkButton format=\"code\" icon={<CodeIcon />} />\r\n                <BlockButton format=\"heading-one\" icon={<FormatSizeIcon />} />\r\n                <BlockButton format=\"block-quote\" icon={<FormatQuoteIcon />} />\r\n                <BlockButton format=\"numbered-list\" icon={<FormatListNumberedIcon />} />\r\n                <BlockButton format=\"bulleted-list\" icon={<FormatListBulletedIcon />} />\r\n            </Toolbar>\r\n            <Editable\r\n                renderElement={renderElement}\r\n                renderLeaf={renderLeaf}\r\n                placeholder=\"Enter some rich text…\"\r\n                spellCheck\r\n                autoFocus\r\n                onKeyDown={event => {\r\n                    for (const hotkey in HOTKEYS) {\r\n                        if (isHotkey(hotkey, event)) {\r\n                            event.preventDefault()\r\n                            const mark = HOTKEYS[hotkey]\r\n                            toggleMark(editor, mark)\r\n                        }\r\n                    }\r\n                }}\r\n            />\r\n        </Slate>\r\n    )\r\n}\r\n\r\nconst toggleBlock = (editor, format) => {\r\n    const isActive = isBlockActive(editor, format)\r\n    const isList = LIST_TYPES.includes(format)\r\n\r\n    Transforms.unwrapNodes(editor, {\r\n        match: n => LIST_TYPES.includes(n.type),\r\n        split: true,\r\n    })\r\n\r\n    Transforms.setNodes(editor, {\r\n        type: isActive ? 'paragraph' : isList ? 'list-item' : format,\r\n    })\r\n\r\n    if (!isActive && isList) {\r\n        const block = { type: format, children: [] }\r\n        Transforms.wrapNodes(editor, block)\r\n    }\r\n}\r\n\r\nconst toggleMark = (editor, format) => {\r\n    const isActive = isMarkActive(editor, format)\r\n\r\n    if (isActive) {\r\n        Editor.removeMark(editor, format)\r\n    } else {\r\n        Editor.addMark(editor, format, true)\r\n    }\r\n}\r\n\r\nconst isBlockActive = (editor, format) => {\r\n    const [match] = Editor.nodes(editor, {\r\n        match: n => n.type === format,\r\n    })\r\n\r\n    return !!match\r\n}\r\n\r\nconst isMarkActive = (editor, format) => {\r\n    const marks = Editor.marks(editor)\r\n    return marks ? marks[format] === true : false\r\n}\r\n\r\nconst Element = ({ attributes, children, element }) => {\r\n    switch (element.type) {\r\n        case 'block-quote':\r\n            return <blockquote {...attributes}>{children}</blockquote>\r\n        case 'bulleted-list':\r\n            return <ul {...attributes}>{children}</ul>\r\n        case 'heading-one':\r\n            return <h1 {...attributes}>{children}</h1>\r\n        case 'heading-two':\r\n            return <h2 {...attributes}>{children}</h2>\r\n        case 'list-item':\r\n            return <li {...attributes}>{children}</li>\r\n        case 'numbered-list':\r\n            return <ol {...attributes}>{children}</ol>\r\n        default:\r\n            return <p {...attributes}>{children}</p>\r\n    }\r\n}\r\n\r\nconst Leaf = ({ attributes, children, leaf }) => {\r\n    if (leaf.bold) {\r\n        children = <strong>{children}</strong>\r\n    }\r\n\r\n    if (leaf.code) {\r\n        children = <code>{children}</code>\r\n    }\r\n\r\n    if (leaf.italic) {\r\n        children = <em>{children}</em>\r\n    }\r\n\r\n    if (leaf.underline) {\r\n        children = <u>{children}</u>\r\n    }\r\n\r\n    return <span {...attributes}>{children}</span>\r\n}\r\n\r\nconst BlockButton = ({ format, icon }) => {\r\n    const editor = useSlate()\r\n    return (\r\n        <Button\r\n            active={isBlockActive(editor, format)}\r\n            onMouseDown={event => {\r\n                event.preventDefault()\r\n                toggleBlock(editor, format)\r\n            }}\r\n        >\r\n            <Icon>{icon}</Icon>\r\n        </Button>\r\n    )\r\n}\r\n\r\nconst MarkButton = ({ format, icon }) => {\r\n    const editor = useSlate()\r\n    return (\r\n        <Button\r\n            active={isMarkActive(editor, format)}\r\n            onMouseDown={event => {\r\n                event.preventDefault()\r\n                toggleMark(editor, format)\r\n            }}\r\n        >\r\n            {icon}\r\n        </Button>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default RichTextExample","import React, { useReducer, useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport RichTextEditor from \"../Slate/RichTextEditor\"\r\nimport escapeHtml from 'escape-html'\r\nimport { Node, Text } from 'slate'\r\nimport { jsx } from 'slate-hyperscript'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: '10px'\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  richEditor: {\r\n    padding: \"25px\",\r\n    border: \"solid 1px rgba(0, 0, 0, 0.23)\",\r\n    borderRadius: \"4px\",\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst initialValue =\r\n  [\r\n    {\r\n      type: 'paragraph',\r\n      children: [\r\n        { text: 'This is editable ' },\r\n        { text: 'rich', bold: true },\r\n        { text: ' text, ' },\r\n        { text: 'much', italic: true },\r\n        { text: ' better than a ' },\r\n        { text: '<textarea>', code: true },\r\n        { text: '!' },\r\n      ],\r\n    },\r\n    {\r\n      type: 'paragraph',\r\n      children: [\r\n        {\r\n          text:\r\n            \"Since it's rich text, you can do things like turn a selection of text \",\r\n        },\r\n        { text: 'bold', bold: true },\r\n        {\r\n          text:\r\n            ', or add a semantically rendered block quote in the middle of the page, like this:',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      type: 'block-quote',\r\n      children: [{ text: 'A wise quote.' }],\r\n    },\r\n    {\r\n      type: 'paragraph',\r\n      children: [{ text: 'Try it out for yourself!' }],\r\n    },\r\n  ]\r\n\r\nexport default function Form({ initialData, onSubmit }) {\r\n  const classes = useStyles();\r\n  const [error, setError] = useState();\r\n\r\n  const [userInput, setUserInput] = useReducer(\r\n    (state, newState) => ({ ...state, ...newState }),\r\n    {\r\n      ...initialData\r\n    }\r\n  );\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    const data = { ...userInput }\r\n    onSubmit(data)\r\n  }\r\n\r\n  const handleChange = evt => {\r\n    const name = evt.target.name;\r\n    const newValue = evt.target.value;\r\n    setUserInput({ [name]: newValue });\r\n  }\r\n\r\n  const serialize = node => {\r\n    if (Text.isText(node)) {\r\n      return escapeHtml(node.text)\r\n    }\r\n\r\n    const children = node.children && node.children.map(n => serialize(n)).join('')\r\n\r\n    switch (node.type) {\r\n      case 'block-quote':\r\n        return `<blockquote>${children}</blockquote>`\r\n      case 'paragraph':\r\n        return `<p>${children}</p>`\r\n      case 'link':\r\n        return `<a href=\"${escapeHtml(node.url)}\">${children}</a>`\r\n      case 'bulleted-list':\r\n        return `<ul>${children}</ul>`\r\n      case 'heading-one':\r\n        return `<h1>${children}</h1>`\r\n      case 'heading-two':\r\n        return `<h2>${children}</h2>`\r\n      case 'list-item':\r\n        return `<li>${children}</li>`\r\n      case 'numbered-list':\r\n        return `<ol>${children}</ol>`\r\n      default:\r\n        return children\r\n    }\r\n  }\r\n\r\n  const deserialize = el => {\r\n    if (el.nodeType === 3) {\r\n      return el.textContent\r\n    } else if (el.nodeType !== 1) {\r\n      return null\r\n    }\r\n\r\n    const children = Array.from(el.childNodes).map(deserialize)\r\n\r\n    switch (el.nodeName) {\r\n      case 'BODY':\r\n        return jsx('fragment', {}, children)\r\n      case 'BR':\r\n        return '\\n'\r\n      case 'BLOCKQUOTE':\r\n        return jsx('element', { type: 'block-quote' }, children)\r\n      case 'P':\r\n        return jsx('element', { type: 'paragraph' }, children)\r\n      case 'UL':\r\n        return jsx('element', { type: 'bulleted-list' }, children)\r\n      case 'H1':\r\n        return jsx('element', { type: 'heading-one' }, children)\r\n      case 'H2':\r\n        return jsx('element', { type: 'heading-two' }, children)\r\n      case 'LI':\r\n        return jsx('element', { type: 'list-item' }, children)\r\n      case 'OL':\r\n        return jsx('element', { type: 'numbered-list' }, children)\r\n      case 'A':\r\n        return jsx(\r\n          'element',\r\n          { type: 'link', url: el.getAttribute('href') },\r\n          children\r\n        )\r\n      default:\r\n        return el.textContent\r\n    }\r\n  }\r\n\r\n  const templateData = (userInput && userInput.template && deserialize(new DOMParser().parseFromString(userInput.template, 'text/html').body)) || initialValue \r\n\r\n  const handleRichTextChange = (nodes) => {\r\n    const text = nodes.map(node => serialize(node)).join(\"\");\r\n    setUserInput({ \"template\": text });\r\n  }\r\n  return (\r\n    <Container >\r\n      <CssBaseline />\r\n      <Paper className={classes.root}>\r\n        {/* <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography> */}\r\n        <form onSubmit={handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                name=\"name\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                value={userInput.name}\r\n                onChange={handleChange}\r\n                label=\"Name\"\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <div className={classes.richEditor}>\r\n                <RichTextEditor initialValue={templateData} onChange={handleRichTextChange} />\r\n              </div>\r\n            </Grid>\r\n            </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Save\r\n          </Button>\r\n        </form>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport Form from './ProductTypeForm';\r\nimport { useParams,useHistory } from \"react-router-dom\";\r\nimport { update, getItem } from \"../../services/productTypes\"\r\n\r\nexport default function Create() {\r\n    const [error, setError] = useState();\r\n    const [productType, setProductType] = useState();\r\n    let { itemId } = useParams();\r\n    let history = useHistory();\r\n\r\n\r\n    function getProductType(itemId) {\r\n        return getItem(itemId).then(data => setProductType(data)).catch(err => setError(err.toString()));\r\n    }\r\n\r\n    useEffect(() => {\r\n        getProductType(itemId);\r\n    }, []);\r\n\r\n    function handleSubmit(data) {\r\n        update(data,itemId).catch(err => setError(err.toString()));\r\n        history.goBack()\r\n    }\r\n    return (\r\n        <div>\r\n            {productType && <Form onSubmit={handleSubmit} initialData={productType} />}\r\n        </div>\r\n    )\r\n}\r\n","import React,{useState} from \"react\";\r\nimport Form from './ProductTypeForm';\r\nimport { create } from \"../../services/productTypes\"\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Create() {\r\n    let history = useHistory();\r\n    const [error, setError] = useState();\r\n\r\n    function handleSubmit(data) {\r\n        create(data).catch(err => setError(err.toString()));\r\n        history.goBack()\r\n    }\r\n    return (\r\n        <div>\r\n            <Form onSubmit={handleSubmit} />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useCallback, useState, useEffect } from 'react';\r\nimport { Avatar, Popover, Button, Card, ResourceList, TextField, ActionList } from '@shopify/polaris';\r\nimport {\r\n    CirclePlusMinor, SelectMinor\r\n} from '@shopify/polaris-icons';\r\n\r\nexport default function PopoverLazyLoadExample({ value, getData, data, labelFieldName, onSelect, label, placeholder, showConnectedRight }) {\r\n    showConnectedRight ?? (showConnectedRight = true);\r\n    const [popoverActive, setPopoverActive] = useState(false);\r\n\r\n    const [options, setOptions] = useState(data || []);\r\n    const [inputValue, setInputValue] = useState(value);\r\n\r\n    useEffect(() => {\r\n        getOptionsData()\r\n    }, [0])\r\n\r\n    useEffect(() => {\r\n        setInputValue(value)\r\n    }, [value])\r\n\r\n    const getOptionsData = () => {\r\n        typeof getData == 'function' && getData().then((data) => {\r\n            setOptions(data)\r\n        })\r\n    }\r\n\r\n    const visibleOptions = inputValue ? options.filter(i => i[labelFieldName].toLowerCase().indexOf(inputValue.toLowerCase()) != -1) : options;\r\n\r\n    const togglePopoverActive = useCallback(\r\n        () => setPopoverActive((popoverActive) => !popoverActive),\r\n        [],\r\n    );\r\n\r\n    const handleResourceListItemClick = (id) => {\r\n        const option = options.find(option => option._id == id)\r\n        setInputValue(option && option[labelFieldName])\r\n        onSelect(option)\r\n        setPopoverActive(false)\r\n    };\r\n\r\n    const updateText = useCallback(\r\n        (value) => {\r\n            setInputValue(value);\r\n        },\r\n        [],\r\n    );\r\n\r\n    const handleClearButtonClick = useCallback(() => setInputValue(''), []);\r\n\r\n    const activator = (\r\n        <TextField\r\n            label={label}\r\n            placeholder={placeholder}\r\n            type=\"text\"\r\n            value={inputValue}\r\n            autoComplete={false}\r\n            onChange={updateText}\r\n            clearButton\r\n            onClearButtonClick={handleClearButtonClick}\r\n            connectedRight={\r\n                showConnectedRight && <Button onClick={() => { setPopoverActive(true) }} icon={SelectMinor}></Button>\r\n            }\r\n            onFocus={() => { setPopoverActive(true) }}\r\n        />\r\n    );\r\n\r\n    const popoverContent = (\r\n        visibleOptions.length > 0 ?\r\n            <ResourceList items={visibleOptions} renderItem={renderItem} />\r\n            : inputValue && <ActionList items={[{ content: `Add ${inputValue}`, icon: CirclePlusMinor, onAction: () => { onSelect({ [labelFieldName]: inputValue }); setPopoverActive(false) } }]} />\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                fullWidth\r\n                active={popoverActive}\r\n                activator={activator}\r\n                onClose={togglePopoverActive}\r\n                ariaHaspopup={false}\r\n            >\r\n                <Popover.Pane>\r\n                    {popoverContent}\r\n                </Popover.Pane>\r\n            </Popover>\r\n        </div>\r\n    );\r\n\r\n    function renderItem(data) {\r\n        return (\r\n            <ResourceList.Item\r\n                id={data._id}\r\n                onClick={handleResourceListItemClick}\r\n            >\r\n                {data[labelFieldName]}\r\n            </ResourceList.Item>\r\n        );\r\n    }\r\n\r\n}\r\n","import { handleErrors } from \"../utils/errorHandling_ts\"\r\nimport { Vendor } from \"../Models/Vendor\"\r\n\r\nexport const getAll = () => fetch(\"/api/productVendors\").then(handleErrors).then(response => response.json())","import React, { useCallback, useState, useEffect } from 'react';\r\nimport { Icon, DisplayText, Button } from '@shopify/polaris';\r\nimport { useParams, useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport {\r\n    CircleTickMajor\r\n} from '@shopify/polaris-icons';\r\n\r\nexport default function Tabs({ title, tabs, data }) {\r\n\r\n    // const [selectedTab, setSelectedTab] = useState({ ...tabs[0] })\r\n    const history = useHistory();\r\n\r\n    const { section } = useParams();\r\n\r\n    const match = useRouteMatch();\r\n\r\n    const selectedTab = tabs.find(t => t[\"id\"] === section) || tabs[0];\r\n    const handleTabChange = useCallback(\r\n        (value) => {\r\n            goToSection(value, match, history)\r\n        },\r\n        [match, history],\r\n    );\r\n    const goToSection = function (sectionName, match, history) {\r\n        const newURL = match.path.replace(':itemId', match.params[\"itemId\"]).replace(\":section?\", sectionName)\r\n        history.push(newURL);\r\n    }\r\n    const handleNextSection = useCallback(\r\n        () => {\r\n            const currentSectionIndex = section ? tabs.findIndex(t => t[\"id\"] === section) : 0;\r\n            const nextTabIndex = currentSectionIndex + 1\r\n            if (nextTabIndex < tabs.length) {\r\n                goToSection(tabs[nextTabIndex][\"id\"], match, history)\r\n            }\r\n        },\r\n        [section, match, history],\r\n    );\r\n    return (\r\n        <div className=\"qwerty-tabs\">\r\n            <div className=\"qwerty-tabstitle\">\r\n                <DisplayText element=\"h2\" size=\"medium\">{title}</DisplayText>\r\n            </div>\r\n            <div className=\"qwerty-tabs-wrapper\">\r\n                <ul role=\"tablist\" className=\"qwerty-tabslist\">\r\n                    {\r\n                        tabs.map(tab => {\r\n                            const tabDataIsComplete = typeof tab.isCompleted === 'function' && tab.isCompleted(data)\r\n                            return (<li role=\"presentation\" className={`qwerty-tabsitem ${tabDataIsComplete ? 'qwerty-tabitem-complete' : ''} ${tab[\"id\"] == selectedTab[\"id\"] ? 'qwerty-tabitem-active' : ''}`} onClick={() => { handleTabChange(tab[\"id\"]) }} key={`qwerty-ctr-${tab[\"id\"]}`}>\r\n                                <button className=\"qwerty-tabsitem-button\"><span className=\"qwerty-tabitem-icon\">{tabDataIsComplete ? <Icon source={CircleTickMajor} /> : tab[\"icon\"] && <Icon source={tab[\"icon\"]} />}</span><span className=\"qwerty-tabitem-title\">{tab[\"title\"]}</span></button>\r\n                            </li>)\r\n                        })\r\n                    }\r\n                </ul>\r\n                <div className=\"qwerty-tabscontent\">\r\n                    {\r\n                        <div role=\"presentation\">{typeof selectedTab[\"content\"] == 'function' ? selectedTab[\"content\"](data) : selectedTab[\"content\"]}</div>\r\n                    }\r\n                    <div className=\"Polaris-Card__Footer\">\r\n                        <Button primary onClick={handleNextSection}>Next</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { Button, Icon, Toolbar } from '../../slate/components'\r\n\r\n\r\nimport React, { useMemo, useCallback, useRef, useEffect, useState } from 'react'\r\nimport { withHistory } from 'slate-history'\r\n\r\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\r\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic';\r\nimport FormatUnderlinedIcon from '@material-ui/icons/FormatUnderlined';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\nimport FormatSizeIcon from '@material-ui/icons/FormatSize';\r\nimport FormatQuoteIcon from '@material-ui/icons/FormatQuote';\r\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\nimport { jsx } from 'slate-hyperscript'\r\nimport escapeHtml from 'escape-html'\r\n\r\nimport { Editor, Transforms, Range, createEditor, Text, Element as SlateElement, } from 'slate'\r\nimport {\r\n  Slate,\r\n  Editable,\r\n  ReactEditor,\r\n  withReact,\r\n  useSelected,\r\n  useFocused,\r\n  useSlate\r\n} from 'slate-react'\r\n\r\nconst LIST_TYPES = ['numbered-list', 'bulleted-list']\r\nconst ALL_VENDORS = [\r\n  {\r\n    name: \"MY Myle\",\r\n    url: \"https://vapejuicedepot.com/collections/myle-vapor\"\r\n  },\r\n  {\r\n    name: \"MYLE\",\r\n    url: \"https://vapejuicedepot.com/collections/myle-vapor\"\r\n  },\r\n  {\r\n    name: \"MYLE Pod System\",\r\n    url: \"https://vapejuicedepot.com/collections/myle-vapor\"\r\n  },\r\n  {\r\n    name: \"Nicotine salts\",\r\n    url: \"https://vapejuicedepot.com/collections/nicotine-salts\"\r\n  },\r\n  {\r\n    name: \"Freebase e-Liquids\",\r\n    url: \"https://vapejuicedepot.com/collections/freebase-e-liquids\"\r\n  },\r\n  {\r\n    name: \"SMOK Tech\",\r\n    url: \"https://vapejuicedepot.com/collections/smok-tech\"\r\n  },\r\n  {\r\n    name: \"Vape Accessories\",\r\n    url: \"https://vapejuicedepot.com/collections/vape-accessories\"\r\n  },\r\n  {\r\n    name: \"Vape Box Mods\",\r\n    url: \"https://vapejuicedepot.com/collections/vape-box-mods\"\r\n  },\r\n  {\r\n    name: \"SMOK Tech\",\r\n    url: \"https://vapejuicedepot.com/collections/smok-tech\"\r\n  },\r\n  {\r\n    name: \"SMOK Tech\",\r\n    url: \"https://vapejuicedepot.com/collections/smok-tech\"\r\n  },\r\n  {\r\n    name: \"The Council of Vapor\",\r\n    url: \"https://vapejuicedepot.com/collections/the-council-of-vapor\"\r\n  },\r\n\r\n]\r\n\r\nconst serializeLeaf = (leaf) => {\r\n  if (leaf.div)\r\n    return `<div>${escapeHtml(leaf.text)}</div>`\r\n  if (leaf.code)\r\n    return `<strong>${escapeHtml(leaf.text)}</strong>`\r\n  if (leaf.del)\r\n    return `<del>${escapeHtml(leaf.text)}</del>`\r\n  if (leaf.italic)\r\n    return `<em>${escapeHtml(leaf.text)}</em>`\r\n  if (leaf.strikethrough)\r\n    return `<del>${escapeHtml(leaf.text)}</del>`\r\n\r\n  return escapeHtml(leaf.text)\r\n}\r\n\r\nconst serialize = node => {\r\n  if (Text.isText(node)) {\r\n    return serializeLeaf(node)\r\n  }\r\n\r\n  const children = node.children.map(n => serialize(n)).join('')\r\n\r\n  switch (node.type) {\r\n    case 'quote':\r\n      return `<blockquote><p>${children}</p></blockquote>`\r\n    case 'paragraph':\r\n      return `<p>${children}</p>`\r\n    case 'div':\r\n      return `<div>${children}</div>`\r\n    case 'link':\r\n      return `<a href=\"${escapeHtml(node.url)}\">${children}</a>`\r\n    default:\r\n      return children\r\n  }\r\n}\r\n\r\nconst Mentions = ({ label, htmlString, onChange }) => {\r\n\r\n  const parsed = new DOMParser().parseFromString(htmlString || '<p>Write something inspiring</p>', 'text/html')\r\n  const initialValue = deserialize(parsed.body)\r\n  const ref = useRef()\r\n\r\n  const [value, setValue] = useState(initialValue)\r\n\r\n  const [target, setTarget] = useState()\r\n  const [index, setIndex] = useState(0)\r\n  const [search, setSearch] = useState('')\r\n  const renderElement = useCallback(props => <Element {...props} />, [])\r\n  const renderLeaf = useCallback(props => <Leaf {...props} />, [])\r\n\r\n  const editor = useMemo(\r\n    () => withMentions(withReact(withHistory(createEditor()))),\r\n    []\r\n  )\r\n  const vendors = ALL_VENDORS.filter(v =>\r\n    v.name.toLowerCase().startsWith(search.toLowerCase())\r\n  ).slice(0, 10)\r\n\r\n  useEffect(() => {\r\n    const parsed = new DOMParser().parseFromString(htmlString || '<p></p> ', 'text/html')\r\n    const initialValue = deserialize(parsed.body)\r\n    setValue(initialValue)\r\n  }, [htmlString]);\r\n\r\n  const onKeyDown = useCallback(\r\n    event => {\r\n      if (target) {\r\n        switch (event.key) {\r\n          case 'ArrowDown':\r\n            event.preventDefault()\r\n            const prevIndex = index >= vendors.length - 1 ? 0 : index + 1\r\n            setIndex(prevIndex)\r\n            break\r\n          case 'ArrowUp':\r\n            event.preventDefault()\r\n            const nextIndex = index <= 0 ? vendors.length - 1 : index - 1\r\n            setIndex(nextIndex)\r\n            break\r\n          case 'Tab':\r\n          case 'Enter':\r\n            event.preventDefault()\r\n            Transforms.select(editor, target)\r\n            insertMention(editor, vendors[index])\r\n            setTarget(null)\r\n            break\r\n          case 'Escape':\r\n            event.preventDefault()\r\n            setTarget(null)\r\n            break\r\n        }\r\n      }\r\n    },\r\n    [index, search, target]\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (target && vendors.length > 0) {\r\n      const el = ref.current\r\n      const domRange = ReactEditor.toDOMRange(editor, target)\r\n      const rect = domRange.getBoundingClientRect()\r\n      el.style.top = `${rect.top + window.pageYOffset + 20}px`\r\n      el.style.left = `${rect.left + window.pageXOffset}px`\r\n    }\r\n  }, [vendors.length, editor, index, search, target])\r\n\r\n  return (\r\n    <>\r\n      <div className=\"Polaris-Labelled__LabelWrapper\">\r\n        <label className=\"Polaris-Label__Text\">\r\n          {label}\r\n        </label>\r\n      </div>\r\n\r\n      <div className=\"mentions-wrapper\">\r\n        <Slate\r\n          editor={editor}\r\n          value={value}\r\n          onChange={value => {\r\n            setValue(value)\r\n            const { selection } = editor\r\n\r\n            const serialized_text = editor.children.map(n => serialize(n)).join('')\r\n            typeof onChange == 'function' && onChange(serialized_text)\r\n\r\n            if (selection && Range.isCollapsed(selection)) {\r\n              const [start] = Range.edges(selection)\r\n              const wordBefore = Editor.before(editor, start, { unit: 'word' })\r\n              const before = wordBefore && Editor.before(editor, wordBefore)\r\n              const beforeRange = before && Editor.range(editor, before, start)\r\n              const beforeText = beforeRange && Editor.string(editor, beforeRange)\r\n              const beforeMatch = beforeText && beforeText.match(/^@(\\w+)$/)\r\n              const after = Editor.after(editor, start)\r\n              const afterRange = Editor.range(editor, start, after)\r\n              const afterText = Editor.string(editor, afterRange)\r\n              const afterMatch = afterText.match(/^(\\s|$)/)\r\n\r\n              if (beforeMatch && afterMatch) {\r\n                setTarget(beforeRange)\r\n                setSearch(beforeMatch[1])\r\n                setIndex(0)\r\n                return\r\n              }\r\n            }\r\n\r\n            setTarget(null)\r\n          }}\r\n        >\r\n          <Toolbar>\r\n            <MarkButton format=\"bold\" icon={<FormatBoldIcon />} />\r\n            <MarkButton format=\"italic\" icon={<FormatItalicIcon />} />\r\n            <MarkButton format=\"underline\" icon={<FormatUnderlinedIcon />} />\r\n            <MarkButton format=\"code\" icon={<CodeIcon />} />\r\n            <BlockButton format=\"heading-one\" icon={<FormatSizeIcon />} />\r\n            <BlockButton format=\"quote\" icon={<FormatQuoteIcon />} />\r\n            <BlockButton format=\"numbered-list\" icon={<FormatListNumberedIcon />} />\r\n            <BlockButton format=\"bulleted-list\" icon={<FormatListBulletedIcon />} />\r\n          </Toolbar>\r\n          <Editable\r\n            renderElement={renderElement}\r\n            renderLeaf={renderLeaf}\r\n            onKeyDown={onKeyDown}\r\n            placeholder=\"Write something inspiring\"\r\n          />\r\n          {target && vendors.length > 0 && (\r\n            <div\r\n              ref={ref}\r\n              style={{\r\n                top: '-9999px',\r\n                left: '-9999px',\r\n                position: \"fixed\",\r\n                display: \"block\",\r\n                zIndex: 1,\r\n                padding: '3px',\r\n                background: 'white',\r\n                borderRadius: '4px',\r\n                boxShadow: '0 1px 5px rgba(0,0,0,.2)',\r\n              }}\r\n            >\r\n              {vendors.map((vendor, i) => (\r\n                <div\r\n                  key={vendor.name}\r\n                  style={{\r\n                    padding: '1px 3px',\r\n                    borderRadius: '3px',\r\n                    background: i === index ? '#B4D5FF' : 'transparent',\r\n                  }}\r\n                >\r\n                  {vendor.name}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </Slate>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst withMentions = editor => {\r\n  const { isInline, isVoid } = editor\r\n\r\n  editor.isInline = element => {\r\n    return element.type === 'mention' ? true : isInline(element)\r\n  }\r\n\r\n  editor.isVoid = element => {\r\n    return element.type === 'mention' ? true : isVoid(element)\r\n  }\r\n  return editor\r\n}\r\nconst toggleBlock = (editor, format) => {\r\n  const isActive = isBlockActive(editor, format)\r\n  const isList = LIST_TYPES.includes(format)\r\n\r\n  Transforms.unwrapNodes(editor, {\r\n    match: n =>\r\n      LIST_TYPES.includes(\r\n        !Editor.isEditor(n) && SlateElement.isElement(n) && n.type\r\n      ),\r\n    split: true,\r\n  })\r\n  const newProperties = {\r\n    type: isActive ? 'paragraph' : isList ? 'list-item' : format,\r\n  }\r\n  Transforms.setNodes(editor, newProperties)\r\n\r\n  if (!isActive && isList) {\r\n    const block = { type: format, children: [] }\r\n    Transforms.wrapNodes(editor, block)\r\n  }\r\n}\r\nconst toggleMark = (editor, format) => {\r\n  const isActive = isMarkActive(editor, format)\r\n\r\n  if (isActive) {\r\n    Editor.removeMark(editor, format)\r\n  } else {\r\n    Editor.addMark(editor, format, true)\r\n  }\r\n}\r\nconst isBlockActive = (editor, format) => {\r\n  const [match] = Editor.nodes(editor, {\r\n    match: n => n.type === format,\r\n  })\r\n\r\n  return !!match\r\n}\r\nconst isMarkActive = (editor, format) => {\r\n  const marks = Editor.marks(editor)\r\n  return marks ? marks[format] === true : false\r\n}\r\n\r\nconst Leaf = ({ attributes, children, leaf }) => {\r\n  if (leaf.span) {\r\n    children = <span className={leaf.className} style={convertStylesStringToObject(leaf.style)} {...attributes}>{children}</span>\r\n  }\r\n  if (leaf.strong || leaf.bold) {\r\n    children = <strong {...attributes}>{children}</strong>\r\n  }\r\n  if (leaf.code) {\r\n    children = <code {...attributes}>{children}</code>\r\n  }\r\n  if (leaf.italic) {\r\n    children = <em {...attributes}>{children}</em>\r\n  }\r\n\r\n  if (leaf.underline) {\r\n    children = <u {...attributes}>{children}</u>\r\n  }\r\n\r\n  return <span {...attributes}>{children}</span>\r\n}\r\n\r\nconst BlockButton = ({ format, icon }) => {\r\n  const editor = useSlate()\r\n  return (\r\n    <Button\r\n      active={isBlockActive(editor, format)}\r\n      onMouseDown={event => {\r\n        event.preventDefault()\r\n        toggleBlock(editor, format)\r\n      }}\r\n    >\r\n      {icon}\r\n    </Button>\r\n  )\r\n}\r\n\r\nconst MarkButton = ({ format, icon }) => {\r\n  const editor = useSlate()\r\n  return (\r\n    <Button\r\n      active={isMarkActive(editor, format)}\r\n      onMouseDown={event => {\r\n        event.preventDefault()\r\n        toggleMark(editor, format)\r\n      }}\r\n    >\r\n      {icon}\r\n    </Button>\r\n  )\r\n}\r\n\r\nconst insertMention = (editor, vendor) => {\r\n  const mention = { type: 'mention', ...vendor, children: [{ text: '' }] }\r\n  Transforms.insertNodes(editor, mention)\r\n  Transforms.move(editor)\r\n}\r\n\r\nconst Element = props => {\r\n  const { attributes, children, element } = props\r\n  switch (element.type) {\r\n    case 'image':\r\n      return <img src={element.src} {...attributes}>{children}</img>\r\n    case 'link':\r\n      return <a href={element.url} {...attributes}>{children}</a>\r\n    case 'mention':\r\n      return <MentionElement {...props} />\r\n    case 'quote':\r\n      return <blockquote {...attributes}>{children}</blockquote>\r\n    case 'bulleted-list':\r\n      return <ul {...attributes}>{children}</ul>\r\n    case 'paragraph':\r\n      return <p {...attributes}>{children}</p>\r\n    case 'heading-one':\r\n      return <h1 {...attributes}>{children}</h1>\r\n    case 'heading-two':\r\n      return <h2 {...attributes}>{children}</h2>\r\n    case 'heading-three':\r\n      return <h3 {...attributes}>{children}</h3>\r\n    case 'heading-four':\r\n      return <h4 {...attributes}>{children}</h4>\r\n    case 'heading-five':\r\n      return <h5 {...attributes}>{children}</h5>\r\n    case 'heading-six':\r\n      return <h6 {...attributes}>{children}</h6>\r\n    case 'list-item':\r\n      return <li {...attributes}>{children}</li>\r\n    case 'numbered-list':\r\n      return <ol {...attributes}>{children}</ol>\r\n    case 'pre':\r\n      return <pre {...attributes}>{children}</pre>\r\n    case 'SPAN':\r\n      return <span {...attributes}>{children}</span>\r\n    default:\r\n      return <p {...attributes}>{children}</p>\r\n  }\r\n}\r\n\r\nconst MentionElement = ({ attributes, children, element }) => {\r\n  const selected = useSelected()\r\n  const focused = useFocused()\r\n  return (\r\n    <a\r\n      href={element.url}\r\n      {...attributes}\r\n      contentEditable={false}\r\n      style={{\r\n        padding: '3px 3px 2px',\r\n        margin: '0 1px',\r\n        verticalAlign: 'baseline',\r\n        display: 'inline-block',\r\n        borderRadius: '4px',\r\n        backgroundColor: '#eee',\r\n        fontSize: '0.9em',\r\n        boxShadow: selected && focused ? '0 0 0 2px #B4D5FF' : 'none',\r\n      }}\r\n    >\r\n      {element.name}\r\n      {children}\r\n    </a>\r\n  )\r\n}\r\n\r\n\r\n\r\nconst ELEMENT_TAGS = {\r\n  A: el => ({ type: 'link', url: el.getAttribute('href') }),\r\n  BLOCKQUOTE: () => ({ type: 'quote' }),\r\n  H1: () => ({ type: 'heading-one' }),\r\n  H2: () => ({ type: 'heading-two' }),\r\n  H3: () => ({ type: 'heading-three' }),\r\n  H4: () => ({ type: 'heading-four' }),\r\n  H5: () => ({ type: 'heading-five' }),\r\n  H6: () => ({ type: 'heading-six' }),\r\n  IMG: el => ({ type: 'image', url: el.getAttribute('src') }),\r\n  LI: () => ({ type: 'list-item' }),\r\n  OL: () => ({ type: 'numbered-list' }),\r\n  DIV: () => ({ type: 'div' }),\r\n  P: () => ({ type: 'paragraph' }),\r\n  PRE: () => ({ type: 'pre' }),\r\n  UL: () => ({ type: 'bulleted-list' }),\r\n\r\n}\r\n\r\n\r\n// COMPAT: `B` is omitted here because Google Docs uses `<b>` in weird ways.\r\nconst TEXT_TAGS = {\r\n  STRONG: () => ({ bold: true }),\r\n  CODE: () => ({ code: true }),\r\n  DEL: () => ({ strikethrough: true }),\r\n  EM: () => ({ italic: true }),\r\n  I: () => ({ italic: true }),\r\n  S: () => ({ strikethrough: true }),\r\n  U: () => ({ underline: true }),\r\n  SPAN: (el) => ({ span: true, style: el.attributes && el.attributes[\"style\"] && el.attributes[\"style\"].value }),\r\n\r\n}\r\n\r\nexport const deserialize = el => {\r\n  if (el.nodeType === 3) {\r\n    return el.textContent\r\n  } else if (el.nodeType !== 1) {\r\n    return null\r\n  } else if (el.nodeName === 'BR') {\r\n    return '\\n'\r\n  }\r\n\r\n  const { nodeName } = el\r\n  let parent = el\r\n\r\n  if (\r\n    nodeName === 'PRE' &&\r\n    el.childNodes[0] &&\r\n    el.childNodes[0].nodeName === 'CODE'\r\n  ) {\r\n    parent = el.childNodes[0]\r\n  }\r\n  if (parent.childNodes.length == 0) {\r\n    parent.append(document.createTextNode(\"\"))\r\n  }\r\n  const children = Array.from(parent.childNodes)\r\n    .map(deserialize)\r\n    .flat()\r\n\r\n  if (el.nodeName === 'BODY') {\r\n    return jsx('fragment', {}, children)\r\n  }\r\n\r\n  if (el.children == 0) {\r\n    if (el.children == 0 && TEXT_TAGS[nodeName]) {\r\n      const attrs = TEXT_TAGS[nodeName](el)\r\n      const res = children.map(child => jsx('text', attrs, child))\r\n      return res\r\n    }\r\n  }\r\n\r\n  if (ELEMENT_TAGS[nodeName]) {\r\n    const attrs = ELEMENT_TAGS[nodeName](el)\r\n    const res = jsx('element', attrs, children)\r\n    return res\r\n  }\r\n\r\n\r\n  return children\r\n}\r\n\r\nconst convertStylesStringToObject = stringStyles => typeof stringStyles === 'string' ? stringStyles\r\n  .split(';')\r\n  .reduce((acc, style) => {\r\n    const colonPosition = style.indexOf(':')\r\n\r\n    if (colonPosition === -1) {\r\n      return acc\r\n    }\r\n\r\n    const\r\n      camelCaseProperty = style\r\n        .substr(0, colonPosition)\r\n        .trim()\r\n        .replace(/^-ms-/, 'ms-')\r\n        .replace(/-./g, c => c.substr(1).toUpperCase()),\r\n      value = style.substr(colonPosition + 1).trim()\r\n\r\n    return value ? { ...acc, [camelCaseProperty]: value } : acc\r\n  }, {}) : {}\r\n\r\nexport default Mentions","import React, { useCallback, useState, useEffect, useRef } from \"react\";\r\nimport { Layout, TextField, Banner, Link, Button, ContextualSaveBar, FormLayout, Checkbox } from \"@shopify/polaris\";\r\nimport Dropdown from '../../Helpers/Dropdown'\r\nimport { getAll as getAllProductTypes } from \"../../../services/productTypes\"\r\nimport { getAll as getAllVendors } from \"../../../services/productVendors\"\r\nimport Mentions from \"../../Helpers/Mentions\"\r\nimport * as productService from \"../../../services/products\"\r\n\r\nexport default function TextFieldExample({ productData, setProductData }) {\r\n\r\n    useEffect(() => {\r\n        const status = productData['status'] ?? 'active'\r\n        setProductData({ ...productData, status })\r\n    }, []);\r\n\r\n    const handleProductTypeSelect = useCallback(\r\n        (value) => {\r\n            const newData = { ...productData, \"product_type\": value.name }\r\n            if (productData[\"vendor\"] && !newData[\"title\"])\r\n                newData[\"title\"] = `${productData[\"vendor\"]} ${value.name}`\r\n            setProductData(newData)\r\n        },\r\n        [productData],\r\n    );\r\n\r\n    const handleVendorSelect = useCallback(\r\n        (value) => {\r\n            const newData = { ...productData, \"vendor\": value.name }\r\n            if (productData[\"product_type\"] && !newData[\"title\"])\r\n                newData[\"title\"] = `${value.name} ${productData[\"product_type\"]}`\r\n            setProductData(newData)\r\n        },\r\n        [productData],\r\n    );\r\n    const handleDescriptionChange = useCallback(\r\n        (value) => {\r\n            setProductData({ ...productData, \"body_html\": value })\r\n        },\r\n        [productData],\r\n    );\r\n    const [checked, setChecked] = useState(false);\r\n    const handleChange = useCallback((newChecked) => setChecked(newChecked), []);\r\n\r\n    const handleStatusChange = useCallback(\r\n        (active) => {\r\n            debugger\r\n            const status = active ? 'active' : 'draft'\r\n            setProductData({ ...productData, status })\r\n        },\r\n        [productData],\r\n    );\r\n    return <div className=\"qwerty-tabscontent-section\">\r\n        <FormLayout>\r\n            <div className=\"form-items-right\">\r\n                <Checkbox\r\n                    label=\"Active\"\r\n                    checked={productData['status'] === 'active'}\r\n                    onChange={handleStatusChange}\r\n                />\r\n            </div>\r\n            <FormLayout.Group condensed>\r\n                <Dropdown label=\"Vendor\" value={productData[\"vendor\"]} placeholder=\"e.g. Nike\" getData={getAllVendors} labelFieldName=\"name\" onSelect={handleVendorSelect} />\r\n                <Dropdown label=\"Product type\" value={productData[\"product_type\"]} placeholder=\"e.g. Shirts\" getData={getAllProductTypes} labelFieldName=\"name\" onSelect={handleProductTypeSelect} />\r\n            </FormLayout.Group>\r\n            <FormLayout.Group>\r\n                <TextField\r\n                    label=\"Title\"\r\n                    type=\"text\"\r\n                    value={productData[\"title\"]}\r\n                    helpText=\"The title should be around 10-70 characters\"\r\n                    onChange={(value) => { setProductData({ ...productData, \"title\": value }) }}\r\n                />\r\n            </FormLayout.Group>\r\n            <FormLayout.Group>\r\n                <Mentions onChange={handleDescriptionChange} label=\"Description\" htmlString={productData[\"body_html\"]} />\r\n            </FormLayout.Group>\r\n        </FormLayout>\r\n    </div>\r\n}\r\n","import React, { useRef } from 'react';\r\nimport { Stack, Banner, Caption, DropZone, List, Thumbnail } from '@shopify/polaris';\r\n\r\n\r\nexport default function MediaItem({ id, file, index, moveCard, product }) {\r\n\r\n    return (<div className=\"vjd-thumbnail\">\r\n            <Thumbnail\r\n                size=\"large\"\r\n                alt={file.name}\r\n                source={window.URL.createObjectURL(file)}\r\n            />\r\n            <div>\r\n                Alt: {product.title}\r\n            </div>\r\n    </div>);\r\n};\r\n","import React, { useCallback, useState } from 'react';\r\nimport { Stack, Banner, Caption, DropZone, List, Thumbnail } from '@shopify/polaris';\r\nimport MediaItem from \"./MediaItem\"\r\n\r\nexport default function DropZoneWithImageFileUpload({productData}) {\r\n  const [files, setFiles] = useState([]);\r\n  const [rejectedFiles, setRejectedFiles] = useState([]);\r\n  const hasError = rejectedFiles.length > 0;\r\n\r\n  const handleDrop = useCallback(\r\n    (_droppedFiles, acceptedFiles, rejectedFiles) => {\r\n      setFiles((files) => [...files, ...acceptedFiles]);\r\n      setRejectedFiles(rejectedFiles);\r\n    },\r\n    [],\r\n  );\r\n\r\n  const fileUpload = !files.length && <DropZone.FileUpload />;\r\n\r\n\r\n  const errorMessage = hasError && (\r\n    <Banner\r\n      title=\"The following images couldn’t be uploaded:\"\r\n      status=\"critical\"\r\n    >\r\n      <List type=\"bullet\">\r\n        {rejectedFiles.map((file, index) => (\r\n          <List.Item key={index}>\r\n            {`\"${file.name}\" is not supported. File type must be .gif, .jpg, .png or .svg.`}\r\n          </List.Item>\r\n        ))}\r\n      </List>\r\n    </Banner>\r\n  );\r\n\r\n  const uploadedFiles = files.length > 0 && (\r\n    <Stack vertical={false}>\r\n      {files.map((card, i) => renderCard(card, i, productData))}\r\n    </Stack>\r\n  );\r\n\r\n  return (\r\n      <Stack vertical>\r\n        {errorMessage}\r\n        {uploadedFiles}\r\n        <div style={{ width: 114, height: 114 }}>\r\n          <DropZone accept=\"image/*\" type=\"image\" onDrop={handleDrop}>\r\n            <DropZone.FileUpload />\r\n          </DropZone>\r\n        </div>\r\n      </Stack>\r\n  );\r\n}\r\n\r\nconst renderCard = (file, index, productData) => {\r\n  return (<MediaItem  file={file} product={productData} />);\r\n};","import { handleErrors } from \"../utils/errorHandling_ts\"\r\n\r\nexport const getAll = () => fetch(\"/api/options\").then(handleErrors).then(response => response.json())\r\nexport const getItem = (id:string) => fetch(`/api/options/${id}`).then(handleErrors).then(response => response.json())\r\n\r\nexport const create = (data:any) => {\r\n    return fetch(\"/api/options\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n    }).then(handleErrors).then(res => res.json())\r\n}\r\n\r\nexport const update = (data:any, id:string) => {\r\n    return fetch(`/api/options/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n    }).then(handleErrors).then(res => res.json())\r\n}\r\n","import React, { useCallback, useState } from 'react';\r\nimport { FormLayout, TextField, Tag, Button } from '@shopify/polaris';\r\nimport { getAll as getAllOptions } from \"../../../services/options\"\r\nimport Dropdown from '../../Helpers/Dropdown'\r\nimport {\r\n    MobilePlusMajor\r\n} from '@shopify/polaris-icons';\r\n\r\nexport default function Variants({ productData, setProductData, index = 0 }) {\r\n    const [optionValueText, setOptionValueText] = useState(\"\");\r\n    const initialOptionValues = (productData.options && productData.options[index] && productData.options[index][\"values\"]) || []\r\n\r\n    const handleOptionSelect = useCallback(\r\n        (option) => {\r\n            const newData = { ...productData }\r\n            newData[\"options\"] = productData[\"options\"] || []\r\n            newData[\"options\"][index] = newData[\"options\"][index] || {}\r\n            newData[\"options\"][index][\"name\"] = option.name\r\n            newData[\"options\"][index][\"values\"] = option.values\r\n            setProductData(newData)\r\n        },\r\n        [productData],\r\n    );\r\n\r\n    const handleOptionValueChanged = useCallback(\r\n        (value) => {\r\n            const optionValues = productData.options[index][\"values\"] || []\r\n            if (value && !optionValues.some(v => v == value)) {\r\n                const newData = { ...productData }\r\n                newData.options[index][\"values\"] = [...optionValues, value]\r\n                setProductData(newData)\r\n            }\r\n            setOptionValueText(\"\")\r\n        },\r\n        [productData, optionValueText],\r\n    );\r\n\r\n    const handleOptionValueRemoved = useCallback(\r\n        (value) => {\r\n            const optionValues = productData.options[index][\"values\"] || []\r\n            const newData = { ...productData }\r\n            newData.options[index][\"values\"] = optionValues.filter(v => v !== value)\r\n            setProductData(newData)\r\n        },\r\n        [productData, optionValueText],\r\n    );\r\n    const selectedOption = productData.options && productData.options[index] && productData.options[index].name\r\n    return (<div className=\"options-grid\">\r\n        <FormLayout.Group condensed>\r\n            <Dropdown showConnectedRight={false} label={`Option ${index + 1}`} value={selectedOption} getData={getAllOptions} labelFieldName=\"name\" onSelect={handleOptionSelect} />\r\n            <TextField\r\n                label=\"Add value\"\r\n                type=\"text\"\r\n\r\n                value={optionValueText}\r\n                autoComplete={false}\r\n                onChange={setOptionValueText}\r\n                connectedRight={\r\n                    <Button\r\n                        primary\r\n                        disabled={!selectedOption} \r\n                        onClick={() => { handleOptionValueChanged(optionValueText) }} icon={MobilePlusMajor}></Button>\r\n                }\r\n            />\r\n            {/* <Dropdown showConnectedRight={false} label=\"Add value\" value={optionValueText} placeholder=\"Add option value\" labelFieldName=\"name\" onSelect={handleOptionValueChanged} /> */}\r\n            <div>\r\n                {\r\n                    productData.options && productData.options[index] && productData.options[index][\"values\"] && productData.options[index][\"values\"].length > 0 && <div className=\"Polaris-Labelled__LabelWrapper\"><div className=\"Polaris-Label\"><label className=\"Polaris-Label__Text\">Values</label></div></div>\r\n                }\r\n                {\r\n                    productData.options && productData.options[index] && productData.options[index][\"values\"] && productData.options[index][\"values\"].map(value => <Tag key={value} onRemove={() => { handleOptionValueRemoved(value) }}>{value}</Tag>)\r\n                }\r\n            </div>\r\n        </FormLayout.Group>\r\n    </div>);\r\n};","import React, { useCallback, useState } from 'react';\r\nimport { Button, FormLayout, TextField, ResourceItem, Card, Checkbox, Thumbnail } from '@shopify/polaris';\r\n\r\n\r\n\r\nexport default function VariantItem({ variantData, options, setData }) {\r\n\r\n    const title = (variantData[\"option1\"] || '') + (variantData[\"option2\"] ? `\\\\${variantData[\"option2\"]}` : '') + (variantData[\"option3\"] ? `\\\\${variantData[\"option3\"]}` : '')\r\n\r\n    const handleChange = useCallback((value, field) => {\r\n        // setData({ ...variantData, [field]: value })\r\n    }, [variantData])\r\n\r\n\r\n\r\n    return (<div className=\"variant-item\">\r\n        <FormLayout.Group condensed>\r\n            <Thumbnail\r\n                source=\"https://burst.shopifycdn.com/photos/black-leather-choker-necklace_373x@2x.jpg\"\r\n                size=\"medium\"\r\n            />\r\n            <div>{title}</div>\r\n            <TextField\r\n                // label=\"Price\"\r\n                type=\"string\"\r\n                value={variantData[\"price\"]}\r\n                prefix=\"$\"\r\n                onChange={(value) => { handleChange(value,\"price\") }}\r\n            />\r\n            <TextField\r\n                // label=\"Price\"\r\n                type=\"number\"\r\n                value={variantData[\"quantity\"]}\r\n                onChange={(value) => { handleChange(value,\"quantity\") }}\r\n            />\r\n            <TextField\r\n                // label=\"SKU\"\r\n                type=\"text\"\r\n                value={variantData[\"compare_at_price\"]}\r\n                onChange={(value) => { handleChange(value,\"compare_at_price\") }}\r\n            />\r\n        </FormLayout.Group>\r\n    </div>);\r\n};\r\n","import React, { useCallback, useState } from 'react';\r\nimport { Button, FormLayout, ResourceList, Modal } from '@shopify/polaris';\r\nimport Option from \"./Option\"\r\nimport VariantItem from \"./VariantItem\"\r\n\r\nexport default function Variants({ productData, setProductData }) {\r\n    const optionValues2D = (productData[\"options\"] && productData[\"options\"].map(option => option.values || [])) || []\r\n    const productVariants = optionValues2D.length > 0 ? combos(optionValues2D).map(c => {\r\n        return {\r\n            ...(c[0] && { \"option1\": c[0] }),\r\n            ...(c[1] && { \"option2\": c[1] }),\r\n            ...(c[2] && { \"option3\": c[2] })\r\n        }\r\n    }) : [];\r\n\r\n    return (<div>\r\n        <div className=\"qwerty-tabscontent-section\">\r\n            <div><h2 className=\"Polaris-Heading\">Options</h2></div>\r\n            <Option productData={productData} setProductData={setProductData} index={0} />\r\n            <Option productData={productData} setProductData={setProductData} index={1} />\r\n            <Option productData={productData} setProductData={setProductData} index={2} />\r\n        </div>\r\n        {\r\n            productVariants && productVariants.length > 0 &&\r\n            <div className=\"qwerty-tabscontent-section top-lined qwerty-separated-F_Items\">\r\n                <div><h2 className=\"Polaris-Heading\">Showing {productVariants.length} variants</h2></div>\r\n                <div className=\"er-heading\">\r\n                    <span></span>\r\n                    <span>Name</span>\r\n                    <span>Price</span>\r\n                    <span>Quantity</span>\r\n                    {/* <span>Cost per item</span> */}\r\n                    <span>SKU</span>\r\n                    {/* <span>Barcode</span> */}\r\n                </div>\r\n                <div className=\"variants-wrapper\">\r\n                    {\r\n                        //TODO make this look better\r\n                        productVariants && productVariants.map((v, index) => <VariantItem key={index} variantData={v} options={productData[\"options\"]}></VariantItem>)\r\n                    }\r\n                </div>\r\n            </div>\r\n        }\r\n    </div>);\r\n};\r\n\r\nfunction combos(list, n = 0, result = [], current = []) {\r\n    if (n === list.length) result.push(current)\r\n    else list[n].forEach(item => combos(list, n + 1, result, [...current, item]))\r\n\r\n    return result\r\n}","import { handleErrors } from \"../utils/errorHandling_ts\"\r\n\r\nexport const getAll = () => fetch(\"/api/collections\").then(handleErrors).then(response => response.json())\r\nexport const getCustomCollections = () => fetch(\"/api/collections/custom\").then(handleErrors).then(response => response.json())\r\n","import { handleErrors } from \"../utils/errorHandling_ts\"\r\n\r\nexport const getAll = () => fetch(\"/api/tags\").then(handleErrors).then(response => response.json())","import React, { useCallback, useState, useEffect, useRef } from \"react\";\r\nimport { Layout, TextField, Banner, Link, Button, ContextualSaveBar, FormLayout, Checkbox } from \"@shopify/polaris\";\r\nimport Dropdown from '../../Helpers/Dropdown'\r\nimport { getCustomCollections } from \"../../../services/collections\"\r\nimport { getAll as getAllTas } from \"../../../services/tags\"\r\n\r\nexport default function TextFieldExample({ productData, setProductData }) {\r\n\r\n    const handleProductTypeSelect = useCallback(\r\n        (value) => {\r\n            const newData = { ...productData, \"product_type\": value.name }\r\n            if (productData[\"vendor\"] && !newData[\"title\"])\r\n                newData[\"title\"] = `${productData[\"vendor\"]} ${value.name}`\r\n            setProductData(newData)\r\n        },\r\n        [productData],\r\n    );\r\n\r\n    const handleVendorSelect = useCallback(\r\n        (value) => {\r\n            const newData = { ...productData, \"vendor\": value.name }\r\n            if (productData[\"product_type\"] && !newData[\"title\"])\r\n                newData[\"title\"] = `${value.name} ${productData[\"product_type\"]}`\r\n            setProductData(newData)\r\n        },\r\n        [productData],\r\n    );\r\n\r\n    return <div className=\"qwerty-tabscontent-section\">\r\n        <FormLayout>\r\n            <FormLayout.Group condensed>\r\n                <Dropdown label=\"Collections\" value={productData[\"collections\"]} placeholder=\"Search for collection\" getData={getCustomCollections} labelFieldName=\"title\" onSelect={handleVendorSelect} />\r\n                <Dropdown label=\"Tags\" value={productData[\"tags\"]} placeholder=\"Vintage, cotton, summer\" getData={getCustomCollections} labelFieldName=\"title\" onSelect={handleVendorSelect} />\r\n\r\n            </FormLayout.Group>\r\n        </FormLayout>\r\n    </div>\r\n}\r\n","export function deepEqual(object1, object2) {\r\n    const keys1 = Object.keys(object1);\r\n    const keys2 = Object.keys(object2);\r\n  \r\n    if (keys1.length !== keys2.length) {\r\n      return false;\r\n    }\r\n  \r\n    for (const key of keys1) {\r\n      const val1 = object1[key];\r\n      const val2 = object2[key];\r\n      const areObjects = isObject(val1) && isObject(val2);\r\n      if (\r\n        areObjects && !deepEqual(val1, val2) ||\r\n        !areObjects && val1 !== val2\r\n      ) {\r\n        return false;\r\n      }\r\n    }\r\n  \r\n    return true;\r\n  }\r\n  function isObject(object) {\r\n    return object != null && typeof object === 'object';\r\n  }","import React, { useCallback, useState, useEffect, useRef } from \"react\";\r\nimport { Layout, TextField, Card, Banner, Link, Button, ContextualSaveBar } from \"@shopify/polaris\";\r\nimport { DisplayText, Subheading, TextStyle, Heading, Stack, FormLayout, Page, Badge } from '@shopify/polaris';\r\nimport Dropdown from '../Helpers/Dropdown'\r\nimport { getAll as getAllProductTypes } from \"../../services/productTypes\"\r\nimport { getAll as getAllVendors } from \"../../services/productVendors\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport StepItem from \"../Helpers/StepItem\"\r\nimport Tabs from \"../Helpers/Tabs\"\r\nimport Mentions from \"../../Mentions\"\r\nimport Deatils from \"./Forms/Details\"\r\nimport Media from \"./Forms/Media\"\r\nimport Variants from \"./Forms/Variants\"\r\nimport Organize from \"./Forms/Organize\"\r\nimport * as productService from \"../../services/products\"\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { deepEqual } from \"../../utils/operators\"\r\nimport {\r\n    AddProductMajor,\r\n    ImagesMajor,\r\n    VariantMajor,\r\n    SearchMajor,\r\n    CategoriesMajor\r\n} from '@shopify/polaris-icons';\r\n\r\nconst useStyles = makeStyles({\r\n    productTitle: {\r\n        alignItems: 'center'\r\n    }\r\n});\r\n\r\nexport default function CreateEditProduct() {\r\n\r\n    const [productData, setProductData] = useState({})\r\n    const [product_db_data, setProduct_db_data] = useState({})\r\n\r\n    const animationWrapperRef = useRef(null);\r\n    const animation1 = useRef(null);\r\n    const animation2 = useRef(null);\r\n    const [isDirty, setIsDirty] = useState(true);\r\n    const history = useHistory();\r\n\r\n    const [animationWrapperHeight, setAnimationWrapperHeight] = useState();\r\n    const classes = useStyles();\r\n\r\n    let { itemId } = useParams();\r\n\r\n    useEffect(() => {\r\n        itemId && productService.getItem(itemId).then(data => {\r\n            setProduct_db_data(data)\r\n            setProductData(data)\r\n        }).catch(e => console.log(e))\r\n    }, [itemId]);\r\n\r\n\r\n    useEffect(() => {\r\n        setIsDirty(!deepEqual(productData, product_db_data))\r\n    }, [productData]);\r\n\r\n    const toggleIsDirty = useCallback(\r\n        () => setIsDirty((isDirty) => !isDirty),\r\n        [],\r\n    );\r\n\r\n    const saveChanges = () => {\r\n        //TODO every step should save only its data\r\n        itemId ? productService.update(productData, itemId).then(data => {\r\n            setProduct_db_data(data)\r\n            setProductData(data)\r\n        })\r\n            :\r\n            productService.create(productData).then(data => {\r\n                history.push(`/dashboard/Listings/edit/${data.product._id}`)\r\n            });\r\n    }\r\n    const contextualSaveBarMarkup = isDirty ? (\r\n        <ContextualSaveBar\r\n            message=\"Unsaved product\"\r\n            saveAction={{\r\n                onAction: saveChanges,\r\n            }}\r\n            discardAction={{\r\n                onAction: toggleIsDirty,\r\n            }}\r\n        />\r\n    ) : null;\r\n    const tab_title = <span>\r\n        {productData[\"title\"]} {productData[\"_id\"] && <Badge status={`${productData[\"status\"] == 'active' ? 'success' : 'info'}`}>{productData[\"status\"]} </Badge>}\r\n    </span>\r\n    return <Page\r\n        breadcrumbs={[{ content: 'Dashboard', url: '/Dashboard/' }]}\r\n        title={itemId ? \"Edit Product\" : \"New Product\"}\r\n    >\r\n        <Layout>\r\n            {contextualSaveBarMarkup}\r\n            {/* <Layout.Section>\r\n            <Banner\r\n                status=\"warning\"\r\n                secondary={{ content: 'Learn more' }}\r\n                onDismiss={() => { }}\r\n            >\r\n                <p>\r\n                    Add weights to show accurate rates at checkout and when buying shipping\r\n                    labels in Shopify.\r\n                </p>\r\n            </Banner>\r\n        </Layout.Section> */}\r\n\r\n            <Layout.Section>\r\n                {productData && <Tabs title={tab_title} data={productData} tabs={[\r\n                    { id: \"details\", icon: AddProductMajor, isCompleted: DetailsCompleted, title: \"Details\", content: (data) => <Deatils productData={data} setProductData={setProductData} /> },\r\n                    { id: \"organize\", icon: CategoriesMajor, title: \"Organize\", content: <Organize productData={productData} setProductData={setProductData}/> },\r\n                    { id: \"variants\", icon: VariantMajor, title: \"Variants\", content: (data) => <Variants productData={data} setProductData={setProductData} /> },\r\n                    { id: \"images\", icon: ImagesMajor, title: \"Media\", content: <Media productData={productData} /> },\r\n                    { id: \"seo\", icon: SearchMajor, title: \"SEO\", content: <div>{productData[\"title\"]}</div> }\r\n                ]} />}\r\n            </Layout.Section>\r\n            <Layout.Section>\r\n\r\n                {/* <StepItem activator={<div>Write some awesome description</div>}>\r\n                <Mentions />\r\n            </StepItem>\r\n            <StepItem activator={<div>Organize it</div>}></StepItem>\r\n            <StepItem activator={<div>Add some really cool media for your product</div>}></StepItem>\r\n            <StepItem activator={<div>Does it have variations?</div>}></StepItem>\r\n            <StepItem activator={<div>Write some great text for search engines</div>}></StepItem> */}\r\n\r\n            </Layout.Section>\r\n        </Layout>\r\n\r\n    </Page>\r\n\r\n\r\n}\r\n\r\nfunction DetailsCompleted(productData) {\r\n    return productData[\"title\"] && productData[\"vendor\"] && productData[\"product_type\"] && productData[\"body_html\"]\r\n}\r\n","import BaseModel from \"../Models/BaseModel\";\r\n\r\nimport {\r\n    SelectOption,\r\n    AutocompleteProps\r\n} from '@shopify/polaris';\r\nexport const GenerateSelectOptions = <T extends BaseModel>(data: T[], labelFieldName: keyof T): SelectOption[] => {\r\n    const options: SelectOption[] = data.map(item => {\r\n        let labelValue = \"---\";\r\n        const labelFieldValue = item[labelFieldName]\r\n        if (isString(labelFieldValue)) {\r\n            labelValue = labelFieldValue as string\r\n        }\r\n        return {\r\n            label: labelValue,\r\n            value: labelValue,\r\n        }\r\n    })\r\n\r\n    return options;\r\n}\r\n\r\nexport const GenerateOptionDescriptors = <T extends BaseModel>(data: T[], labelFieldName: keyof T): AutocompleteProps[\"options\"] => {\r\n    const options: AutocompleteProps[\"options\"] = data.map(item => {\r\n        let labelValue = \"---\";\r\n        const labelFieldValue = item[labelFieldName]\r\n        if (isString(labelFieldValue)) {\r\n            labelValue = labelFieldValue as string\r\n        }\r\n        return {\r\n            label: labelValue,\r\n            value: labelValue\r\n        }\r\n    })\r\n\r\n    return options;\r\n}\r\n\r\nfunction isString(value: unknown): value is string {\r\n    return typeof value == 'string'\r\n}","import { useState, useEffect } from 'react';\r\nimport {\r\n    SelectOption\r\n} from '@shopify/polaris';\r\nimport { GenerateSelectOptions } from \"../utils/optionsHelper\"\r\nimport BaseModel from '../Models/BaseModel';\r\n\r\nexport function useSelectData<T extends BaseModel>(getData: () => Promise<T[]>, labelFieldName: keyof T): [SelectOption[],string,(id: string) => void] {\r\n    const [selectOptions, setSelectOptions] = useState([] as SelectOption[]);\r\n    const [selectedValue, setSelectedValue] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        getOptionsData()\r\n    }, [0]);\r\n\r\n\r\n    const handleSelectChange = (id: string) => {\r\n        setSelectedValue(id);\r\n    }\r\n    const getOptionsData = () => {\r\n        getData().then((data: T[]) => {\r\n            const options: SelectOption[] = GenerateSelectOptions<T>(data, labelFieldName)\r\n            setSelectOptions(options)\r\n        });\r\n    }\r\n\r\n    return [selectOptions, selectedValue, handleSelectChange];\r\n}\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport {\r\n    Autocomplete,\r\n    AutocompleteProps,\r\n    Tag\r\n} from '@shopify/polaris';\r\nimport { GenerateOptionDescriptors } from \"../utils/optionsHelper\"\r\nimport BaseModel from '../Models/BaseModel';\r\n\r\ntype ComboBoxProps = AutocompleteProps[\"options\"]\r\nexport function useTags<T extends BaseModel>(getData: () => Promise<T[]>, labelFieldName: keyof T, inputLabel:string): [\r\n    ComboBoxProps,\r\n    JSX.Element[],\r\n    string[],\r\n    (selected: string[]) => void,\r\n    JSX.Element\r\n] {\r\n    const [options, setOptions] = useState([] as ComboBoxProps);\r\n    const [selectedOptions, setSelectedOptions] = useState([] as string[]);\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    useEffect(() => {\r\n        getOptionsData()\r\n    }, [0]);\r\n    const handleSelectChange = (selected: string[]) => {\r\n        setSelectedOptions(selected);\r\n    }\r\n    const getOptionsData = () => {\r\n        getData().then((data: T[]) => {\r\n            const options: ComboBoxProps = GenerateOptionDescriptors<T>(data, labelFieldName)\r\n            setOptions(options)\r\n        });\r\n    }\r\n    const updateText = useCallback(\r\n        (value) => {\r\n            setInputValue(value);\r\n\r\n            if (value === '') {\r\n                setOptions(options);\r\n                return;\r\n            }\r\n\r\n            const filterRegex = new RegExp(value, 'i');\r\n            const resultOptions = options.filter((option) =>\r\n                option.value.match(filterRegex),\r\n            );\r\n            let endIndex = resultOptions.length - 1;\r\n            if (resultOptions.length === 0) {\r\n                endIndex = 0;\r\n            }\r\n            setOptions(resultOptions);\r\n        },\r\n        [options],\r\n    );\r\n    const removeTag = useCallback(\r\n        (tag) => () => {\r\n            const options = [...selectedOptions];\r\n            options.splice(options.indexOf(tag), 1);\r\n            setSelectedOptions(options);\r\n        },\r\n        [selectedOptions],\r\n    );\r\n    const textField = (\r\n        <Autocomplete.TextField\r\n            onChange={updateText}\r\n            label={inputLabel}\r\n            value={inputValue}\r\n            placeholder=\"e-juice, e-liquids, On-Sale\"\r\n        />\r\n    );\r\n    const tagsMarkup = selectedOptions.map((option) => {\r\n        return (\r\n            <div key={`${option}`} className=\"tag-wrapper\">\r\n                <Tag onRemove={removeTag(option)}>\r\n                    {option}\r\n                </Tag>\r\n            </div>\r\n        );\r\n    })\r\n    return [ options, tagsMarkup, selectedOptions, handleSelectChange, textField ];\r\n    /**TODO review this to change to return object instead */\r\n    // return { options, tagsMarkup, selectedOptions, handleSelectChange, textField };\r\n}\r\n\r\nclass AutocompleteData {\r\n    options: ComboBoxProps;\r\n    tagsMarkup: JSX.Element[];\r\n    selectedOptions: string[];\r\n    handleSelectChange: (selected: string[]) => void;\r\n    textField: JSX.Element;\r\n}\r\n\r\nfunction titleCase(title: string) {\r\n    return title\r\n        .toLowerCase()\r\n        .split(' ')\r\n        .map((word) => word.replace(word[0], word[0].toUpperCase()))\r\n        .join('');\r\n}","import React, { useCallback, useState, useEffect } from 'react';\r\nimport {\r\n    Select,\r\n    Layout,\r\n    FormLayout,\r\n    TextField,\r\n    Banner,\r\n    Card,\r\n    Stack,\r\n    Button,\r\n    Collapsible,\r\n    TextContainer,\r\n    Checkbox,\r\n    Icon,\r\n    Autocomplete,\r\n    Scrollable,\r\n    Tag,\r\n    SelectOption,\r\n    ContextualSaveBar\r\n} from '@shopify/polaris';\r\nimport { Vendor } from '../../Models/Vendor';\r\nimport { ProductType } from '../../Models/ProductType';\r\nimport { TagModel } from '../../Models/Tag';\r\nimport * as vendorService from \"../../services/productVendors\"\r\nimport * as productTypeService from \"../../services/productTypes\"\r\nimport * as productService from \"../../services/products\"\r\nimport * as tagsService from \"../../services/tags\"\r\n\r\nimport { toArrayOfProps, Column } from \"../../utils/dataTableHelper\"\r\nimport { useSelectData } from \"../../Hooks/useSelectData\"\r\nimport { useTags as useAutocomplete } from \"../../Hooks/useAutocomplete\"\r\nimport Product from '../../Models/ProductDetails';\r\n\r\nconst Form: React.FC = () => {\r\n\r\n    const [vendorOptions, vendor, handleVendorSelectChange] = useSelectData<Vendor>(vendorService.getAll, \"name\")\r\n    const [productTypeOptions, product_type, handleProductTypeChange] = useSelectData<ProductType>(productTypeService.getAll, \"name\")\r\n    const [title, setTitle] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [tagOptions, tagsMarkup, selectedTagOptions, handleTagSelectChange, tagTextField] = useAutocomplete<TagModel>(tagsService.getAll, \"name\", \"Tags\")\r\n    const [collectionOptions, collectionsMarkup, selectedcollectionOptions, handleCollectionSelectChange, collectionTextField] = useAutocomplete<TagModel>(tagsService.getAll, \"name\", \"Collections\")\r\n\r\n    const [templateselected, settemplateSelected] = useState('product.pre-order');\r\n\r\n    const handleTemplateSelectChange = useCallback((value) => settemplateSelected(value), []);\r\n\r\n    const [isDirty, setIsDirty] = useState(true);\r\n\r\n    const templateoptions = [\r\n        { label: 'product.pre-order', value: 'product.pre-order' },\r\n        { label: 'product', value: 'product' },\r\n        { label: 'product.coming-soon', value: 'product.coming-soon' },\r\n    ];\r\n    const toggleIsDirty = useCallback(\r\n        () => setIsDirty((isDirty) => !isDirty),\r\n        [],\r\n    );\r\n\r\n    const saveChanges = () => {\r\n        const product: Product = {\r\n            title,\r\n            description,\r\n            product_type,\r\n            vendor,\r\n        }\r\n        productService.create(product).then(data => {\r\n            toggleIsDirty()\r\n        })\r\n    }\r\n\r\n    const contextualSaveBarMarkup = isDirty ? (\r\n        <ContextualSaveBar\r\n            message=\"Unsaved product\"\r\n            saveAction={{\r\n                onAction: saveChanges,\r\n            }}\r\n            discardAction={{\r\n                onAction: toggleIsDirty,\r\n            }}\r\n        />\r\n    ) : null;\r\n    return <Layout>\r\n        {contextualSaveBarMarkup}\r\n        <Layout.Section>\r\n            <Card sectioned>\r\n                <FormLayout>\r\n                    <FormLayout.Group>\r\n                        <Select\r\n                            label=\"Vendor\"\r\n                            options={vendorOptions}\r\n                            onChange={(data) => {\r\n                                setTitle(`${data} ${product_type}`)\r\n                                handleVendorSelectChange(data)\r\n                            }}\r\n                            placeholder=\"Please select product vendor\"\r\n                            value={vendor}\r\n                        />\r\n                        <Select\r\n                            label=\"Type\"\r\n                            options={productTypeOptions}\r\n                            placeholder=\"Please select product type\"\r\n                            onChange={(data) => {\r\n                                setTitle(`${vendor} ${data}`)\r\n                                handleProductTypeChange(data)\r\n                            }}\r\n                            value={product_type}\r\n                        />\r\n                    </FormLayout.Group>\r\n                    <FormLayout.Group>\r\n                        <TextField\r\n                            type=\"text\"\r\n                            label=\"Title\"\r\n                            value={title}\r\n                            onChange={(value: string) => setTitle(value)}\r\n                        />\r\n                    </FormLayout.Group>\r\n                    <FormLayout.Group>\r\n                        <TextField\r\n                            label=\"Description\"\r\n                            value={description}\r\n                            onChange={(value: string) => setDescription(value)}\r\n                            multiline={4}\r\n                        />\r\n                    </FormLayout.Group>\r\n                </FormLayout>\r\n            </Card>\r\n        </Layout.Section>\r\n        <Layout.Section secondary>\r\n            <Card title=\"Product availability\" sectioned actions={[{ content: 'Manage', onAction: () => { } }]} >\r\n                <TextContainer>Online store</TextContainer>\r\n                <Stack vertical>\r\n                    <Collapsible\r\n                        open={false}\r\n                        id=\"basic-collapsible\"\r\n                        transition={{ duration: '150ms', timingFunction: 'ease' }}\r\n                    >\r\n                        <FormLayout>\r\n                            <Checkbox\r\n                                label=\"Point of sale\"\r\n                                checked={false}\r\n                            // onChange={handleChange}\r\n                            />\r\n                            <Checkbox\r\n                                label=\"Some other channel\"\r\n                                checked={false}\r\n                            // onChange={handleChange}\r\n                            />\r\n                        </FormLayout>\r\n                    </Collapsible>\r\n                </Stack>\r\n            </Card>\r\n            <Card title=\"Organization\" sectioned>\r\n                <div className=\"prod-grouping\">\r\n                    <Autocomplete\r\n                        allowMultiple\r\n                        options={collectionOptions}\r\n                        selected={selectedcollectionOptions}\r\n                        textField={collectionTextField}\r\n                        onSelect={handleCollectionSelectChange}\r\n                        listTitle=\"Collection\"\r\n                    />\r\n                    <br />\r\n                    <Autocomplete\r\n                        allowMultiple\r\n                        options={tagOptions}\r\n                        selected={selectedTagOptions}\r\n                        emptyState={<div>add?</div>}\r\n                        textField={tagTextField}\r\n                        onSelect={handleTagSelectChange}\r\n                        listTitle=\"Suggested Tags\"\r\n                    />\r\n                    <br />\r\n                    {tagsMarkup}\r\n                </div>\r\n\r\n            </Card>\r\n            <Card title=\"Theme templates\" sectioned>\r\n                <Select\r\n                    label=\"Template suffix\"\r\n                    options={templateoptions}\r\n                    onChange={handleTemplateSelectChange}\r\n                    value={templateselected}\r\n                />\r\n            </Card>\r\n        </Layout.Section>\r\n\r\n    </Layout>\r\n}\r\n\r\nexport default Form","import React, { useState, useCallback } from 'react';\r\nimport { Card, TextContainer, Layout, Collapsible, FormLayout, Checkbox, TextField } from '@shopify/polaris';\r\nconst variantStyle = {\r\n    minWidth: '230px',\r\n    display: 'inline-block',\r\n    margin: '5px'\r\n}\r\nconst imgStyles = {\r\n    maxHeight: '60px',\r\n    display: 'inline-block'\r\n}\r\nexport default function Variants() {\r\n    const [active, setActive] = useState(false);\r\n    const handleToggle = useCallback(() => setActive((active) => !active), []);\r\n\r\n    return (\r\n        <Layout>\r\n            <Layout.Section>\r\n                <Card>\r\n                    <Card.Section actions={[{ content: 'Edit', onAction: handleToggle }]}>\r\n                        <img style={imgStyles} src=\"https://cdn.shopify.com/s/files/1/0287/1354/9955/products/13th-Floor-APPLE-PUCKER-Nicotine-Salt-30ml.jpg?v=1593971256\" />\r\n                        <span style={variantStyle}>\r\n                            <div>\r\n                                <span style={variantStyle}><strong>Strength</strong>: 40 mg Salt Based Nicotine</span>\r\n                                <span style={variantStyle}><strong>Size</strong>: 20</span>\r\n                            </div>\r\n                            <div>\r\n                                <span style={variantStyle}><strong>SKU (Stock Keeping Unit)</strong>: Django40</span>\r\n                                <span style={variantStyle}><strong>Barcode (ISBN, UPC, GTIN, etc.)</strong>: 852870008044</span>\r\n                            </div>\r\n                        </span>\r\n                        <Collapsible\r\n                            open={active}\r\n                            id=\"basic-collapsible\"\r\n                            transition={{ duration: '150ms', timingFunction: 'ease' }}\r\n                        >\r\n                            <FormLayout>\r\n                                <FormLayout.Group>\r\n                                    <TextField type=\"text\" label=\"Strength\" value=\"40 mg Salt Based Nicotine\" />\r\n                                    <TextField type=\"text\" label=\"Size\" value=\"20\" />\r\n                                </FormLayout.Group>\r\n                            </FormLayout>\r\n\r\n                        </Collapsible>\r\n\r\n                    </Card.Section>\r\n                    <Card.Section actions={[{ content: 'Edit' }]}>\r\n                        <img style={imgStyles} src=\"https://cdn.shopify.com/s/files/1/0287/1354/9955/products/13th-Floor-APPLE-PUCKER-Nicotine-Salt-30ml.jpg?v=1593971256\" />\r\n                        <span style={variantStyle}>\r\n                            <div>\r\n                                <span style={variantStyle}><strong>Strength</strong>: 30 mg Salt Based Nicotine</span>\r\n                                <span style={variantStyle}><strong>Size</strong>: 10</span>\r\n                            </div>\r\n                            <div>\r\n                                <span style={variantStyle}><strong>SKU (Stock Keeping Unit)</strong>: Django30</span>\r\n                                <span style={variantStyle}><strong>Barcode (ISBN, UPC, GTIN, etc.)</strong>: 852870008033</span>\r\n                            </div>\r\n                        </span>\r\n\r\n                    </Card.Section>\r\n                </Card>\r\n\r\n            </Layout.Section>\r\n            <Layout.Section secondary>\r\n                <Card sectioned title=\"Variants\" actions={[{ content: 'Add variant' }]}>\r\n                    <Card.Section>\r\n                        <p>View a summary of your online store’s performance.</p>\r\n                    </Card.Section>\r\n\r\n                    <Card.Section>\r\n                        <p>\r\n                            View a summary of your online store’s performance, including sales,\r\n                            visitors, top products, and referrals.\r\n    </p>\r\n                    </Card.Section>\r\n                </Card>\r\n            </Layout.Section>\r\n        </Layout>\r\n\r\n\r\n\r\n    );\r\n}\r\n","import React, { useCallback, useState } from 'react';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepButton from '@material-ui/core/StepButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DetailsForm from './DetailsForm'\r\nimport Badge from '@material-ui/core/Badge';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Images from \"./Images\"\r\nimport Variants from \"./PolarisVariants\"\r\nimport SEO from \"./SEO\"\r\nimport { Card, Tabs, Banner, Page, Icon, Heading } from '@shopify/polaris';\r\n\r\nimport {\r\n    AddProductMajor,\r\n    ImagesMajor,\r\n    VariantMajor,\r\n    SearchMajor\r\n} from '@shopify/polaris-icons';\r\n\r\n\r\nfunction getSteps() {\r\n    return [<Badge color=\"secondary\" variant=\"dot\">Details</Badge>, 'Images', 'Variants', 'SEO'];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n\r\n    switch (step) {\r\n        case 0:\r\n            return\r\n        case 1:\r\n            return\r\n        case 2:\r\n            return;\r\n        case 3:\r\n            return <SEO />\r\n        default:\r\n            return 'Unknown step';\r\n    }\r\n}\r\n\r\nexport default function CreateWithStep() {\r\n\r\n    const [selected, setSelected] = useState(0);\r\n\r\n    const handleTabChange = useCallback(selectedTabIndex => setSelected(selectedTabIndex), []);\r\n    const handleSubmit = () => { }\r\n\r\n    const tabsContentWrapperStyles = {\r\n        display: 'flex'\r\n    };\r\n    const tabsContentTitle = {\r\n        flex: '1 1 auto',\r\n        textAlign: 'left',\r\n        marginLeft: '10px'\r\n    }\r\n\r\n    const TabsContentWrapper = ({ icon, title }) => {\r\n        return <div style={tabsContentWrapperStyles}><Icon source={icon} /><span style={tabsContentTitle}><Heading>{title}</Heading></span></div>\r\n    }\r\n\r\n    const tabs = [{\r\n        id: 'details',\r\n        content: <TabsContentWrapper icon={AddProductMajor} title=\"Details\" />,\r\n        accessibilityLabel: 'Details',\r\n        panelID: 'details',\r\n        component: <DetailsForm />\r\n    }, {\r\n        id: 'images',\r\n        content: <TabsContentWrapper icon={ImagesMajor} title=\"Images\" />,\r\n        panelID: 'images',\r\n        component: <Images images={[\r\n            { title: \"\", alt: \"13th Floor Elevapors Apple Pucker Salt Nic - Vape Juice Depot\", src: \"https://cdn.shopify.com/s/files/1/0287/1354/9955/products/13th-Floor-Apple-Pucker-Nicotine-salt-min.jpg?v=1593971256\" },\r\n            { title: \"\", src: \"https://cdn.shopify.com/s/files/1/0287/1354/9955/products/13th-Floor-APPLE-PUCKER-Nicotine-Salt-30ml.jpg?v=1593971256\" }\r\n        ]} />\r\n    }, {\r\n        id: 'variants',\r\n        content: <TabsContentWrapper icon={VariantMajor} title=\"Variants\" />,\r\n        panelID: 'variants',\r\n        component: <Variants variants={[\r\n            {\r\n                \"product_id\": 5082865467523.0,\r\n                \"title\": \"30 mg Salt Based Nicotine\",\r\n                \"price\": \"14.69\",\r\n                \"sku\": \"Django30\",\r\n                \"position\": 1,\r\n                \"inventory_policy\": \"deny\",\r\n                \"compare_at_price\": \"24.99\",\r\n                \"fulfillment_service\": \"manual\",\r\n                \"inventory_management\": \"shopify\",\r\n                \"updated_at\": \"2020-07-05T13:47:36-04:00\",\r\n                \"taxable\": true,\r\n                \"barcode\": \"852870008033\",\r\n                \"grams\": 51,\r\n                \"image_id\": 16205716914307.0,\r\n                \"weight\": 1.8,\r\n                \"weight_unit\": \"oz\",\r\n                \"inventory_item_id\": 35582957092995.0\r\n            },\r\n            {\r\n                \"product_id\": 5082865467523.0,\r\n                \"title\": \"50 mg Salt Based Nicotine\",\r\n                \"price\": \"14.69\",\r\n                \"sku\": \"Django50\",\r\n                \"position\": 2,\r\n                \"inventory_policy\": \"deny\",\r\n                \"compare_at_price\": \"24.99\",\r\n                \"fulfillment_service\": \"manual\",\r\n                \"inventory_management\": \"shopify\",\r\n                \"updated_at\": \"2020-07-05T13:47:36-04:00\",\r\n                \"taxable\": true,\r\n                \"barcode\": \"\",\r\n                \"grams\": 51,\r\n                \"image_id\": 16205716914307.0,\r\n                \"weight\": 1.8,\r\n                \"weight_unit\": \"oz\",\r\n                \"inventory_item_id\": 35582957125763.0\r\n            }\r\n        ]} />\r\n    }, {\r\n        id: 'seo',\r\n        content: <TabsContentWrapper icon={SearchMajor} title=\"SEO\" />,\r\n        panelID: 'product-seo',\r\n        component: <SEO />\r\n    }];\r\n\r\n    return <Page\r\n        breadcrumbs={[{ content: 'Dashboard', url: '/Dashboard/' }]}\r\n        title=\"Add Product\"\r\n    >\r\n        <Tabs tabs={tabs} selected={selected} onSelect={handleTabChange} fitted={true}>\r\n\r\n            {tabs[selected].component}\r\n\r\n        </Tabs>\r\n    </Page>\r\n}","import React, { useCallback, useState, useEffect } from 'react';\r\nimport {\r\n    Select,\r\n    Layout,\r\n    FormLayout,\r\n    TextField,\r\n    Banner,\r\n    Card,\r\n    Stack,\r\n    Button,\r\n    Collapsible,\r\n    TextContainer,\r\n    Checkbox,\r\n    Icon,\r\n    Autocomplete,\r\n    Scrollable,\r\n    Tag,\r\n    SelectOption,\r\n    ContextualSaveBar,\r\n    Link\r\n} from '@shopify/polaris';\r\nimport Listings from \"../Listings\"\r\n\r\nimport { XYPlot, XAxis, YAxis, HorizontalGridLines, LineSeries, RadialChart } from 'react-vis';\r\n\r\nconst Form: React.FC = () => {\r\n    const myData = [{ angle: 30, label: \"asdasd\", color: \"3\" }, { angle: 5 }]\r\n    return <div>\r\n        <Layout>\r\n            <Layout.Section secondary>\r\n                <span className=\"stats\">\r\n                    <Card title=\"Overall shop score\" sectioned>\r\n                        <Banner onDismiss={() => { }} status=\"warning\">\r\n                            <p>\r\n                                You have SEO issues on home page {' '}\r\n                                <Link url=\"\">Go to fix</Link>\r\n                            </p>\r\n                        </Banner>\r\n                        <h1 style={{\r\n                            fontSize: \"50px\",\r\n                            textAlign: \"center\",\r\n                            margin: \"44px\"\r\n                        }}>7/10</h1>\r\n                    </Card>\r\n                </span>\r\n\r\n            </Layout.Section>\r\n            <Layout.Section secondary>\r\n                <span className=\"stats\">\r\n                    <Card title=\"Products score\" sectioned>\r\n                        <RadialChart\r\n                            data={myData}\r\n                            width={300}\r\n                            height={300} />\r\n                    </Card>\r\n                </span>\r\n\r\n            </Layout.Section>\r\n            <Layout.Section secondary>\r\n                <span className=\" stats\">\r\n                    <Card title=\"Collections score\" sectioned>\r\n                    </Card>\r\n                </span>\r\n            </Layout.Section>\r\n            <Layout.Section secondary>\r\n                <span className=\"stats\">\r\n                    <Card title=\"Some other stats\" sectioned>\r\n                    </Card>\r\n                </span>\r\n            </Layout.Section>\r\n            <span style={{ marginRight: \"20px\", visibility: \"hidden\" }}>\r\n                <Layout.Section secondary>\r\n                    <Card sectioned>\r\n                    </Card>\r\n                </Layout.Section>\r\n            </span>\r\n\r\n        </Layout >\r\n        <Listings></Listings>\r\n    </div>\r\n}\r\n\r\nexport default Form","import React from \"react\"\r\nimport { BrowserRouter as Router, Route, Redirect, useParams, Switch } from \"react-router-dom\"\r\nimport Templates from \"../Templates\"\r\nimport TemplateDetails from \"../TemplateDetails\"\r\nimport Listings from \"../Listings\"\r\nimport Vendors from \"../Vendors\"\r\nimport Users from \"../Users\"\r\nimport ViewUser from \"../ViewUser\"\r\nimport Settings from \"../Settings\"\r\nimport ProductItem from \"../ProductItem\"\r\nimport Edit from \"../Edit\"\r\nimport ProductTypes from \"../ProductTypes\"\r\nimport Options from \"../Options\"\r\nimport productVariants from \"../productVariants\"\r\nimport EditProductTypeItem from \"../ProductTypes/Edit\"\r\nimport CreateProductType from \"../ProductTypes/Create\"\r\nimport CreateProduct from \"../Products/Create\"\r\nimport CreateProductOld from \"../Products/CreateWithStep\"\r\nimport Variants from \"../Products/Forms/Variants\"\r\n\r\nimport Stats from \"./Stats\"\r\nimport { useRouteMatch } from 'react-router-dom'\r\n\r\nexport default function Routes() {\r\n  const match = useRouteMatch();\r\n\r\n  return <Switch>\r\n    <Route exact path={`${match.path}/`} component={Stats} />\r\n    <Route exact path={`${match.path}/Templates`} component={Templates} />\r\n    <Route exact path={`${match.path}/Listings`} component={Variants} />\r\n    <Route exact path={`${match.path}/Listings/create/:section?`} component={CreateProduct} />\r\n    <Route exact path={`${match.path}/Listings/createold`} component={CreateProductOld} />\r\n    <Route path={`${match.path}/Listings/edit/:itemId/:section?`} component={CreateProduct} />\r\n\r\n    <Route path={`${match.path}/Listings/:itemId`} component={ProductItem} />\r\n    <Route exact path={`${match.path}/Users`} component={Users} />\r\n    <Route path={`${match.path}/Users/:usersID`} component={ViewUser} />\r\n    <Route path={`${match.path}/Vendors`} component={ProductTypes} />\r\n    <Route path={`${match.path}/Settings`} component={Settings} />\r\n    <Route path={`${match.path}/Templates/:TemplateId`} component={TemplateDetails} />\r\n    <Route path={`${match.path}/Templates/New`} component={Settings} />\r\n    <Route exact path={`${match.path}/Edit/:EditID`} component={Edit} />\r\n    <Route path={`${match.path}/Options`} component={Options} />\r\n    <Route exact path={`${match.path}/ProductTypes`} component={ProductTypes} />\r\n    <Route exact path={`${match.path}/ProductTypes/create`} component={CreateProductType} />\r\n    <Route path={`${match.path}/ProductTypes/:itemId`} component={EditProductTypeItem} />\r\n  </Switch>\r\n}","import React, { useReducer,useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Copyright from \"./Copyright\"\r\nimport { register } from \"../services/user\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n  const [error, setError] = useState();\r\n  const [userInput, setUserInput] = useReducer(\r\n    (state, newState) => ({ ...state, ...newState }),\r\n    {\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      phoneNumber: '',\r\n      password: ''\r\n    }\r\n  );\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    register(userInput).catch(err => setError(err.toString()));\r\n  }\r\n\r\n\r\n  const handleChange = evt => {\r\n    const name = evt.target.name;\r\n    const newValue = evt.target.value;\r\n    setUserInput({ [name]: newValue });\r\n  }\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form}  onSubmit={handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                value={userInput.firstName}\r\n                onChange={handleChange}\r\n                label=\"First Name\"\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                value={userInput.lastName}\r\n                onChange={handleChange}\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                value={userInput.email}\r\n                onChange={handleChange}\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                value={userInput.password}\r\n                onChange={handleChange}\r\n                autoComplete=\"current-password\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","import React, { Component, useState, useCallback } from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { BrowserRouter as Router, Route, Switch, useRouteMatch,useHistory } from \"react-router-dom\";\r\nimport NewListing from '../../NewListing'\r\nimport LeftMenu from '../../LeftMenu'\r\nimport MainRoutes from \"./MainRoutes\"\r\nimport { AppProvider, TopBar, Frame, Layout, ContextualSaveBar } from '@shopify/polaris';\r\nimport { ArrowLeftMinor, ConversationMinor, ProductsMajor, HomeMajor, OrdersMajor, CollectionsMajor, InventoryMajor } from '@shopify/polaris-icons';\r\n\r\nimport '@shopify/polaris/dist/styles.css';\r\nimport { Navigation } from '@shopify/polaris';\r\n\r\n\r\nexport default function Dashboard() {\r\n  let match = useRouteMatch();\r\n  const [searchFieldValue, setSearchFieldValue] = useState('');\r\n  const history = useHistory();\r\n\r\n  const handleSearchChange = useCallback(\r\n    (searchFieldValue) => setSearchFieldValue(searchFieldValue),\r\n    [],\r\n  );\r\n  const theme = {\r\n    colors: {\r\n      topBar: {\r\n        background: '#fff',\r\n        margin: '10px 10px'\r\n      },\r\n    },\r\n    logo: {\r\n      width: 124,\r\n      topBarSource: '/logo.png',\r\n      url: 'https://vapejuicedepot.com',\r\n      accessibilityLabel: 'Vape Juice Depot',\r\n      contextualSaveBarSource: '/logo.png',\r\n    },\r\n  };\r\n\r\n  const searchFieldMarkup = (\r\n    <TopBar.SearchField\r\n      placeholder=\"Search\"\r\n      value={searchFieldValue}\r\n      onChange={handleSearchChange}\r\n    />\r\n  );\r\n  const topBarMarkup = <TopBar searchField={searchFieldMarkup} />;\r\n\r\n  const navigationMarkup = (\r\n    <Navigation location=\"/\">\r\n      <Navigation.Section\r\n        items={[\r\n          {\r\n            label: 'Back to Shopify',\r\n            icon: ArrowLeftMinor,\r\n          },\r\n        ]}\r\n      />\r\n      <Navigation.Section\r\n        separator\r\n        title=\"Prodify\"\r\n        items={[\r\n          {\r\n            // url: `${match.url}`,\r\n            onClick:()=>{\r\n              history.push(`/dashboard/`)\r\n            },\r\n            label: 'Dashboard',\r\n            icon: HomeMajor,\r\n          },\r\n          {\r\n            // url: `${match.url}/listings`,\r\n            label: 'Products',\r\n            onClick:()=>{\r\n              history.push(`/dashboard/listings`)\r\n            },\r\n            icon: ProductsMajor,\r\n          },\r\n          {\r\n            // url: `${match.url}/Colections`,\r\n            onClick:()=>{\r\n              history.push(`/dashboard/Colections`)\r\n            },\r\n            label: 'Collections',\r\n            icon: CollectionsMajor,\r\n          },\r\n          {\r\n            // url: `${match.url}/Inventory`,\r\n            onClick:()=>{\r\n              history.push(`/dashboard/Inventory`)\r\n            },\r\n            label: 'Inventory',\r\n            icon: InventoryMajor,\r\n          },\r\n          {\r\n            // url: `${match.url}/Settings`,\r\n            onClick:()=>{\r\n              history.push(`/dashboard/Settings`)\r\n            },\r\n            label: 'Settings',\r\n            icon: OrdersMajor,\r\n          },\r\n        ]}\r\n        action={{\r\n          icon: ConversationMinor,\r\n          accessibilityLabel: 'Contact support',\r\n          //   onClick: toggleModalActive,\r\n        }}\r\n      />\r\n    </Navigation>\r\n  );\r\n\r\n  return (<div style={{ height: '250px' }}>\r\n    <AppProvider\r\n      theme={theme}\r\n      i18n={{\r\n        Polaris: {\r\n          Frame: { skipToContent: 'Skip to content' },\r\n          ContextualSaveBar: {\r\n            save: 'Save',\r\n            discard: 'Discard',\r\n          },\r\n          DropZone:  {\r\n            FileUpload: {\r\n              actionTitleImage: \"Add media\",\r\n              actionHintImage: \"or drop files to upload\"\r\n            }\r\n          },\r\n          TopBar: {\r\n            SearchField: {\r\n              clearButtonLabel: 'Clear',\r\n              search: 'Search',\r\n            },\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      <Frame topBar={topBarMarkup} navigation={navigationMarkup}>\r\n        <Layout.Section>\r\n          <MainRoutes />\r\n        </Layout.Section>\r\n      </Frame>\r\n    </AppProvider>\r\n  </div>)\r\n}","import React from 'react';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\n\r\nexport default function PrivateRoute({ isAuthenticated, children, ...rest }) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={({ location }) =>\r\n          isAuthenticated ? (\r\n            children\r\n          ) : (\r\n            <Redirect\r\n              to=\"/login\"\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n  ","import React, { Component, useState, useEffect } from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport logo from './logo.svg';\r\nimport clsx from 'clsx';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport './App.css';\r\nimport NewListing from './NewListing'\r\nimport LeftMenu from './LeftMenu'\r\nimport Routes from './Routes'\r\nimport Login from \"./Content/Login\";\r\nimport SignUp from \"./Content/SignUp\";\r\nimport Dashboard from \"./Content/Dashboard\"\r\nimport { gethi } from \"./services/user\"\r\nimport PrivateRoute from \"./Content/PrivateRoute\"\r\nimport \"@shopify/polaris/dist/styles.css\";\r\n\r\nexport default function App(props) {\r\n    const [loggedIn, setloggedIn] = useState(false);\r\n    const [error, setError] = useState(false);\r\n    const [user, setUser] = useState(null);\r\n\r\n    //TODO notimplemented\r\n    const isAuthenticated = true;\r\n    useEffect(() => {\r\n        gethi().then(data => setloggedIn(data)).catch(err => setError(err.toString()));\r\n    }, []);\r\n\r\n    return (\r\n            <Router>\r\n                <Switch>\r\n\r\n                    <Route path=\"/login\" component={Login} />\r\n                    <Route path=\"/signup\" component={SignUp} />\r\n                    <PrivateRoute isAuthenticated={isAuthenticated} path=\"/dashboard\">\r\n                        <Dashboard />\r\n                    </PrivateRoute>\r\n\r\n                    <Route path=\"/\" component={Login} >\r\n                        {\r\n                            !isAuthenticated ?\r\n                                <Redirect to=\"/login\" /> : <Redirect to=\"/dashboard\" />\r\n                        }\r\n                    </Route>\r\n\r\n                </Switch>\r\n            </Router>\r\n    );\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}