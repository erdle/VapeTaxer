{"version":3,"sources":["logo.svg","Content/Dashboard/Profile.js","utils/errorHandling_ts.ts","Content/Copyright.js","Content/Login.js","services/user.js","Content/Templates.tsx","Content/Dashboard/Stats.tsx","Content/Dashboard/MainRoutes.js","Content/SignUp.js","Content/Dashboard/index.js","Content/PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","makeStyles","theme","root","display","flexDirection","alignItems","minHeight","name","fontSize","avatar","width","height","handleErrors","response","ok","Error","statusText","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","paper","marginTop","spacing","margin","backgroundColor","palette","secondary","main","form","submit","SignIn","classes","useState","email","setEmail","password","setPassword","Container","component","maxWidth","CssBaseline","className","Avatar","onSubmit","event","preventDefault","username","fetch","method","headers","body","JSON","stringify","then","res","json","login","TextField","required","fullWidth","id","label","value","onChange","e","target","autoComplete","autoFocus","type","FormControlLabel","control","Checkbox","Button","disabled","length","Grid","container","item","xs","Box","mt","button","Form","Page","Layout","Section","oneThird","Card","title","DisplayText","size","Routes","match","useRouteMatch","exact","path","Stats","SignUp","setError","useReducer","state","newState","firstName","lastName","phoneNumber","userInput","setUserInput","handleChange","evt","newValue","data","catch","err","toString","sm","justify","Dashboard","searchFieldValue","setSearchFieldValue","history","useHistory","handleSearchChange","useCallback","searchFieldMarkup","TopBar","SearchField","placeholder","topBarMarkup","searchField","navigationMarkup","Navigation","location","items","icon","ArrowLeftMinor","separator","onClick","push","HomeMajor","OrdersMajor","action","ConversationMinor","accessibilityLabel","style","AppProvider","colors","topBar","background","logo","topBarSource","url","contextualSaveBarSource","i18n","Polaris","Frame","skipToContent","ContextualSaveBar","save","discard","DropZone","FileUpload","actionTitleImage","actionHintImage","clearButtonLabel","search","navigation","PrivateRoute","isAuthenticated","children","rest","render","to","App","props","setloggedIn","useEffect","Login","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8pDAAAA,EAAOC,QAAU,IAA0B,kC,4KCMzBC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,UAAW,eAEbC,KAAK,CACHC,SAAS,QAEXC,OAAQ,CACNC,MAAO,GACPC,OAAQ,Q,iJClBCC,EAAe,SAACC,GACzB,IAAKA,EAASC,GACV,MAAMC,MAAMF,EAASG,YAEzB,OAAOH,GCCI,SAASI,IACpB,OACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,MAAM,UACrD,kBACD,kBAACC,EAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,uBAA3B,UAEQ,KACP,IAAIC,MAAOC,cACX,KCIT,IAAMC,EAAY1B,aAAW,SAACC,GAAD,MAAY,CACvC0B,MAAO,CACLC,UAAW3B,EAAM4B,QAAQ,GACzB1B,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdI,OAAQ,CACNqB,OAAQ7B,EAAM4B,QAAQ,GACtBE,gBAAiB9B,EAAM+B,QAAQC,UAAUC,MAE3CC,KAAM,CACJzB,MAAO,OACPkB,UAAW3B,EAAM4B,QAAQ,IAE3BO,OAAQ,CACNN,OAAQ7B,EAAM4B,QAAQ,EAAG,EAAG,QAIjB,SAASQ,IACtB,IAAMC,EAAUZ,IADe,EAELa,mBAAS,IAFJ,mBAExBC,EAFwB,KAEjBC,EAFiB,OAGCF,mBAAS,IAHV,mBAGxBG,EAHwB,KAGdC,EAHc,KAc/B,OACE,kBAACC,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,MACnC,kBAACC,EAAA,EAAD,MACA,yBAAKC,UAAWV,EAAQX,OACtB,kBAACsB,EAAA,EAAD,CAAQD,UAAWV,EAAQ7B,QACzB,kBAAC,IAAD,OAEF,kBAACS,EAAA,EAAD,CAAY2B,UAAU,KAAK1B,QAAQ,MAAnC,WAGA,0BAAM6B,UAAWV,EAAQH,KAAMe,SAfrC,SAAsBC,GACpBA,EAAMC,iBC7CW,SAACC,EAAUX,GACrBY,MAAM,kBAAmB,CAC5BC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CAACN,WAAUX,eACjCkB,KAAKhD,GAAcgD,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UDuCtCC,CAAMvB,EAAOE,KAcP,kBAACsB,EAAA,EAAD,CACE7C,QAAQ,WACRW,OAAO,SACPmC,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACN7D,KAAK,QACL8D,MAAO7B,EACP8B,SAAU,SAAAC,GAAC,OAAI9B,EAAS8B,EAAEC,OAAOH,QACjCI,aAAa,QACbC,WAAS,IAEX,kBAACV,EAAA,EAAD,CACE7C,QAAQ,WACRW,OAAO,SACPmC,UAAQ,EACRC,WAAS,EACT3D,KAAK,WACL6D,MAAM,WACNO,KAAK,WACLR,GAAG,WACHE,MAAO3B,EACP4B,SAAU,SAAAC,GAAC,OAAI5B,EAAY4B,EAAEC,OAAOH,UAEtC,kBAACO,EAAA,EAAD,CACEC,QAAS,kBAACC,EAAA,EAAD,CAAUT,MAAM,WAAWjD,MAAM,YAC1CgD,MAAM,gBAER,kBAACW,EAAA,EAAD,CACEJ,KAAK,SACLT,WAAS,EACTc,WAnDDxC,EAAMyC,OAAS,GAAKvC,EAASuC,OAAS,GAoDrC9D,QAAQ,YACRC,MAAM,UACN4B,UAAWV,EAAQF,QANrB,WAUA,kBAAC8C,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,GACX,kBAAC/D,EAAA,EAAD,CAAMC,KAAK,IAAIJ,QAAQ,SAAvB,qBAIF,kBAAC+D,EAAA,EAAD,CAAME,MAAI,GACR,kBAAC9D,EAAA,EAAD,CAAMC,KAAK,IAAIJ,QAAQ,SACpB,sCAMX,kBAACmE,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACtE,EAAD,Q,OE9GUjB,aAAW,SAAAC,GAAK,MAAK,CACnCuF,OAAQ,CACJ1D,OAAQ7B,EAAM4B,QAAQ,Q,8GCyCf4D,EAtBQ,WAEnB,OAAO,6BACH,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACA,EAAA,EAAOC,QAAR,CAAgBC,UAAQ,GACpB,kBAACC,EAAA,EAAD,CAAMC,MAAM,+BAER,kBAACD,EAAA,EAAKF,QAAN,KACI,kBAACI,EAAA,EAAD,CAAaC,KAAK,SAAlB,kBAKZ,kBAACN,EAAA,EAAOC,QAAR,CAAgBC,UAAQ,QC9BzB,SAASK,IACtB,IAAMC,EAAQC,cAEd,OAAO,kBAAC,IAAD,KAEL,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAI,UAAKH,EAAMG,KAAX,KAAoBzD,UAAW0D,K,sBCC9C7E,EAAY1B,aAAW,SAACC,GAAD,MAAY,CACvC0B,MAAO,CACLC,UAAW3B,EAAM4B,QAAQ,GACzB1B,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdI,OAAQ,CACNqB,OAAQ7B,EAAM4B,QAAQ,GACtBE,gBAAiB9B,EAAM+B,QAAQC,UAAUC,MAE3CC,KAAM,CACJzB,MAAO,OACPkB,UAAW3B,EAAM4B,QAAQ,IAE3BO,OAAQ,CACNN,OAAQ7B,EAAM4B,QAAQ,EAAG,EAAG,QAOjB,SAAS2E,IACtB,IAAMlE,EAAUZ,IADe,EAELa,qBAFK,mBAEjBkE,GAFiB,aAGGC,sBAChC,SAACC,EAAOC,GAAR,mBAAC,eAA0BD,GAAUC,KACrC,CACEC,UAAW,GACXC,SAAU,GACVtE,MAAO,GACPuE,YAAa,GACbrE,SAAU,KAViB,mBAGxBsE,EAHwB,KAGbC,EAHa,KAoB/B,IAAMC,EAAe,SAAAC,GACnB,IAAM5G,EAAO4G,EAAI3C,OAAOjE,KAClB6G,EAAWD,EAAI3C,OAAOH,MAC5B4C,EAAa,eAAG1G,EAAO6G,KAEzB,OACE,kBAACxE,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,MACnC,kBAACC,EAAA,EAAD,MACA,yBAAKC,UAAWV,EAAQX,OACtB,kBAACsB,EAAA,EAAD,CAAQD,UAAWV,EAAQ7B,QACzB,kBAAC,IAAD,OAEF,kBAACS,EAAA,EAAD,CAAY2B,UAAU,KAAK1B,QAAQ,MAAnC,WAGA,0BAAM6B,UAAWV,EAAQH,KAAOe,SArBtC,SAAsBC,GJzCA,IAACkE,EI0CrBlE,EAAMC,kBJ1CeiE,EI2CZL,EJ1CF1D,MAAM,qBAAsB,CAC/BC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU0D,KACtBzD,KAAKhD,GAAcgD,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WIoClBwD,OAAM,SAAAC,GAAG,OAAId,EAASc,EAAIC,iBAoBxC,kBAACtC,EAAA,EAAD,CAAMC,WAAS,EAACtD,QAAS,GACvB,kBAACqD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIoC,GAAI,GACrB,kBAACzD,EAAA,EAAD,CACES,aAAa,QACblE,KAAK,YACLY,QAAQ,WACR8C,UAAQ,EACRC,WAAS,EACTG,MAAO2C,EAAUH,UACjBvC,SAAU4C,EACV9C,MAAM,aACNM,WAAS,KAGb,kBAACQ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIoC,GAAI,GACrB,kBAACzD,EAAA,EAAD,CACE7C,QAAQ,WACR8C,UAAQ,EACRC,WAAS,EACTG,MAAO2C,EAAUF,SACjBxC,SAAU4C,EACV9C,MAAM,YACN7D,KAAK,WACLkE,aAAa,WAGjB,kBAACS,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACrB,EAAA,EAAD,CACE7C,QAAQ,WACR8C,UAAQ,EACRC,WAAS,EACTG,MAAO2C,EAAUxE,MACjB8B,SAAU4C,EACV9C,MAAM,gBACN7D,KAAK,QACLkE,aAAa,WAGjB,kBAACS,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACrB,EAAA,EAAD,CACE7C,QAAQ,WACR8C,UAAQ,EACRC,WAAS,EACT3D,KAAK,WACL6D,MAAM,WACNO,KAAK,WACLN,MAAO2C,EAAUtE,SACjB4B,SAAU4C,EACVzC,aAAa,uBAInB,kBAACM,EAAA,EAAD,CACEJ,KAAK,SACLT,WAAS,EACT/C,QAAQ,YACRC,MAAM,UACN4B,UAAWV,EAAQF,QALrB,WASA,kBAAC8C,EAAA,EAAD,CAAMC,WAAS,EAACuC,QAAQ,YACtB,kBAACxC,EAAA,EAAD,CAAME,MAAI,GACR,kBAAC9D,EAAA,EAAD,CAAMC,KAAK,IAAIJ,QAAQ,SAAvB,wCAOR,kBAACmE,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACtE,EAAD,Q,wDC9HO,SAAS0G,IACVvB,cAAZ,IADkC,EAEc7D,mBAAS,IAFvB,mBAE3BqF,EAF2B,KAETC,EAFS,KAG5BC,EAAUC,cAEVC,EAAqBC,uBACzB,SAACL,GAAD,OAAsBC,EAAoBD,KAC1C,IAkBIM,EACJ,kBAACC,EAAA,EAAOC,YAAR,CACEC,YAAY,SACZhE,MAAOuD,EACPtD,SAAU0D,IAGRM,EAAe,kBAACH,EAAA,EAAD,CAAQI,YAAaL,IAEpCM,EACJ,kBAACC,EAAA,EAAD,CAAYC,SAAS,KACnB,kBAACD,EAAA,EAAW7C,QAAZ,CACE+C,MAAO,CACL,CACEvE,MAAO,kBACPwE,KAAMC,QAIZ,kBAACJ,EAAA,EAAW7C,QAAZ,CACEkD,WAAS,EACT/C,MAAM,UACN4C,MAAO,CACL,CAEEI,QAAQ,WACNjB,EAAQkB,KAAR,gBAEF5E,MAAO,YACPwE,KAAMK,KAER,CAEEF,QAAQ,WACNjB,EAAQkB,KAAR,sBAEF5E,MAAO,SACPwE,KAAMK,KAER,CAEEF,QAAQ,WACNjB,EAAQkB,KAAR,qBAEF5E,MAAO,QACPwE,KAAMK,KAER,CAEEF,QAAQ,WACNjB,EAAQkB,KAAR,wBAEF5E,MAAO,WACPwE,KAAMK,KAER,CAEEF,QAAQ,WACNjB,EAAQkB,KAAR,wBAEF5E,MAAO,WACPwE,KAAMM,MAGVC,OAAQ,CACNP,KAAMQ,IACNC,mBAAoB,sBAO5B,OAAQ,yBAAKC,MAAO,CAAE3I,OAAQ,UAC5B,kBAAC4I,EAAA,EAAD,CACEtJ,MA3FU,CACZuJ,OAAQ,CACNC,OAAQ,CACNC,WAAY,OACZ5H,OAAQ,cAGZ6H,KAAM,CACJjJ,MAAO,GACPkJ,aAAc,YACdC,IAAK,6BACLR,mBAAoB,aACpBS,wBAAyB,cAgFzBC,KAAM,CACJC,QAAS,CACPC,MAAO,CAAEC,cAAe,mBACxBC,kBAAmB,CACjBC,KAAM,OACNC,QAAS,WAEXC,SAAW,CACTC,WAAY,CACVC,iBAAkB,YAClBC,gBAAiB,4BAGrBtC,OAAQ,CACNC,YAAa,CACXsC,iBAAkB,QAClBC,OAAQ,cAMhB,kBAACV,EAAA,EAAD,CAAOR,OAAQnB,EAAcsC,WAAYpC,GACvC,kBAAC7C,EAAA,EAAOC,QAAR,KACE,kBAAC,EAAD,UC9IK,SAASiF,EAAT,GAA+D,IAAvCC,EAAsC,EAAtCA,gBAAiBC,EAAqB,EAArBA,SAAaC,EAAQ,8CACzE,OACE,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,cAAGvC,SAAH,OACNoC,EACEC,EAEA,kBAAC,IAAD,CACEG,GAAG,eCWF,SAASC,EAAIC,GAAQ,IAAD,EACC7I,oBAAS,GADV,mBACd8I,GADc,aAEL9I,oBAAS,GAFJ,mBAEjBkE,GAFiB,aAGPlE,mBAAS,MAHF,6BAW/B,OAJA+I,qBAAU,WPPHhI,MAAM,gBAAgBM,KAAKhD,GAAcgD,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UOQpDF,MAAK,SAAAyD,GAAI,OAAIgE,EAAYhE,MAAOC,OAAM,SAAAC,GAAG,OAAId,EAASc,EAAIC,iBACnE,IAGK,kBAAC,IAAD,KACI,kBAAC,IAAD,KAEI,kBAAC,IAAD,CAAOlB,KAAK,SAASzD,UAAW0I,IAChC,kBAAC,IAAD,CAAOjF,KAAK,UAAUzD,UAAW2D,IACjC,kBAACqE,EAAD,CAAcC,iBAXN,EAWwCxE,KAAK,cACjD,kBAACqB,EAAD,OAGJ,kBAAC,IAAD,CAAOrB,KAAK,IAAIzD,UAAW0I,GAGY,kBAAC,IAAD,CAAUL,GAAG,kBCpCpDM,QACW,cAA7BC,OAAO/C,SAASgD,UAEe,UAA7BD,OAAO/C,SAASgD,UAEhBD,OAAO/C,SAASgD,SAASvF,MACvB,2DCZNwF,IAASV,OAAO,kBAAC,EAAD,MAASW,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpI,MAAK,SAAAqI,GACjCA,EAAaC,kB","file":"static/js/main.f60e2a52.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Avatar, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    minHeight: 'fit-content'\r\n  },\r\n  name:{\r\n    fontSize:\"20px\"\r\n  },\r\n  avatar: {\r\n    width: 60,\r\n    height: 60\r\n  }\r\n}));\r\n\r\nconst Profile = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const user = {\r\n    name: 'Jane Doe',\r\n    avatar: '/avatar_11.png',\r\n    bio: 'Director'\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Avatar\r\n        alt=\"Person\"\r\n        className={classes.avatar}\r\n        component={RouterLink}\r\n        src={user.avatar}\r\n        to=\"/settings\"\r\n      />\r\n      <Typography\r\n        className={classes.name}\r\n        variant=\"h5\"\r\n      >\r\n        {user.name}\r\n      </Typography>\r\n      <Typography variant=\"body2\">{user.bio}</Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Profile;","export const handleErrors = (response: Response) => {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}","\r\nimport React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nexport default function Copyright() {\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        {'Copyright © '}\r\n        <Link color=\"inherit\" href=\"https://qwerty.com/\">\r\n          QWERTY\r\n        </Link>{' '}\r\n        {new Date().getFullYear()}\r\n        {'.'}\r\n      </Typography>\r\n    )\r\n  }","import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { login } from \"../services/user\"\r\nimport Copyright from \"./Copyright\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  function validateForm() {\r\n    return email.length > 0 && password.length > 0;\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    login(email, password)\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={e => setEmail(e.target.value)}\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            disabled={!validateForm()}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","import { handleErrors } from \"../utils/errorHandling_ts\"\r\n\r\nexport const login = (username, password)=>{\r\n    return fetch(\"/api/user/login\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({username, password})\r\n    }).then(handleErrors).then(res => res.json())\r\n\r\n}\r\n\r\nexport const register = (data)=>{\r\n    return fetch(\"/api/user/register\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n    }).then(handleErrors).then(res => res.json())\r\n}\r\n\r\nexport const gethi = (data)=>{\r\n    return fetch(\"/api/user/hi\").then(handleErrors).then(res => res.json())\r\n}","import React from \"react\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\n\r\n\r\n\r\nexport default function Templates() {\r\n    let history = useHistory();\r\n    const classes = useStyles();\r\n\r\n    function handleClick() {\r\n        history.push(\"/home\");\r\n    }\r\n    return <div>\r\n        Templates go here\r\n        <Button\r\n            onClick={handleClick}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            startIcon={<AddIcon />}\r\n        >\r\n            New\r\n        </Button>\r\n    </div>\r\n}","import React, { useCallback, useState, useEffect } from 'react';\r\nimport {\r\n    Select,\r\n    Layout,\r\n    FormLayout,\r\n    TextField,\r\n    Banner,\r\n    Card,\r\n    Stack,\r\n    Button,\r\n    Collapsible,\r\n    TextContainer,\r\n    Checkbox,\r\n    Icon,\r\n    Autocomplete,\r\n    Scrollable,\r\n    Tag,\r\n    SelectOption,\r\n    ContextualSaveBar,\r\n    Link,\r\n    ResourceList,\r\n    DisplayText,\r\n    Page\r\n} from '@shopify/polaris';\r\n\r\nimport { XYPlot, XAxis, YAxis, HorizontalGridLines, LineSeries, RadialChart } from 'react-vis';\r\n\r\nconst Form: React.FC = () => {\r\n    const myData = [{ angle: 30, label: \"asdasd\", color: \"3\" }, { angle: 5 }]\r\n    return <div>\r\n        <Page>\r\n            <Layout>\r\n                <Layout.Section oneThird>\r\n                    <Card title=\"Some cool stuff coming soon\">\r\n\r\n                        <Card.Section>\r\n                            <DisplayText size=\"large\">Coming soon</DisplayText>\r\n                        </Card.Section>\r\n                        \r\n                    </Card>\r\n                </Layout.Section>\r\n                <Layout.Section oneThird>\r\n                   \r\n                </Layout.Section>\r\n            </Layout >\r\n        </Page>\r\n    </div >\r\n}\r\n\r\nexport default Form","import React from \"react\"\r\nimport { BrowserRouter as Router, Route, Redirect, useParams, Switch } from \"react-router-dom\"\r\nimport Templates from \"../Templates\"\r\nimport TemplateDetails from \"../TemplateDetails\"\r\nimport Users from \"../Users\"\r\nimport ViewUser from \"../ViewUser\"\r\n\r\nimport Stats from \"./Stats\"\r\nimport { useRouteMatch } from 'react-router-dom'\r\n\r\n\r\nexport default function Routes() {\r\n  const match = useRouteMatch();\r\n\r\n  return <Switch>\r\n\r\n    <Route exact path={`${match.path}/`} component={Stats} />\r\n\r\n  </Switch>\r\n}","import React, { useReducer,useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Copyright from \"./Copyright\"\r\nimport { register } from \"../services/user\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n  const [error, setError] = useState();\r\n  const [userInput, setUserInput] = useReducer(\r\n    (state, newState) => ({ ...state, ...newState }),\r\n    {\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      phoneNumber: '',\r\n      password: ''\r\n    }\r\n  );\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    register(userInput).catch(err => setError(err.toString()));\r\n  }\r\n\r\n\r\n  const handleChange = evt => {\r\n    const name = evt.target.name;\r\n    const newValue = evt.target.value;\r\n    setUserInput({ [name]: newValue });\r\n  }\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form}  onSubmit={handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                value={userInput.firstName}\r\n                onChange={handleChange}\r\n                label=\"First Name\"\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                value={userInput.lastName}\r\n                onChange={handleChange}\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                value={userInput.email}\r\n                onChange={handleChange}\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                value={userInput.password}\r\n                onChange={handleChange}\r\n                autoComplete=\"current-password\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","import React, { Component, useState, useCallback } from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { BrowserRouter as Router, Route, Switch, useRouteMatch,useHistory } from \"react-router-dom\";\r\nimport LeftMenu from '../../LeftMenu'\r\nimport MainRoutes from \"./MainRoutes\"\r\nimport { AppProvider, TopBar, Frame, Layout, ContextualSaveBar } from '@shopify/polaris';\r\nimport { ArrowLeftMinor, ConversationMinor, ProductsMajor, HomeMajor, OrdersMajor, CollectionsMajor, InventoryMajor } from '@shopify/polaris-icons';\r\n\r\nimport '@shopify/polaris/dist/styles.css';\r\nimport { Navigation } from '@shopify/polaris';\r\n\r\n\r\nexport default function Dashboard() {\r\n  let match = useRouteMatch();\r\n  const [searchFieldValue, setSearchFieldValue] = useState('');\r\n  const history = useHistory();\r\n\r\n  const handleSearchChange = useCallback(\r\n    (searchFieldValue) => setSearchFieldValue(searchFieldValue),\r\n    [],\r\n  );\r\n  const theme = {\r\n    colors: {\r\n      topBar: {\r\n        background: '#fff',\r\n        margin: '10px 10px'\r\n      },\r\n    },\r\n    logo: {\r\n      width: 37,\r\n      topBarSource: '/logo.svg',\r\n      url: 'https://vapejuicedepot.com',\r\n      accessibilityLabel: 'ENDS taxer',\r\n      contextualSaveBarSource: '/logo.svg',\r\n    },\r\n  };\r\n\r\n  const searchFieldMarkup = (\r\n    <TopBar.SearchField\r\n      placeholder=\"Search\"\r\n      value={searchFieldValue}\r\n      onChange={handleSearchChange}\r\n    />\r\n  );\r\n  const topBarMarkup = <TopBar searchField={searchFieldMarkup} />;\r\n\r\n  const navigationMarkup = (\r\n    <Navigation location=\"/\">\r\n      <Navigation.Section\r\n        items={[\r\n          {\r\n            label: 'Back to Shopify',\r\n            icon: ArrowLeftMinor,\r\n          },\r\n        ]}\r\n      />\r\n      <Navigation.Section\r\n        separator\r\n        title=\"Prodify\"\r\n        items={[\r\n          {\r\n            // url: `${match.url}`,\r\n            onClick:()=>{\r\n              history.push(`/dashboard/`)\r\n            },\r\n            label: 'Dashboard',\r\n            icon: HomeMajor,\r\n          },\r\n          {\r\n            // url: `${match.url}`,\r\n            onClick:()=>{\r\n              history.push(`/dashboard/States`)\r\n            },\r\n            label: 'States',\r\n            icon: HomeMajor,\r\n          },\r\n          {\r\n            // url: `${match.url}`,\r\n            onClick:()=>{\r\n              history.push(`/dashboard/Taxes`)\r\n            },\r\n            label: 'Taxes',\r\n            icon: HomeMajor,\r\n          },\r\n          {\r\n            // url: `${match.url}`,\r\n            onClick:()=>{\r\n              history.push(`/dashboard/TaxRates`)\r\n            },\r\n            label: 'TaxRates',\r\n            icon: HomeMajor,\r\n          },\r\n          {\r\n            // url: `${match.url}/Settings`,\r\n            onClick:()=>{\r\n              history.push(`/dashboard/Settings`)\r\n            },\r\n            label: 'Settings',\r\n            icon: OrdersMajor,\r\n          },\r\n        ]}\r\n        action={{\r\n          icon: ConversationMinor,\r\n          accessibilityLabel: 'Contact support',\r\n          //   onClick: toggleModalActive,\r\n        }}\r\n      />\r\n    </Navigation>\r\n  );\r\n\r\n  return (<div style={{ height: '250px' }}>\r\n    <AppProvider\r\n      theme={theme}\r\n      i18n={{\r\n        Polaris: {\r\n          Frame: { skipToContent: 'Skip to content' },\r\n          ContextualSaveBar: {\r\n            save: 'Save',\r\n            discard: 'Discard',\r\n          },\r\n          DropZone:  {\r\n            FileUpload: {\r\n              actionTitleImage: \"Add media\",\r\n              actionHintImage: \"or drop files to upload\"\r\n            }\r\n          },\r\n          TopBar: {\r\n            SearchField: {\r\n              clearButtonLabel: 'Clear',\r\n              search: 'Search',\r\n            },\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      <Frame topBar={topBarMarkup} navigation={navigationMarkup}>\r\n        <Layout.Section>\r\n          <MainRoutes />\r\n        </Layout.Section>\r\n      </Frame>\r\n    </AppProvider>\r\n  </div>)\r\n}","import React from 'react';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\n\r\nexport default function PrivateRoute({ isAuthenticated, children, ...rest }) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={({ location }) =>\r\n          isAuthenticated ? (\r\n            children\r\n          ) : (\r\n            <Redirect\r\n              to=\"/login\"\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n  ","import React, { Component, useState, useEffect } from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport logo from './logo.svg';\r\nimport clsx from 'clsx';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport './App.css';\r\nimport LeftMenu from './LeftMenu'\r\nimport Routes from './Routes'\r\nimport Login from \"./Content/Login\";\r\nimport SignUp from \"./Content/SignUp\";\r\nimport Dashboard from \"./Content/Dashboard\"\r\nimport { gethi } from \"./services/user\"\r\nimport PrivateRoute from \"./Content/PrivateRoute\"\r\nimport \"@shopify/polaris/dist/styles.css\";\r\n\r\nexport default function App(props) {\r\n    const [loggedIn, setloggedIn] = useState(false);\r\n    const [error, setError] = useState(false);\r\n    const [user, setUser] = useState(null);\r\n\r\n    //TODO notimplemented\r\n    const isAuthenticated = true;\r\n    useEffect(() => {\r\n        gethi().then(data => setloggedIn(data)).catch(err => setError(err.toString()));\r\n    }, []);\r\n\r\n    return (\r\n            <Router>\r\n                <Switch>\r\n\r\n                    <Route path=\"/login\" component={Login} />\r\n                    <Route path=\"/signup\" component={SignUp} />\r\n                    <PrivateRoute isAuthenticated={isAuthenticated} path=\"/dashboard\">\r\n                        <Dashboard />\r\n                    </PrivateRoute>\r\n\r\n                    <Route path=\"/\" component={Login} >\r\n                        {\r\n                            !isAuthenticated ?\r\n                                <Redirect to=\"/login\" /> : <Redirect to=\"/dashboard\" />\r\n                        }\r\n                    </Route>\r\n\r\n                </Switch>\r\n            </Router>\r\n    );\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}